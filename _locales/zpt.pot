# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-05 05:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../zpt.rst:4
msgid "Page Templates"
msgstr ""

#: ../zpt.rst:0
msgid "Get the code!"
msgstr ""

#: ../zpt.rst:8
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout directory:"
msgstr ""

#: ../zpt.rst:15
msgid "In this part you will:"
msgstr ""

#: ../zpt.rst:17
msgid "Learn to write page templates"
msgstr ""

#: ../zpt.rst:20
msgid "Topics covered:"
msgstr ""

#: ../zpt.rst:22
#: ../zpt.rst:85
msgid "TAL and TALES"
msgstr ""

#: ../zpt.rst:23
msgid "METAL"
msgstr ""

#: ../zpt.rst:24
#: ../zpt.rst:964
msgid "Chameleon"
msgstr ""

#: ../zpt.rst:27
msgid "Page Templates are HTML files with some additional information, written in TAL, METAL and TALES."
msgstr ""

#: ../zpt.rst:29
msgid "Page templates must be valid xml."
msgstr ""

#: ../zpt.rst:31
msgid "The three languages are:"
msgstr ""

#: ../zpt.rst:33
msgid "TAL: \"Template Attribute Language\""
msgstr ""

#: ../zpt.rst:35
msgid "Templating XML/HTML using special attributes"
msgstr ""

#: ../zpt.rst:37
msgid "Using TAL we include expressions within html"
msgstr ""

#: ../zpt.rst:39
msgid "TALES: \"TAL Expression Syntax\""
msgstr ""

#: ../zpt.rst:41
msgid "defines the syntax and semantics of these expressions"
msgstr ""

#: ../zpt.rst:43
msgid "METAL: \"Macro Expansion for TAL\""
msgstr ""

#: ../zpt.rst:45
msgid "this enables us to combine, re-use and nest templates together"
msgstr ""

#: ../zpt.rst:47
msgid "TAL and METAL are written like html attribues (href, src, title). TALES are written like the values of html attributes. A typical TAL attribute looks like this:"
msgstr ""

#: ../zpt.rst:55
msgid "It's used to modify the output:"
msgstr ""

#: ../zpt.rst:61
#: ../zpt.rst:112
msgid "results in:"
msgstr ""

#: ../zpt.rst:67
msgid "Let's try it. Open the file ``training.pt`` and add:"
msgstr ""

#: ../zpt.rst:87
msgid "Let's add some magic and modify the <p>-tag:"
msgstr ""

#: ../zpt.rst:93
msgid "This will result in:"
msgstr ""

#: ../zpt.rst:99
msgid "Without restarting Plone open http://localhost:8080/Plone/@@training."
msgstr ""

#: ../zpt.rst:101
msgid "The same happens with attributes. Replace the <p>-line with:"
msgstr ""

#: ../zpt.rst:120
msgid "We used three TAL-Attributes here. This is the complete list of TAL-attributes:"
msgstr ""

#: ../zpt.rst:123
msgid "``tal:define``"
msgstr ""

#: ../zpt.rst:123
msgid "define variables. We definded the variable ``a_fine_url`` to the string \"http://www.ploneconf.org\""
msgstr ""

#: ../zpt.rst:126
msgid "``tal:content``"
msgstr ""

#: ../zpt.rst:126
msgid "replace the content of an element. We replaced the default content above with \"An even better conference\""
msgstr ""

#: ../zpt.rst:129
msgid "``tal:attributes``"
msgstr ""

#: ../zpt.rst:129
msgid "dynamically change element attributes. We set the html attribute ``href`` to the value of the variable ``a_fine_url``"
msgstr ""

#: ../zpt.rst:132
#: ../zpt.rst:181
msgid "``tal:condition``"
msgstr ""

#: ../zpt.rst:132
#: ../zpt.rst:181
msgid "tests whether the expression is true or false."
msgstr ""

#: ../zpt.rst:135
#: ../zpt.rst:217
msgid "``tal:repeat``"
msgstr ""

#: ../zpt.rst:135
#: ../zpt.rst:217
msgid "repeats an iterable element, in our case the list of talks."
msgstr ""

#: ../zpt.rst:138
msgid "``tal:replace``"
msgstr ""

#: ../zpt.rst:138
msgid "replace the content of an element, like ``tal:content`` does, but removes the element only leaving the content."
msgstr ""

#: ../zpt.rst:141
#: ../zpt.rst:410
msgid "``tal:omit-tag``"
msgstr ""

#: ../zpt.rst:141
msgid "remove an element, leaving the content of the element."
msgstr ""

#: ../zpt.rst:145
#: ../zpt.rst:413
msgid "``tal:on-error``"
msgstr ""

#: ../zpt.rst:144
#: ../zpt.rst:413
msgid "handle errors."
msgstr ""

#: ../zpt.rst:148
msgid "python expressions"
msgstr ""

#: ../zpt.rst:150
msgid "So far we only used one TALES expression (the ``string:`` bit). Let's use a different TALES expression now. With ``python:`` we can use python code. A simple example:"
msgstr ""

#: ../zpt.rst:159
msgid "And another:"
msgstr ""

#: ../zpt.rst:171
msgid "With python expressions"
msgstr ""

#: ../zpt.rst:173
msgid "you can only write single statements"
msgstr ""

#: ../zpt.rst:174
msgid "you could import things but you should not (example: ``tal:define=\"something modules/Products.PythonScripts/something;``)."
msgstr ""

#: ../zpt.rst:178
msgid "tal:condition"
msgstr ""

#: ../zpt.rst:183
msgid "If it's true, then the tag is rendered."
msgstr ""

#: ../zpt.rst:184
msgid "If it's false then the tag **and all its children** are removed and no longer evaluated."
msgstr ""

#: ../zpt.rst:185
msgid "We can reverse the logic by prepending a ``not:`` to the expression."
msgstr ""

#: ../zpt.rst:187
msgid "Let's add another TAL Attribute to our above example::"
msgstr ""

#: ../zpt.rst:191
msgid "We could also test for the number of talks::"
msgstr ""

#: ../zpt.rst:195
msgid "or if a certain talk is in the list of talks::"
msgstr ""

#: ../zpt.rst:201
msgid "tal:repeat"
msgstr ""

#: ../zpt.rst:203
msgid "Let's try another attribute:"
msgstr ""

#: ../zpt.rst:219
msgid "We change the markup a little to construct a list in which there is an ``<li>`` for every talk:"
msgstr ""

#: ../zpt.rst:238
msgid "path expressions"
msgstr ""

#: ../zpt.rst:240
msgid "Regarding TALES so far we used ``string:`` or ``python:`` or only variables. The next and most common expression are path expressions. Optionally you can start a path expression with ``path:``"
msgstr ""

#: ../zpt.rst:242
msgid "Every path expression starts with a variable name. It can either be an object like ``context``, ``view`` or ``template`` or a variable defined earlier like ``talk``."
msgstr ""

#: ../zpt.rst:244
msgid "After the variable we add a slash ``/`` and the name of a sub-object, attribute or callable. The '/' is used to end the name of an object and the start of the property name. Properties themselves may be objects that in turn have properties."
msgstr ""

#: ../zpt.rst:250
msgid "We can chain several of those to get to the information we want."
msgstr ""

#: ../zpt.rst:256
msgid "This would return the value of the form dictionary of the HTTPRequest object. Useful for form handling."
msgstr ""

#: ../zpt.rst:258
msgid "The ``|`` (\"or\") character is used to find an alternative value to a path if the first path evaluates to ``nothing`` or does not exist."
msgstr ""

#: ../zpt.rst:264
msgid "This returns the id of the context if it has no title."
msgstr ""

#: ../zpt.rst:270
msgid "This returns nothing if there is no 'average_rating' for a talk. What will not work is ``tal:content=\"python:talk['average_rating'] or ''\"``. Who knows what this would yield?"
msgstr ""

#: ../zpt.rst:274
msgid "We'll get ``KeyError: 'average_rating'``. It is very bad practice to use ``|`` too often since it will swallow errors like a typo in ``tal:content=\"talk/averange_ratting |Â nothing\"`` and you might wonder why there are no ratings later on..."
msgstr ""

#: ../zpt.rst:276
msgid "You can't and should not use it to prevent errors like a try/except block."
msgstr ""

#: ../zpt.rst:278
msgid "There are several **built in variables**  that can be used in paths:"
msgstr ""

#: ../zpt.rst:280
msgid "The most frequently used one is ``nothing`` which is the equivalent to None"
msgstr ""

#: ../zpt.rst:288
msgid "A dict of all the available variables is ``econtext``"
msgstr ""

#: ../zpt.rst:301
msgid "In Plone 4 that used to be ``CONTEXTS``"
msgstr ""

#: ../zpt.rst:312
msgid "Useful for debugging :-)"
msgstr ""

#: ../zpt.rst:316
msgid "Pure TAL blocks"
msgstr ""

#: ../zpt.rst:318
msgid "We can use TAL attributes without HTML Tags. This is useful when we don't need to add any tags to the markup"
msgstr ""

#: ../zpt.rst:320
msgid "Syntax:"
msgstr ""

#: ../zpt.rst:326
msgid "Examples:"
msgstr ""

#: ../zpt.rst:342
msgid "handling complex data in templates"
msgstr ""

#: ../zpt.rst:344
msgid "Let's move on to a little more complex data. And to another TAL attribute:"
msgstr ""

#: ../zpt.rst:347
msgid "tal:replace"
msgstr ""

#: ../zpt.rst:347
msgid "replace the content of an element and removes the element only leaving the content."
msgstr ""

#: ../zpt.rst:349
msgid "Example:"
msgstr ""

#: ../zpt.rst:358
msgid "this results in:"
msgstr ""

#: ../zpt.rst:366
msgid "``tal:replace`` drops its own base tag in favor of the result of the TALES expression. Thus the original ``<img... >`` is replaced. But the result is escaped by default."
msgstr ""

#: ../zpt.rst:368
msgid "To prevent escaping we use ``structure``"
msgstr ""

#: ../zpt.rst:377
msgid "Now let's emulate a typical Plone structure by creating a dictionary."
msgstr ""

#: ../zpt.rst:405
msgid "We emulate a list of talks and display information about them in a table. We'll get back to the list of talks later when we use the real talk objects that we created with dexterity."
msgstr ""

#: ../zpt.rst:407
msgid "To complete the list here are the TAL attributes we have not yet used:"
msgstr ""

#: ../zpt.rst:410
msgid "Omit the element tag, leaving only the inner content."
msgstr ""

#: ../zpt.rst:415
msgid "When an element has multiple TAL attributes, they are executed in this order:"
msgstr ""

#: ../zpt.rst:417
msgid "define"
msgstr ""

#: ../zpt.rst:418
msgid "condition"
msgstr ""

#: ../zpt.rst:419
msgid "repeat"
msgstr ""

#: ../zpt.rst:420
msgid "content or replace"
msgstr ""

#: ../zpt.rst:421
msgid "attributes"
msgstr ""

#: ../zpt.rst:422
msgid "omit-tag"
msgstr ""

#: ../zpt.rst:426
msgid "Plone 5"
msgstr ""

#: ../zpt.rst:428
msgid "Plone 5 uses a new rendering engine called `Chameleon <http://www.pagetemplates.org/>`_. Using the integration layer `five.pt <https://pypi.python.org/pypi/five.pt>`_ it is fully compatible with the normal TAL syntax but offers some additional features:"
msgstr ""

#: ../zpt.rst:430
msgid "You can use ``${...}`` as short-hand for text insertion in pure html effectively making ``tal:content`` and ``tal:attributes`` obsolete. Here are some examples:"
msgstr ""

#: ../zpt.rst:432
msgid "Plone 4 and Plone 5:"
msgstr ""

#: ../zpt.rst:443
msgid "Plone 5 (and Plone 4 with five.pt) :"
msgstr ""

#: ../zpt.rst:453
msgid "You can also add pure python into the templates:"
msgstr ""

#: ../zpt.rst:472
msgid "Exercise 1"
msgstr ""

#: ../zpt.rst:474
msgid "Modify the following template and one by one solve the following problems: :"
msgstr ""

#: ../zpt.rst:506
msgid "Display the subjects as comma-separated."
msgstr ""

#: ../zpt.rst:508
#: ../zpt.rst:544
#: ../zpt.rst:584
#: ../zpt.rst:633
#: ../zpt.rst:677
#: ../zpt.rst:715
#: ../zpt.rst:755
msgid "Solution"
msgstr ""

#: ../zpt.rst:542
msgid "Turn the title in a link to the url of the talk if there is one."
msgstr ""

#: ../zpt.rst:582
msgid "If there is no url turn it into a link to a google search for that talk's title"
msgstr ""

#: ../zpt.rst:623
msgid "Add alternating the css classes 'odd' and 'even' to the <tr>. (``repeat.<name of item in loop>.odd`` is True if the ordinal index of the current iteration is an odd number)"
msgstr ""

#: ../zpt.rst:625
msgid "Use some css to prove your solution:"
msgstr ""

#: ../zpt.rst:675
msgid "Only use python expressions."
msgstr ""

#: ../zpt.rst:713
msgid "Use the new syntax of Plone 5"
msgstr ""

#: ../zpt.rst:753
msgid "Sort the talks alphabetically by title"
msgstr ""

#: ../zpt.rst:797
msgid "METAL and macros"
msgstr ""

#: ../zpt.rst:799
msgid "Why is our output so ugly? How do we get our html to render in Plone the UI?"
msgstr ""

#: ../zpt.rst:801
msgid "We use METAL (Macro Extension to TAL) to define slots that we can fill and macros that we can reuse."
msgstr ""

#: ../zpt.rst:803
msgid "We add to the ``<html>`` tag::"
msgstr ""

#: ../zpt.rst:807
msgid "And then wrap the code we want to put in the content area of Plone in:"
msgstr ""

#: ../zpt.rst:815
msgid "This will put our code in a section defined in the main_template called \"content-core\"."
msgstr ""

#: ../zpt.rst:817
msgid "The template should now look like this:"
msgstr ""

#: ../zpt.rst:860
msgid "Since the training only used content from the template, not from the context that it is called on it makes little sense to have the edit bar. We hide it by setting the respective variable on the current request with python to 1: ``request.set('disable_border', 1)``."
msgstr ""

#: ../zpt.rst:862
msgid "The easiest way to do this is to define a dummy variable. Dummy because it is never used except to allow us to execute some code."
msgstr ""

#: ../zpt.rst:871
msgid "macros in browser views"
msgstr ""

#: ../zpt.rst:873
msgid "Define a macro in a new file ``macros.pt``"
msgstr ""

#: ../zpt.rst:881
msgid "Register it as a simple BrowserView in zcml:"
msgstr ""

#: ../zpt.rst:892
msgid "Reuse the macro in the template ``training.pt``:"
msgstr ""

#: ../zpt.rst:900
msgid "Which is the same as:"
msgstr ""

#: ../zpt.rst:912
msgid "Accessing Plone from the template"
msgstr ""

#: ../zpt.rst:914
msgid "In our template we have access to the context object on which the view is called on, the browser view itself (i.e. all python methods we'll put in the view later on), the request and response objects and with these we can get almost anything."
msgstr ""

#: ../zpt.rst:916
msgid "In templates we can also access other browser views. Some of those exist to provide easy access to methods we often need::"
msgstr ""

#: ../zpt.rst:924
msgid "``@@plone_context_state``"
msgstr ""

#: ../zpt.rst:924
msgid "The BrowserView ``plone.app.layout.globals.context.ContextState`` holds useful methods having to do with the current context object such as ``is_default_page``"
msgstr ""

#: ../zpt.rst:927
msgid "``@@plone_portal_state``"
msgstr ""

#: ../zpt.rst:927
msgid "The BrowserView ``plone.app.layout.globals.portal.PortalState`` holds methods for the portal like ``portal_url``"
msgstr ""

#: ../zpt.rst:930
msgid "``@@plone_tools``"
msgstr ""

#: ../zpt.rst:930
msgid "The BrowserView ``plone.app.layout.globals.tools.Tools`` gives access to the most importan tools like ``plone_tools/catalog``"
msgstr ""

#: ../zpt.rst:932
msgid "These are very widely used and there are many more."
msgstr ""

#: ../zpt.rst:938
msgid "What we missed"
msgstr ""

#: ../zpt.rst:940
msgid "There are some things we did not cover so far:"
msgstr ""

#: ../zpt.rst:943
msgid "``tal:condition=\"exists:expression\"``"
msgstr ""

#: ../zpt.rst:943
msgid "checks if an object or an attribute exists (seldom used)"
msgstr ""

#: ../zpt.rst:946
msgid "``tal:condition=\"nocall:context\"``"
msgstr ""

#: ../zpt.rst:946
msgid "to explicitly not call a callable."
msgstr ""

#: ../zpt.rst:948
msgid "If we refer to content objects, without using the nocall: modifier these objects are unnecessarily rendered in memory as the expression is evaluated."
msgstr ""

#: ../zpt.rst:951
msgid "``i18n:translate`` and ``i18n:domain``"
msgstr ""

#: ../zpt.rst:951
msgid "the strings we put in templates can be translated automatically."
msgstr ""

#: ../zpt.rst:953
msgid "There is a lot more about TAL, TALES and METAL that we have not covered. You'll only learn it if you keep reading, writing and customizing templates."
msgstr ""

#: ../zpt.rst:957
msgid "http://docs.plone.org/adapt-and-extend/theming/templates_css/template_basics.html"
msgstr ""

#: ../zpt.rst:958
msgid "Using Zope Page Templates: http://docs.zope.org/zope2/zope2book/ZPT.html"
msgstr ""

#: ../zpt.rst:959
msgid "Zope Page Templates Reference: http://docs.zope.org/zope2/zope2book/AppendixC.html"
msgstr ""

#: ../zpt.rst:966
msgid "Chameleon is the successor of Zope Page Templates, is used in Plone 5 and can be used in Plone 4 as an add-on."
msgstr ""

#: ../zpt.rst:968
msgid "Plip for Chameleon: https://dev.plone.org/ticket/12198"
msgstr ""

#: ../zpt.rst:969
msgid "Homepage: http://www.pagetemplates.org/"
msgstr ""

#: ../zpt.rst:970
msgid "Addon for Plone 4: `five.pt <https://pypi.python.org/pypi/five.pt>`_"
msgstr ""

#: ../zpt.rst:972
msgid "In Plone 4 uses the default ZPT where some features are missing."
msgstr ""

