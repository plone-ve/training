# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-22 16:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../dexterity_2.rst:2
msgid "Dexterity Types II: Growing up"
msgstr ""

#: ../dexterity_2.rst:0
msgid "Get the code!"
msgstr ""

#: ../dexterity_2.rst:6
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout-directory:"
msgstr ""

#: ../dexterity_2.rst:13
msgid "The existing talks are still lacking some functionality we want to use."
msgstr ""

#: ../dexterity_2.rst:15
msgid "In this part we will:"
msgstr ""

#: ../dexterity_2.rst:17
msgid "add a marker-interface to our talk-type"
msgstr ""

#: ../dexterity_2.rst:18
msgid "create custom catalog-indexes"
msgstr ""

#: ../dexterity_2.rst:19
msgid "query the catalog for them"
msgstr ""

#: ../dexterity_2.rst:20
msgid "enable some more default-features for our type"
msgstr ""

#: ../dexterity_2.rst:24
msgid "Add a marker-interface to the talk-type"
msgstr ""

#: ../dexterity_2.rst:27
msgid "Marker Interfaces"
msgstr ""

#: ../dexterity_2.rst:29
msgid "The content-type `Talk` is not yet a first-class citizen because it does not implement his own interface. Interfaces are like name-tags, telling other elements who and what you are and what you can do. A marker interface is like such a nametag. The talks actually have a auto-generated marker-interface ``plone.dexterity.schema.generated.Plone_0_talk``."
msgstr ""

#: ../dexterity_2.rst:31
msgid "The problem is that the name of the Plone-instance ``Plone`` is part of that interface-name. If you now moved these types to a site with another name, code that uses these Interfaces would no longer find the objects in question."
msgstr ""

#: ../dexterity_2.rst:33
msgid "To solve this we add a new file ``interfaces.py``:"
msgstr ""

#: ../dexterity_2.rst:45
msgid "``ITalk`` is a marker-interface. We can bind Views and Viewlets to content that provide these interfaces. Lets see how we can provide this Interface. There are two solution for this."
msgstr ""

#: ../dexterity_2.rst:47
msgid "Let them be instances of a class that implements this Interface."
msgstr ""

#: ../dexterity_2.rst:48
msgid "Register this interface as a behavior and enable it on talks."
msgstr ""

#: ../dexterity_2.rst:50
msgid "The first option has a important drawback: Only new talks would be instances of the new class. We would either have to migrate the existing talks or delete them."
msgstr ""

#: ../dexterity_2.rst:52
msgid "So lets register the interface as a behavior in ``behaviors/configure.zcml``"
msgstr ""

#: ../dexterity_2.rst:62
msgid "And enable it on the type in ``profiles/default/types/talk.xml``"
msgstr ""

#: ../dexterity_2.rst:75
msgid "Either reinstall the addon, apply the behavior by hand or run a upgrade-step (see below) and the interface will be there."
msgstr ""

#: ../dexterity_2.rst:77
msgid "Then we can safely bind the talkview to the new marker interface."
msgstr ""

#: ../dexterity_2.rst:91
msgid "Now the ``/talkview`` can only be used on objects that implement said interface. We can now also query the catalog for objects providing this interface ``catalog(object_provides=\"ploneconf.site.interfaces.ITalk\")``. The `talklistview` and the `demoview` do not get this constraint since they are not only used on talks."
msgstr ""

#: ../dexterity_2.rst:95
msgid "Just for completeness sake, this is what would have to happen for the first option:"
msgstr ""

#: ../dexterity_2.rst:97
msgid "Create a new class that inherits from ``plone.dexterity.content.Container`` and implements the marker interface."
msgstr ""

#: ../dexterity_2.rst:108
msgid "Modify the class for new talks in ``profiles/default/types/talk.xml``"
msgstr ""

#: ../dexterity_2.rst:120
msgid "Create a upgrade step to modify the class of existing types. A code-example on how to do this is in `ftw.upgrade <https://github.com/4teamwork/ftw.upgrade/blob/master/ftw/upgrade/step.py#L270>`_."
msgstr ""

#: ../dexterity_2.rst:123
msgid "Upgrade-steps"
msgstr ""

#: ../dexterity_2.rst:125
msgid "When projects evolve you'll sometimes have to modify various things while the site is already up and brimming with content and users. Upgrade steps are pieces of code that run when upgrading from one version of a addon to a newer one. They can do just about anything."
msgstr ""

#: ../dexterity_2.rst:127
msgid "We will create a upgrade step that"
msgstr ""

#: ../dexterity_2.rst:129
msgid "runs the typeinfo-step (i.e. loads the GenericSetup configuration stores in ``profiles/default/types.xml`` and ``profiles/default/types/...`` so we don't have to reinstall the addon to have our changes from above take effect) and"
msgstr ""

#: ../dexterity_2.rst:130
msgid "cleans up some content that might be scattered around the site in the early stages of creating it. We will move all talks to a folder ``talks`` (unless they already are there)."
msgstr ""

#: ../dexterity_2.rst:132
msgid "Upgrade steps are usually registered in their own zcml-file. Create ``upgrades.zcml``"
msgstr ""

#: ../dexterity_2.rst:155
msgid "The upgrade step bumps the verion-number of the GenericSetup profile of ploneconf.site from 1 to 1001. The version is stored in ``profiles/default/metadata.xml``. Change it to"
msgstr ""

#: ../dexterity_2.rst:161
msgid "Include the new ``upgrades.zcml`` in our ``configure.zcml`` by adding:"
msgstr ""

#: ../dexterity_2.rst:167
msgid "GenericSetup now expects the code as a method ``upgrade_site`` in the file ``upgrades.py``. Let's create it."
msgstr ""

#: ../dexterity_2.rst:211
msgid "After restarting the site we can run the step:"
msgstr ""

#: ../dexterity_2.rst:213
msgid "Go to the addon-controlpanel http://localhost:8080/Plone/prefs_install_products_form. There should now be a warning **This add-on has been upgraded. Old profile version was 1. New profile version is 1001** and a button next to it."
msgstr ""

#: ../dexterity_2.rst:214
msgid "Run the upgrade-step by clicking on it."
msgstr ""

#: ../dexterity_2.rst:216
msgid "On the console you should see logging-messages like::"
msgstr ""

#: ../dexterity_2.rst:220
msgid "Alternatively you can select which upgrade-steps to run like this:"
msgstr ""

#: ../dexterity_2.rst:222
msgid "In the ZMI got to *portal_setup*"
msgstr ""

#: ../dexterity_2.rst:223
msgid "Go to the tab *Upgrades*"
msgstr ""

#: ../dexterity_2.rst:224
msgid "Select *ploneconf.site* from the dropdown and click *Choose profile*"
msgstr ""

#: ../dexterity_2.rst:225
msgid "Run the upgrade step."
msgstr ""

#: ../dexterity_2.rst:229
msgid "http://docs.plone.org/4/en/develop/addons/components/genericsetup.html#id1"
msgstr ""

#: ../dexterity_2.rst:234
msgid "Upgrading from an older version of Plone to a newer one also runs upgrade steps from the package ``plone.app.upgrade``. You should be able to upgrade a clean site from 2.5 to 5.0a2 with a click."
msgstr ""

#: ../dexterity_2.rst:236
msgid "For an example see the upgrade-step to Plone 5.0a1 https://github.com/plone/plone.app.upgrade/blob/master/plone/app/upgrade/v50/alphas.py#L23"
msgstr ""

#: ../dexterity_2.rst:241
msgid "Add a browserlayer"
msgstr ""

#: ../dexterity_2.rst:243
msgid "A browserlayer is another such marker-interface. Browserlayers allow us to easily enable and disable views and other site functionality based on installed add-ons and themes."
msgstr ""

#: ../dexterity_2.rst:245
msgid "Since we want the features we write only to be available when ploneconf.site actually is installed we can bind them to a browserlayer."
msgstr ""

#: ../dexterity_2.rst:247
msgid "In ``interfaces.py`` we add:"
msgstr ""

#: ../dexterity_2.rst:255
msgid "We register the browserlayer in GenericSetup in ``profiles/default/browserlayer.xml``"
msgstr ""

#: ../dexterity_2.rst:265
msgid "After reinstalling the addon we can bind the talkview, the demoview and the talklistview to our layer. Here is an example using the talkview."
msgstr ""

#: ../dexterity_2.rst:279
msgid "Note the relative python-path ``..interfaces.IPloneconfSiteLayer``. It is equivalent to the absolute path ``ploneconf.site.interfaces.IPloneconfSiteLayer``."
msgstr ""

#: ../dexterity_2.rst:283
msgid "http://docs.plone.org/4/en/develop/plone/views/layers.html"
msgstr ""

#: ../dexterity_2.rst:287
msgid "Exercise"
msgstr ""

#: ../dexterity_2.rst:289
msgid "Do you need to bind the social-viewlet from chapter 20 to this new browser-layer?"
msgstr ""

#: ../dexterity_2.rst:291
msgid "Solution"
msgstr ""

#: ../dexterity_2.rst:294
msgid "No, it would make no difference since the viewlet is already bound to the marker interface ``ploneconf.site.behaviors.social.ISocial``."
msgstr ""

#: ../dexterity_2.rst:297
msgid "Add catalog-indexes"
msgstr ""

#: ../dexterity_2.rst:299
msgid "In the `talklistview` we had to wake up all objects to access some of their attributes. That is ok if we don't have many objects and they are light dexterity-objects. If we had thousands of objects this might not be a good idea."
msgstr ""

#: ../dexterity_2.rst:301
msgid "Instead of loading them all into memory we will use catalog-indexes to get the data we want to display."
msgstr ""

#: ../dexterity_2.rst:303
msgid "Add a new file ``profiles/default/catalog.xml``"
msgstr ""

#: ../dexterity_2.rst:325
msgid "This adds new indexes for the three fields we want to show in the listing. Not that *audience* is a ``KeywordIndex`` because the field is multi-valued, but we want a separate index-entry for every value in on an object."
msgstr ""

#: ../dexterity_2.rst:327
msgid "The ``column ..`` entry allows us to display these values of these indexes in the tableview of collections."
msgstr ""

#: ../dexterity_2.rst:331
msgid "Until Plone 4.3.2 adding indexes in catalog.xml was harmful because reinstalling the addon purged the indexes! See https://www.starzel.de/blog/a-reminder-about-catalog-indexes."
msgstr ""

#: ../dexterity_2.rst:333
msgid "To run additional custom code on (re-)installing an addon you should use a `setuphandler.py <http://docs.plone.org/4/en/develop/addons/components/genericsetup.html#custom-installer-code-setuphandlers-py>`_."
msgstr ""

#: ../dexterity_2.rst:335
msgid "Reinstall the addon"
msgstr ""

#: ../dexterity_2.rst:336
msgid "Go to http://localhost:8080/Plone/portal_catalog/manage_catalogIndexes to inspect populate and inspect the new indexes"
msgstr ""

#: ../dexterity_2.rst:340
msgid "http://docs.plone.org/4/en/develop/plone/searching_and_indexing/indexing.html"
msgstr ""

#: ../dexterity_2.rst:344
msgid "Query for custom indexes"
msgstr ""

#: ../dexterity_2.rst:346
msgid "The new indexes behave like the ones that plone has built in:"
msgstr ""

#: ../dexterity_2.rst:360
msgid "We now can use the new indexes to improve the talklistview so we don't have to wake up the objects any more."
msgstr ""

#: ../dexterity_2.rst:388
msgid "The template does not need to be changed and the result did not change as well."
msgstr ""

#: ../dexterity_2.rst:391
msgid "Add collection criteria"
msgstr ""

#: ../dexterity_2.rst:393
msgid "To be able to search content in collections using the new indexes we would have to register them as criteria for the querystring-widget that collections use."
msgstr ""

#: ../dexterity_2.rst:395
msgid "Add a new file ``profiles/default/registry.xml``"
msgstr ""

#: ../dexterity_2.rst:427
msgid "http://docs.plone.org/4/en/develop/plone/functionality/collections.html#add-new-collection-criteria-new-style-plone-app-collection-installed"
msgstr ""

#: ../dexterity_2.rst:431
msgid "Add more features through generic-setup"
msgstr ""

#: ../dexterity_2.rst:433
msgid "Enable versioning and a diff-view for talks through GenericSetup."
msgstr ""

#: ../dexterity_2.rst:435
msgid "Add new file ``profiles/default/repositorytool.xml``"
msgstr ""

#: ../dexterity_2.rst:451
msgid "Add new file ``profiles/default/diff_tool.xml``"
msgstr ""

