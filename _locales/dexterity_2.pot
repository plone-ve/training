# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-05 05:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../dexterity_2.rst:4
msgid "Dexterity Types II: Growing Up"
msgstr ""

#: ../dexterity_2.rst:0
msgid "Get the code!"
msgstr ""

#: ../dexterity_2.rst:8
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout directory:"
msgstr ""

#: ../dexterity_2.rst:15
msgid "The existing talks are still lacking some functionality we want to use."
msgstr ""

#: ../dexterity_2.rst:17
msgid "In this part we will:"
msgstr ""

#: ../dexterity_2.rst:19
msgid "add a marker interface to our talk type"
msgstr ""

#: ../dexterity_2.rst:20
msgid "create custom catalog indexes"
msgstr ""

#: ../dexterity_2.rst:21
msgid "query the catalog for them"
msgstr ""

#: ../dexterity_2.rst:22
msgid "enable some more default features for our type"
msgstr ""

#: ../dexterity_2.rst:28
msgid "Add a marker interface to the talk type"
msgstr ""

#: ../dexterity_2.rst:31
msgid "Marker Interfaces"
msgstr ""

#: ../dexterity_2.rst:33
msgid "The content type `Talk` is not yet a first class citizen because it does not implement its own interface. Interfaces are like nametags, telling other elements who and what you are and what you can do. A marker interface is like such a nametag. The talks actually have an auto-generated marker interface ``plone.dexterity.schema.generated.Plone_0_talk``."
msgstr ""

#: ../dexterity_2.rst:35
msgid "The problem is that the name of the Plone instance ``Plone`` is part of that interface name. If you now moved these types to a site with another name, code that uses these Interfaces would no longer find the objects in question."
msgstr ""

#: ../dexterity_2.rst:37
msgid "To solve this we add a new Interface to ``interfaces.py``:"
msgstr ""

#: ../dexterity_2.rst:58
msgid "``ITalk`` is a marker interface. We can bind Views and Viewlets to content that provide these interfaces. Lets see how we can provide this Interface. There are two solution for this."
msgstr ""

#: ../dexterity_2.rst:60
msgid "Let them be instances of a class that implements this Interface."
msgstr ""

#: ../dexterity_2.rst:61
msgid "Register this interface as a behavior and enable it on talks."
msgstr ""

#: ../dexterity_2.rst:63
msgid "The first option has an important drawback: Only new talks would be instances of the new class. We would either have to migrate the existing talks or delete them."
msgstr ""

#: ../dexterity_2.rst:65
msgid "So let's register the interface as a behavior in ``behaviors/configure.zcml``"
msgstr ""

#: ../dexterity_2.rst:75
msgid "And enable it on the type in ``profiles/default/types/talk.xml``"
msgstr ""

#: ../dexterity_2.rst:88
msgid "Either reinstall the addon, apply the behavior by hand or run an upgrade step (see below) and the interface will be there."
msgstr ""

#: ../dexterity_2.rst:90
msgid "Then we can safely bind the talkview to the new marker interface."
msgstr ""

#: ../dexterity_2.rst:104
msgid "Now the ``/talkview`` can only be used on objects that implement said interface. We can now also query the catalog for objects providing this interface ``catalog(object_provides=\"ploneconf.site.interfaces.ITalk\")``. The `talklistview` and the `demoview` do not get this constraint since they are not only used on talks."
msgstr ""

#: ../dexterity_2.rst:108
msgid "Just for completeness sake, this is what would have to happen for the first option:"
msgstr ""

#: ../dexterity_2.rst:110
msgid "Create a new class that inherits from ``plone.dexterity.content.Container`` and implements the marker interface."
msgstr ""

#: ../dexterity_2.rst:121
msgid "Modify the class for new talks in ``profiles/default/types/talk.xml``"
msgstr ""

#: ../dexterity_2.rst:133
msgid "Create an upgrade step that changes the class of the existing talks. A reuseable method to do such a thing is in is `plone.app.contenttypes.migration.dxmigration.migrate_base_class_to_new_class <https://github.com/plone/plone.app.contenttypes/blob/master/plone/app/contenttypes/migration/dxmigration.py#L130>`_."
msgstr ""

#: ../dexterity_2.rst:138
msgid "Upgrade steps"
msgstr ""

#: ../dexterity_2.rst:140
msgid "When projects evolve you'll sometimes have to modify various things while the site is already up and brimming with content and users. Upgrade steps are pieces of code that run when upgrading from one version of an addon to a newer one. They can do just about anything."
msgstr ""

#: ../dexterity_2.rst:142
msgid "We will create an upgrade step that"
msgstr ""

#: ../dexterity_2.rst:144
msgid "runs the typeinfo step (i.e. loads the GenericSetup configuration stores in ``profiles/default/types.xml`` and ``profiles/default/types/...`` so we don't have to reinstall the addon to have our changes from above take effect) and"
msgstr ""

#: ../dexterity_2.rst:145
msgid "cleans up some content that might be scattered around the site in the early stages of creating it. We will move all talks to a folder ``talks`` (unless they already are there)."
msgstr ""

#: ../dexterity_2.rst:147
msgid "Upgrade steps are usually registered in their own zcml file. Create ``upgrades.zcml``"
msgstr ""

#: ../dexterity_2.rst:170
msgid "The upgrade step bumps the version number of the GenericSetup profile of ploneconf.site from 1 to 1001. The version is stored in ``profiles/default/metadata.xml``. Change it to"
msgstr ""

#: ../dexterity_2.rst:176
msgid "Include the new ``upgrades.zcml`` in our ``configure.zcml`` by adding:"
msgstr ""

#: ../dexterity_2.rst:182
msgid "GenericSetup now expects the code as a method ``upgrade_site`` in the file ``upgrades.py``. Let's create it."
msgstr ""

#: ../dexterity_2.rst:234
msgid "After restarting the site we can run the step:"
msgstr ""

#: ../dexterity_2.rst:236
msgid "Go to the Add-ons controlpanel http://localhost:8080/Plone/prefs_install_products_form. There should now be a warning **This add-on has been upgraded. Old profile version was 1. New profile version is 1001** and a button next to it."
msgstr ""

#: ../dexterity_2.rst:237
msgid "Run the upgrade step by clicking on it."
msgstr ""

#: ../dexterity_2.rst:239
msgid "On the console you should see logging messages like::"
msgstr ""

#: ../dexterity_2.rst:243
msgid "Alternatively you can select which upgrade steps to run like this:"
msgstr ""

#: ../dexterity_2.rst:245
msgid "In the ZMI got to *portal_setup*"
msgstr ""

#: ../dexterity_2.rst:246
msgid "Go to the tab *Upgrades*"
msgstr ""

#: ../dexterity_2.rst:247
msgid "Select *ploneconf.site* from the dropdown and click *Choose profile*"
msgstr ""

#: ../dexterity_2.rst:248
msgid "Run the upgrade step."
msgstr ""

#: ../dexterity_2.rst:252
msgid "http://docs.plone.org/develop/addons/components/genericsetup.html#id1"
msgstr ""

#: ../dexterity_2.rst:257
msgid "Upgrading from an older version of Plone to a newer one also runs upgrade steps from the package ``plone.app.upgrade``. You should be able to upgrade a clean site from 2.5 to 5.0a2 with a click."
msgstr ""

#: ../dexterity_2.rst:259
msgid "For an example see the upgrade-step to Plone 5.0a1 https://github.com/plone/plone.app.upgrade/blob/master/plone/app/upgrade/v50/alphas.py#L23"
msgstr ""

#: ../dexterity_2.rst:266
msgid "Add a browserlayer"
msgstr ""

#: ../dexterity_2.rst:268
msgid "A browserlayer is another such marker interface. Browserlayers allow us to easily enable and disable views and other site functionality based on installed add-ons and themes."
msgstr ""

#: ../dexterity_2.rst:270
msgid "Since we want the features we write only to be available when ploneconf.site actually is installed we can bind them to a browserlayer."
msgstr ""

#: ../dexterity_2.rst:272
msgid "Our package already has a browserlayer (``bobtemplates.plone`` added it). See ``interfaces.py``:"
msgstr ""

#: ../dexterity_2.rst:282
msgid "Is is enabled by GenericSetup when installing the package since it is registered in ``profiles/default/browserlayer.xml``"
msgstr ""

#: ../dexterity_2.rst:294
msgid "We should bind all views to it. Here is an example using the talkview."
msgstr ""

#: ../dexterity_2.rst:308
msgid "Note the relative python path ``..interfaces.IPloneconfSiteLayer``. It is equivalent to the absolute path ``ploneconf.site.interfaces.IPloneconfSiteLayer``."
msgstr ""

#: ../dexterity_2.rst:312
msgid "http://docs.plone.org/develop/plone/views/layers.html"
msgstr ""

#: ../dexterity_2.rst:316
msgid "Exercise"
msgstr ""

#: ../dexterity_2.rst:318
msgid "Do you need to bind the :ref:`viewlets1-social2-label` from chapter 22 to this new browser layer?"
msgstr ""

#: ../dexterity_2.rst:320
msgid "Solution"
msgstr ""

#: ../dexterity_2.rst:323
msgid "No, it would make no difference since the viewlet is already bound to the marker interface ``ploneconf.site.behaviors.social.ISocial``."
msgstr ""

#: ../dexterity_2.rst:328
msgid "Add catalog indexes"
msgstr ""

#: ../dexterity_2.rst:330
msgid "In the `talklistview` we had to wake up all objects to access some of their attributes. That is ok if we don't have many objects and they are light dexterity objects. If we had thousands of objects this might not be a good idea."
msgstr ""

#: ../dexterity_2.rst:332
msgid "Instead of loading them all into memory we will use catalog indexes to get the data we want to display."
msgstr ""

#: ../dexterity_2.rst:334
msgid "Add a new file ``profiles/default/catalog.xml``"
msgstr ""

#: ../dexterity_2.rst:356
msgid "This adds new indexes for the three fields we want to show in the listing. Not that *audience* is a ``KeywordIndex`` because the field is multi-valued, but we want a separate index entry for every value in an object."
msgstr ""

#: ../dexterity_2.rst:358
msgid "The ``column ..`` entry allows us to display the values of these indexes in the tableview of collections."
msgstr ""

#: ../dexterity_2.rst:362
msgid "Until Plone 4.3.2 adding indexes in catalog.xml was harmful because reinstalling the addon purged the indexes! See http://www.starzel.de/blog/a-reminder-about-catalog-indexes."
msgstr ""

#: ../dexterity_2.rst:364
msgid "Reinstall the addon"
msgstr ""

#: ../dexterity_2.rst:365
msgid "Go to http://localhost:8080/Plone/portal_catalog/manage_catalogIndexes to inspect and manage the new indexes"
msgstr ""

#: ../dexterity_2.rst:369
msgid "http://docs.plone.org/develop/plone/searching_and_indexing/indexing.html"
msgstr ""

#: ../dexterity_2.rst:375
msgid "Query for custom indexes"
msgstr ""

#: ../dexterity_2.rst:377
msgid "The new indexes behave like the ones that Plone has already built in:"
msgstr ""

#: ../dexterity_2.rst:391
msgid "We now can use the new indexes to improve the talklistview so we don't have to *wake up* the objects any more. Instead we use the brains new attributes."
msgstr ""

#: ../dexterity_2.rst:420
msgid "The template does not need to be changed and the result in the browser did not change, either."
msgstr ""

#: ../dexterity_2.rst:425
msgid "Add collection criteria"
msgstr ""

#: ../dexterity_2.rst:427
msgid "To be able to search content in collections using these new indexes we would have to register them as criteria for the querystring widget that collections use. As with all features make sure you only do this if you really need it!"
msgstr ""

#: ../dexterity_2.rst:430
msgid "Add a new file ``profiles/default/registry.xml``"
msgstr ""

#: ../dexterity_2.rst:473
msgid "http://docs.plone.org/develop/plone/functionality/collections.html#add-new-collection-criteria-new-style-plone-app-collection-installed"
msgstr ""

#: ../dexterity_2.rst:479
msgid "Add versioning through GenericSetup"
msgstr ""

#: ../dexterity_2.rst:481
msgid "Configure the versioning policy and a diff-view for talks through GenericSetup."
msgstr ""

#: ../dexterity_2.rst:483
msgid "Add new file ``profiles/default/repositorytool.xml``"
msgstr ""

#: ../dexterity_2.rst:499
msgid "Add new file ``profiles/default/diff_tool.xml``"
msgstr ""

#: ../dexterity_2.rst:513
msgid "Finally you need to activate the versioning behavior on the content type. Edit ``profiles/default/types/talk.xml``:"
msgstr ""

