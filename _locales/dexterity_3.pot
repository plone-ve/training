# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-05 05:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../dexterity_3.rst:4
msgid "Dexterity Types III: Python"
msgstr ""

#: ../dexterity_3.rst:0
msgid "Get the code!"
msgstr ""

#: ../dexterity_3.rst:8
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout directory:"
msgstr ""

#: ../dexterity_3.rst:15
msgid "Without sponsors a conference would be hard to finance plus it is a good opportunity for Plone companies to advertise their services."
msgstr ""

#: ../dexterity_3.rst:17
msgid "In this part we will:"
msgstr ""

#: ../dexterity_3.rst:19
msgid "create the content type *sponsor* that has a python schema"
msgstr ""

#: ../dexterity_3.rst:20
msgid "create a viewlet that shows the sponsor logos sorted by sponsoring level"
msgstr ""

#: ../dexterity_3.rst:23
msgid "The topics we cover are:"
msgstr ""

#: ../dexterity_3.rst:25
msgid "python schema for dexterity"
msgstr ""

#: ../dexterity_3.rst:26
msgid "schema hint and directives"
msgstr ""

#: ../dexterity_3.rst:27
msgid "field permissions"
msgstr ""

#: ../dexterity_3.rst:28
msgid "image scales"
msgstr ""

#: ../dexterity_3.rst:29
msgid "caching"
msgstr ""

#: ../dexterity_3.rst:33
msgid "The python schema"
msgstr ""

#: ../dexterity_3.rst:35
msgid "First we create the schema for the new type. Instead of xml we use python now. Create a new folder ``content`` with an empty ``__init__.py`` in it. We don't need to register that folder in ``configure.zcml`` since we don't need a ``content/configure.zcml`` (at least not yet)."
msgstr ""

#: ../dexterity_3.rst:37
msgid "Now add a new file ``content/sponsor.py``."
msgstr ""

#: ../dexterity_3.rst:102
msgid "Some things are notable here:"
msgstr ""

#: ../dexterity_3.rst:104
msgid "The fields in the schema are mostly from ``zope.schema``. A reference of available fields is at http://docs.plone.org/external/plone.app.dexterity/docs/reference/fields.html"
msgstr ""

#: ../dexterity_3.rst:105
msgid "In ``directives.widget(level=RadioFieldWidget)`` we change the default widget for a Choice field from a dropdown to radioboxes. An incomplete reference of available widgets is at http://docs.plone.org/external/plone.app.dexterity/docs/reference/widgets.html"
msgstr ""

#: ../dexterity_3.rst:106
msgid "``LevelVocabulary`` is used to create the options used in the field ``level``. This way we could easily translate the displayed value."
msgstr ""

#: ../dexterity_3.rst:107
msgid "``fieldset('Images', fields=['logo', 'advertisment'])`` moves the two image fields to another tab."
msgstr ""

#: ../dexterity_3.rst:108
msgid "``directives.read_permission(...)`` sets the read and write permission for the field ``notes`` to users who can add new members. Usually this permission is only granted to Site Administrators and Managers. We use it to store information that should not be publicly visible. Please note that ``obj.notes`` is still accessible in templates and python. Only using the widget (like we do in the view later) checks for the permission."
msgstr ""

#: ../dexterity_3.rst:109
msgid "We use no grok here"
msgstr ""

#: ../dexterity_3.rst:113
msgid "`All available Fields <http://docs.plone.org/external/plone.app.dexterity/docs/reference/fields.html#field-types>`_"
msgstr ""

#: ../dexterity_3.rst:114
msgid "`Schema-driven types with Dexterity <http://docs.plone.org/external/plone.app.dexterity/docs/schema-driven-types.html#schema-driven-types>`_"
msgstr ""

#: ../dexterity_3.rst:115
msgid "`Form schema hints and directives <http://docs.plone.org/external/plone.app.dexterity/docs/reference/form-schema-hints.html>`_"
msgstr ""

#: ../dexterity_3.rst:118
msgid "The FTI"
msgstr ""

#: ../dexterity_3.rst:120
msgid "Second we create the FTI for the new type in ``profiles/default/types/sponsor.xml``"
msgstr ""

#: ../dexterity_3.rst:171
msgid "Then we register the FTI in ``profiles/default/types.xml``"
msgstr ""

#: ../dexterity_3.rst:185
msgid "After reinstalling our package we can create the new type."
msgstr ""

#: ../dexterity_3.rst:189
msgid "Exercise 1"
msgstr ""

#: ../dexterity_3.rst:191
msgid "Sponsors are containers but they don't have to be. Turn them into items by changing their class to ``plone.dexterity.content.Item``."
msgstr ""

#: ../dexterity_3.rst:193
#: ../dexterity_3.rst:459
msgid "Solution"
msgstr ""

#: ../dexterity_3.rst:196
msgid "Simply modify the property ``klass`` in the FTI and reinstall."
msgstr ""

#: ../dexterity_3.rst:205
msgid "The view"
msgstr ""

#: ../dexterity_3.rst:207
msgid "We use the default view provided by dexterity for testing since we will only display the sponsors in a viewlet and not in their own page."
msgstr ""

#: ../dexterity_3.rst:209
msgid "But we could tweak the default view with some css to make it less ugly. Add the following to ``resources/ploneconf.css``"
msgstr ""

#: ../dexterity_3.rst:224
msgid "If we really want a custom view for sponsors it could look like this."
msgstr ""

#: ../dexterity_3.rst:267
msgid "Note how we handle the field with special permissions: ``tal:condition=\"python: 'notes' in view.w\"`` checks if the convenience-dictionary ``w`` provided by the base class ``DefaultView`` holds the widget for the field ``notes``. If the current user does not have the permission ``cmf.ManagePortal`` it will be omited from the dictionary and get an error since ``notes`` would not be a key in ``w``. By first checking if it's missing we work around that."
msgstr ""

#: ../dexterity_3.rst:271
msgid "The viewlet"
msgstr ""

#: ../dexterity_3.rst:273
msgid "Instead of writing a view you will have to display the sponsors at the bottom of the website in a viewlet."
msgstr ""

#: ../dexterity_3.rst:275
msgid "Register the viewlet in ``browser/configure.zcml``"
msgstr ""

#: ../dexterity_3.rst:290
msgid "Add the viewlet class in ``browser/viewlets.py``"
msgstr ""

#: ../dexterity_3.rst:360
msgid "``_sponsors`` returns a list of dictionaries containing all necessary info about sponsors."
msgstr ""

#: ../dexterity_3.rst:361
msgid "We create the complete img tag using a custom scale (200x80) using the view ``images`` from plone.namedfile. This actually scales the logos and saves them as new blobs."
msgstr ""

#: ../dexterity_3.rst:362
msgid "In ``sponsors`` we return a ordered dictionary of randomized lists of dicts (containing the information on sponsors)."
msgstr ""

#: ../dexterity_3.rst:364
msgid "``_sponsors`` is cached for an hour using `plone.memoize <http://docs.plone.org/manage/deploying/testing_tuning/performance/decorators.html#timeout-caches>`_. This way we don't need to keep all sponsor objects in memory all the time. But we'd have to wait for up to an hour until changes will be visible."
msgstr ""

#: ../dexterity_3.rst:366
msgid "Instead we'll cache until one of the sponsors is modified by using a callable ``_sponsors_cachekey`` that returns a number that changes when a sponsor is modified."
msgstr ""

#: ../dexterity_3.rst:384
msgid "`Guide to Caching <http://docs.plone.org/manage/deploying/caching/index.html>`_"
msgstr ""

#: ../dexterity_3.rst:385
msgid "`Cache decorators <http://docs.plone.org/manage/deploying/testing_tuning/performance/decorators.html>`_"
msgstr ""

#: ../dexterity_3.rst:386
msgid "`Image Scaling <http://docs.plone.org/develop/plone/images/content.html#image-scales-plone-4>`_"
msgstr ""

#: ../dexterity_3.rst:390
msgid "The template for the viewlet"
msgstr ""

#: ../dexterity_3.rst:392
msgid "Add the template ``browser/templates/sponsors_viewlet.pt``"
msgstr ""

#: ../dexterity_3.rst:425
msgid "Ther already is some css in ``browser/static/ploneconf.css`` to make it look ok."
msgstr ""

#: ../dexterity_3.rst:442
msgid "Exercise 2"
msgstr ""

#: ../dexterity_3.rst:444
msgid "Turn the a content type speaker from :ref:`Exercise 2 of the first chapter on dexterity <dexterity1-excercises-label>` into a python-based type."
msgstr ""

#: ../dexterity_3.rst:446
msgid "Is should hold the following fields:"
msgstr ""

#: ../dexterity_3.rst:448
msgid "title"
msgstr ""

#: ../dexterity_3.rst:449
msgid "email"
msgstr ""

#: ../dexterity_3.rst:450
msgid "homepage"
msgstr ""

#: ../dexterity_3.rst:451
msgid "biography"
msgstr ""

#: ../dexterity_3.rst:452
msgid "company"
msgstr ""

#: ../dexterity_3.rst:453
msgid "twitter_name"
msgstr ""

#: ../dexterity_3.rst:454
msgid "irc_name"
msgstr ""

#: ../dexterity_3.rst:455
msgid "image"
msgstr ""

#: ../dexterity_3.rst:457
msgid "Do *not* use the IBasic or IDublinCore behavior to add title and description. Instead add your own field ``title`` and give it the title *Name*."
msgstr ""

#: ../dexterity_3.rst:524
msgid "Register the type in ``profiles/default/types.xml``"
msgstr ""

#: ../dexterity_3.rst:539
msgid "The FTI goes in ``profiles/default/types/speaker.xml``. Again we use ``Item`` as the base-class:"
msgstr ""

#: ../dexterity_3.rst:589
msgid "After reinstalling the package the new type is useable."
msgstr ""

