# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-22 16:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../dexterity_3.rst:2
msgid "Dexterity Types III: Python"
msgstr ""

#: ../dexterity_3.rst:0
msgid "Get the code!"
msgstr ""

#: ../dexterity_3.rst:6
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout-directory:"
msgstr ""

#: ../dexterity_3.rst:13
msgid "Without sponsors a conference would be hard to finance plus it is a good opportunity for Plone-companies to advertise their services."
msgstr ""

#: ../dexterity_3.rst:15
msgid "In this part we will:"
msgstr ""

#: ../dexterity_3.rst:17
msgid "create the content-type *sponsor* that has a python-schema"
msgstr ""

#: ../dexterity_3.rst:18
msgid "create a viewlet that shows the sponsors sorted by level"
msgstr ""

#: ../dexterity_3.rst:19
msgid "discuss image-scales"
msgstr ""

#: ../dexterity_3.rst:21
msgid "First we create the schema for the new type. Instead of xml we use python now. Create a new folder ``content`` with a empty ``__init__.py`` in it. Now add a new file ``content/sponsor.py``."
msgstr ""

#: ../dexterity_3.rst:86
msgid "Some things are notable here:"
msgstr ""

#: ../dexterity_3.rst:88
msgid "The fields in the schema are mostly from ``zope.schema``. A reference of available fields is at http://docs.plone.org/4/en/external/plone.app.dexterity/docs/reference/fields.html"
msgstr ""

#: ../dexterity_3.rst:89
msgid "In ``directives.widget(level=RadioFieldWidget)`` we change the default widget for a Choice-field from a dropdown to radioboxes. A incomplete reference of available widgets is at http://docs.plone.org/4/en/external/plone.app.dexterity/docs/reference/widgets.html"
msgstr ""

#: ../dexterity_3.rst:90
msgid "``LevelVocabulary`` is used to create the options used in the field ``level``. This way we could easily translate the displayed value."
msgstr ""

#: ../dexterity_3.rst:91
msgid "``fieldset('Images', fields=['logo', 'advertisment'])`` moves the two image-fields to another tab."
msgstr ""

#: ../dexterity_3.rst:92
msgid "``directives.read_permission(...)`` sets the read- and write-permission for the field ``note`` to users who can add new members. Usually this permission is only granted to Site-Administrators and Managers. We use it to store information that should not be publicly visible. Please note that ``obj.note`` is still accessible in templates and python. Only using the widget (like we do in the view later) checks for the permission."
msgstr ""

#: ../dexterity_3.rst:93
msgid "We use no grok here"
msgstr ""

#: ../dexterity_3.rst:95
msgid "Second we create the FTI for new type in ``profiles/default/types/sponsor.xml``"
msgstr ""

#: ../dexterity_3.rst:146
msgid "Then we register the FTI in ``profiles/default/types.xml``"
msgstr ""

#: ../dexterity_3.rst:160
msgid "After reinstalling our package we can create the new type. We use the default-view provided by dexterity since we display the sponsors in a viewlet."
msgstr ""

#: ../dexterity_3.rst:162
msgid "Instead we tweak the default-view with some css. Add the following to ``resources/ploneconf.css``"
msgstr ""

#: ../dexterity_3.rst:175
msgid "If we would want a custom view for sponsors it could look like this."
msgstr ""

#: ../dexterity_3.rst:220
msgid "Note that we have to handle the field with special permissions: ``tal:condition=\"python: 'notes' in view.w\"`` checks if the convenience-dictionary ``w`` provided by the base-class ``DefaultView`` holds the widget for the field ``note``. If the current user does not have the permission ``cmf.ManagePortal`` it will be omited from the dictionary and get an error since ``notes`` would not be a key in ``w``. By first checking if it is missing we work around that."
msgstr ""

#: ../dexterity_3.rst:223
msgid "We display the sponsors at the bottom of the website in a viewlet."
msgstr ""

#: ../dexterity_3.rst:225
msgid "Register the viewlet in ``browser/configure.zcml``"
msgstr ""

#: ../dexterity_3.rst:240
msgid "Add the viewlet-class in ``browser/viewlets.py``"
msgstr ""

#: ../dexterity_3.rst:311
msgid "``_sponsors`` returns a list of dictionaries containing all necessary info about sponsors."
msgstr ""

#: ../dexterity_3.rst:312
msgid "``_sponsors`` is cached for an hour using `plone.memoize <http://docs.plone.org/4/en/manage/deploying/testing_tuning/performance/decorators.html#timeout-caches>`_. This way we don't need to keep all sponsor-objects in memory all the time. We could also cache until one of the sponsors is modified:"
msgstr ""

#: ../dexterity_3.rst:329
msgid "We create the complete img-tag using a custom scale (200x80) using the view ``images`` from plone.namedfile. This actually scales the logos and saves them as new blobs."
msgstr ""

#: ../dexterity_3.rst:330
msgid "In ``sponsors`` we return a ordered dictionary of randomized lists of dicts (containing the information on sponsors)."
msgstr ""

#: ../dexterity_3.rst:334
msgid "http://docs.plone.org/4/en/develop/plone/images/content.html#for-plone-4"
msgstr ""

#: ../dexterity_3.rst:336
msgid "Add the template ``browser/templates/sponsors_viewlet.pt``"
msgstr ""

#: ../dexterity_3.rst:366
msgid "Now add some css to make it look ok. Edit ``resources/ploneconf.css``"
msgstr ""

