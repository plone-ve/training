# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-05 05:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../export_code.rst:4
msgid "Return to Dexterity: Moving Content Types into Code"
msgstr ""

#: ../export_code.rst:0
msgid "Get the code!"
msgstr ""

#: ../export_code.rst:9
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout directory:"
msgstr ""

#: ../export_code.rst:16
msgid "In this part you will:"
msgstr ""

#: ../export_code.rst:18
msgid "Move the type *talk* into ``ploneconf.site``"
msgstr ""

#: ../export_code.rst:19
msgid "Improve the schema and the FTI"
msgstr ""

#: ../export_code.rst:22
msgid "Topics covered:"
msgstr ""

#: ../export_code.rst:24
msgid "FTI"
msgstr ""

#: ../export_code.rst:25
msgid "type definitions with generic setup"
msgstr ""

#: ../export_code.rst:26
msgid "XML schema"
msgstr ""

#: ../export_code.rst:27
msgid "more widgets"
msgstr ""

#: ../export_code.rst:29
msgid "Remember the *Talks* content type that we created through-the-web with Dexterity? Let's move that new content type into our add-on package so that it may be installed in other sites without TTW manipulation."
msgstr ""

#: ../export_code.rst:31
msgid "Steps:"
msgstr ""

#: ../export_code.rst:33
msgid "Return to the Dexterity control panel"
msgstr ""

#: ../export_code.rst:34
msgid "Export the Type Profile and save the file"
msgstr ""

#: ../export_code.rst:35
msgid "Delete the Type from the site before installing it from the file system"
msgstr ""

#: ../export_code.rst:36
msgid "Extract the files from the exported tar file and add them to our addon package in ``profiles/default/``"
msgstr ""

#: ../export_code.rst:40
msgid "From the buildout directory perspective that is ``src/ploneconf.site/src/ploneconf/site/profiles/default/``"
msgstr ""

#: ../export_code.rst:42
msgid "The file ``profiles/default/types.xml`` tells Plone that there is a new content type defined in file ``talk.xml``."
msgstr ""

#: ../export_code.rst:53
msgid "Upon installing, Plone reads the file ``profiles/default/types/talk.xml`` and registers a new type in ``portal_types`` (you can find and inspect this tool in the ZMI!) with the information taken from that file."
msgstr ""

#: ../export_code.rst:151
msgid "Now our package has some real contents. So, we'll need to reinstall it (if installed before)."
msgstr ""

#: ../export_code.rst:153
msgid "Restart Plone."
msgstr ""

#: ../export_code.rst:154
msgid "Re-install ploneconf.site (deactivate and activate)."
msgstr ""

#: ../export_code.rst:155
msgid "Test the type by adding an object or editing one of the old ones."
msgstr ""

#: ../export_code.rst:156
msgid "Look at how the talks are presented in the browser."
msgstr ""

#: ../export_code.rst:158
msgid "The escaped inline xml is simply too ugly to look at. You should move it to a separate file!"
msgstr ""

#: ../export_code.rst:160
msgid "Create a folder ``content`` with an empty ``__init__py``. In that create a file ``talk.xml`` that contains the real xml (copied from http://localhost:8080/Plone/dexterity-types/talk/@@modeleditor and beautified with some online xml formatter (http://lmgtfy.com/?q=xml+formatter))"
msgstr ""

#: ../export_code.rst:215
msgid "Now we have to remove the model_source and instead reference the xml file in the FTI by using the property ``model_file``:"
msgstr ""

#: ../export_code.rst:224
msgid "The default types of Plone 5 also have an xml schema like this since that allows the fields of the types to be editable trough the web! Fields for types with a python schema are not editable ttw."
msgstr ""

#: ../export_code.rst:226
msgid "`Dexterity XML <http://docs.plone.org/external/plone.app.dexterity/docs/reference/dexterity-xml.html>`_ is very powerful. By editing it (not all features have a UI) you should be able to do everything you can do with a python schema."
msgstr ""

#: ../export_code.rst:228
msgid "Our talks use a dropdown for ``type_of_talk`` and a multiselect for ``audience``. Radiobuttons and checkboxes woule be the better choice here. Modify the xml to make that change happen:"
msgstr ""

#: ../export_code.rst:289
msgid "Exercise 1"
msgstr ""

#: ../export_code.rst:291
msgid "Create a new package called ``collective.behavior.myfeature``. Inspect the directory structure of this package. Delete it after you are done."
msgstr ""

#: ../export_code.rst:293
#: ../export_code.rst:309
msgid "Solution"
msgstr ""

#: ../export_code.rst:301
msgid "Many packages that are part of Plone and some addons use a nested namespace such as ``plone.app.contenttypes``."
msgstr ""

#: ../export_code.rst:305
msgid "Exercise 2"
msgstr ""

#: ../export_code.rst:307
msgid "Go to the ZMI and look at the definition of the new type in ``portal_types``. Now deactivate *Implicitly addable?* and save. What happens? And why is that useful?"
msgstr ""

#: ../export_code.rst:312
msgid "Go to http://localhost:8080/Plone/portal_types/Talk/manage_propertiesForm"
msgstr ""

#: ../export_code.rst:314
msgid "When disabling *Implicitly addable* you can no longer add Talks any more unless you change some container like the type *Folder*: Enable *Filter content types?* for it and add *Talk* to the items that are allowed."
msgstr ""

#: ../export_code.rst:316
msgid "With this method you can prevent content that only makes sense inside some defined structure to show up in places where they do not belong."
msgstr ""

#: ../export_code.rst:318
msgid "The equivalent setting for disabling *Implicitly addable* in ``Talk.xml`` is:"
msgstr ""

