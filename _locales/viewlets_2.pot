# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-22 16:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../viewlets_2.rst:2
msgid "A viewlet for the voteable behavior"
msgstr ""

#: ../viewlets_2.rst:6
msgid "Voting Viewlet"
msgstr ""

#: ../viewlets_2.rst:8
msgid "Viewlet for IVoteable"
msgstr ""

#: ../viewlets_2.rst:9
msgid "the viewlet-template"
msgstr ""

#: ../viewlets_2.rst:10
msgid "add jquery include statements"
msgstr ""

#: ../viewlets_2.rst:11
msgid "saving the vote on the object using annotations"
msgstr ""

#: ../viewlets_2.rst:16
msgid "Earlier we added the logic that saves votes on the objects. We now create the user interface for it."
msgstr ""

#: ../viewlets_2.rst:18
msgid "Since we want to use the UI on more than one page (not only the talk-view but also the talk-listing) we need to put it somewhere."
msgstr ""

#: ../viewlets_2.rst:20
msgid "To handle the user-input we don't use a form but links and ajax."
msgstr ""

#: ../viewlets_2.rst:21
msgid "The voting itself is a fact handled by another view"
msgstr ""

#: ../viewlets_2.rst:23
msgid "We register the viewlet in :file:`browser/configure.zcml`."
msgstr ""

#: ../viewlets_2.rst:48
msgid "We extend the file :file:`browser/viewlets.py`"
msgstr ""

#: ../viewlets_2.rst:61
msgid "This will add a viewlet to a slot below the title and expect a template :file:`voting_viewlet.pt` in a folder :file:`browser/templates`."
msgstr ""

#: ../viewlets_2.rst:63
msgid "Let's create the file :file:`browser/templates/voting_viewlet.pt` without any logic"
msgstr ""

#: ../viewlets_2.rst:78
msgid "restart Plone"
msgstr ""

#: ../viewlets_2.rst:79
msgid "show the viewlet"
msgstr ""

#: ../viewlets_2.rst:82
msgid "Writing the Viewlet code"
msgstr ""

#: ../viewlets_2.rst:88
msgid "Update the viewlet to contain the necessary logic in :file:`browser/viewlets`"
msgstr ""

#: ../viewlets_2.rst:126
msgid "The template"
msgstr ""

#: ../viewlets_2.rst:128
msgid "And extend the template in :file:`browser/templates/voting_viewlet.pt`"
msgstr ""

#: ../viewlets_2.rst:170
msgid "We have many small parts, most of which will be hidden by javascript unless needed. By providing all these status information in HTML, we can use standard translation tools to translate. Translating strings in javascript requires extra work."
msgstr ""

#: ../viewlets_2.rst:173
msgid "We need some css that we store in :file:`static/starzel_votablebehavior.css`"
msgstr ""

#: ../viewlets_2.rst:220
msgid "The javascript code"
msgstr ""

#: ../viewlets_2.rst:222
msgid "To make it work in the browser, some javascript :file:`static/starzel_votablebehavior.js`"
msgstr ""

#: ../viewlets_2.rst:269
msgid "This js-code adheres to crockfort jshint rules, so all variables are declared at the beginning of the method. We show and hide quite a few small html elements here"
msgstr ""

#: ../viewlets_2.rst:274
msgid "Writing 2 simple view helpers"
msgstr ""

#: ../viewlets_2.rst:278
msgid "Our javascript code communicates with our site by calling views that don't exist yet. These Views do not need to render html, but should return a valid status. Exceptions set the right status and aren't being shown by javascript, so this will suit us fine."
msgstr ""

#: ../viewlets_2.rst:282
msgid "As you might remember, the :samp:`vote` method might return an exception, if somebody votes twice. We do not catch this exception. The user will never see this exception."
msgstr ""

#: ../viewlets_2.rst:287
msgid "Catching exceptions contain a gotcha for new developers."
msgstr ""

#: ../viewlets_2.rst:297
msgid "Zope claims some exceptions for themselves. It needs them to work correctly."
msgstr ""

#: ../viewlets_2.rst:299
msgid "For example, if two requests try to modify something at the same time, one request will throw an exception, a :samp:`ConflictError`."
msgstr ""

#: ../viewlets_2.rst:301
msgid "Zope catches the exception, waits for a random amount of time, and tries to process the request again, up to three times. If you catch that exception, you are in trouble, so don't do that. Ever."
msgstr ""

#: ../viewlets_2.rst:304
msgid "As so often, we must extend :file:`browser/configure.zcml`:"
msgstr ""

#: ../viewlets_2.rst:329
msgid "Then we add our simple views into the file :file:`browser/vote.py`"
msgstr ""

#: ../viewlets_2.rst:354
msgid "A lot of moving parts have been created. Here is a small overview:"
msgstr ""

