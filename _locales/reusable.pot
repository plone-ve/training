# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-22 16:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../reusable.rst:2
msgid "Making our package reusable"
msgstr ""

#: ../reusable.rst:4
msgid "The package contains some problems."
msgstr ""

#: ../reusable.rst:6
msgid "No permission settings, Users can't customize who and when users can vote"
msgstr ""

#: ../reusable.rst:7
msgid "We do things, but don't trigger events. Events allow others to react."
msgstr ""

#: ../reusable.rst:10
msgid "Adding permissions"
msgstr ""

#: ../reusable.rst:19
msgid "Permissions have a long history, there are two types of permissions."
msgstr ""

#: ../reusable.rst:21
msgid "In Zope2, a permission was just a string."
msgstr ""

#: ../reusable.rst:23
msgid "In ZTK, a permission is an object that gets registered as an Utility."
msgstr ""

#: ../reusable.rst:25
msgid "We must support both, in some cases we have to reference the permission by their Zope2 version, in some by their ZTK Version."
msgstr ""

#: ../reusable.rst:27
msgid "Luckily, there is a zcml statement to register a permission both ways in one step."
msgstr ""

#: ../reusable.rst:31
msgid "The configuration registry wanted to solve a problem, but we will now stumble over a problem that did not get resolved properly."
msgstr ""

#: ../reusable.rst:33
msgid "Our permission is an utility. Our browser views declare this permission as a requirement for viewing them."
msgstr ""

#: ../reusable.rst:35
msgid "When our browser views get registered, the permissions must exist already. If you try to register the permissions after the views, Zope won't start because it doesn't know about the permissions."
msgstr ""

#: ../reusable.rst:37
msgid "Lets modify the file :file:`configure.zcml`"
msgstr ""

#: ../reusable.rst:65
msgid "In some places we have to reference the Zope 2 permission strings. It is best practice to provide a static variable for this."
msgstr ""

#: ../reusable.rst:67
msgid "We provide this in :file:`__init__.py`"
msgstr ""

#: ../reusable.rst:78
msgid "Using our permissions"
msgstr ""

#: ../reusable.rst:82
msgid "As you can see, we created two permissions, one for voting, one for viewing the votes."
msgstr ""

#: ../reusable.rst:84
msgid "If one may not see the votings, he does not need access to the vote viewlet."
msgstr ""

#: ../reusable.rst:86
msgid "While we are at it, if one can't vote, he needs no access to the helper view to actually submit a vote."
msgstr ""

#: ../reusable.rst:88
msgid "We can add this restriction to :file:`browser/configure.zcml`"
msgstr ""

#: ../reusable.rst:125
msgid "We are configuring components, so we use the component name of the permission, which is the :samp:`id` part of the declaration we added earlier."
msgstr ""

#: ../reusable.rst:129
msgid "So, what happens, if we do not protect the browser view to vote?"
msgstr ""

#: ../reusable.rst:131
msgid "The person could still vote, by handcrafting the URL. Browser Views run code without any restriction, it is your job to take care of security."
msgstr ""

#: ../reusable.rst:133
msgid "But... if a person has no access to the object at all, maybe because the site is configured that Anonymous users cannot access private objects, the unauthorized users will not be able to submit a vote."
msgstr ""

#: ../reusable.rst:135
msgid "That is, because Zope checks security permissions when trying to find the right object. If it can't find the object due to security constraints not met, no view ill ever be called, because that would have been the next step."
msgstr ""

#: ../reusable.rst:137
msgid "We now protect our views and viewlets. We still show the option to vote though."
msgstr ""

#: ../reusable.rst:139
msgid "We must add a condition in our page template, and we must provide the condition information in our viewlet class."
msgstr ""

#: ../reusable.rst:141
msgid "Lets move on to :file:`browser/viewlets.py`"
msgstr ""

#: ../reusable.rst:170
msgid "And the template in :file:`browser/templates/voting_viewlet.pt`"
msgstr ""

#: ../reusable.rst:201
msgid "Sometimes subtle bugs come up because of changes, in this case, I noticed that I should only animate people to vote, if they are allowed to vote!"
msgstr ""

#: ../reusable.rst:204
msgid "Provide defaults"
msgstr ""

#: ../reusable.rst:208
msgid "Are we done yet? Who may vote now?"
msgstr ""

#: ../reusable.rst:210
msgid "We have to tell that someone."
msgstr ""

#: ../reusable.rst:212
msgid "Who has which permissions is managed in Zope, it is persistent, persistent configuration goes to GenericSetup."
msgstr ""

#: ../reusable.rst:214
msgid "The persistent configuration is managed in another file: :file:`profiles/default/rolemap.xml`"
msgstr ""

