# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-22 16:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../plone_training_config/instructions.rst:4
msgid "Installing Plone for the Training"
msgstr ""

#: ../plone_training_config/instructions.rst:6
msgid "Keep in mind that you need a fast internet connection during installation since you'll have to download a lot of data!"
msgstr ""

#: ../plone_training_config/instructions.rst:13
msgid "If you feel the desire to try out both methods below (with Vagrant and without), make sure you use different ``training`` directories!  The two installations do not coexist well."
msgstr ""

#: ../plone_training_config/instructions.rst:17
msgid "Installing Plone without vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:21
msgid "If you are **not** used to running Plone on your laptop skip this part and continue with :ref:`install-virtualbox`."
msgstr ""

#: ../plone_training_config/instructions.rst:23
msgid "If you **are** experienced with running Plone on your own laptop, we encourage you to do so because you will have certain benefits:"
msgstr ""

#: ../plone_training_config/instructions.rst:25
msgid "You can use the editor you are used to."
msgstr ""

#: ../plone_training_config/instructions.rst:26
msgid "You can use *omelette* to have all the code of Plone at your fingertips."
msgstr ""

#: ../plone_training_config/instructions.rst:27
msgid "You do not have to switch between different operating systems during the training."
msgstr ""

#: ../plone_training_config/instructions.rst:29
msgid "If you feel comfortable, please work on your own machine with your own Python. But **please** make sure that you have a system that will work, since we don't want you to lose valuable time!"
msgstr ""

#: ../plone_training_config/instructions.rst:33
msgid "If you also want to follow the JavaScript training and install the JavaScript development tools, you need `NodeJS <https://nodejs.org/en/download/>`_ installed on your development computer."
msgstr ""

#: ../plone_training_config/instructions.rst:38
msgid "Please make sure you have your system properly prepared and installed all necessary prerequisites. For example, on Ubuntu/Debian, you need to install the following::"
msgstr ""

#: ../plone_training_config/instructions.rst:44
msgid "For more information or in case of problems see the `official installation instructions <http://docs.plone.org/4/en/manage/installing/installation.html>`_."
msgstr ""

#: ../plone_training_config/instructions.rst:48
msgid "Set up Plone for the training like this if you use your own OS (Linux or Mac):"
msgstr ""

#: ../plone_training_config/instructions.rst:59
msgid "Now you can run the buildout for the first time:"
msgstr ""

#: ../plone_training_config/instructions.rst:66
msgid "This will take some time and produce a lot of output because it downloads and configures Plone. Once it is done you can start your instance with"
msgstr ""

#: ../plone_training_config/instructions.rst:72
msgid "The output should be similar to:"
msgstr ""

#: ../plone_training_config/instructions.rst:105
msgid "If the output says ``INFO Zope Ready to handle requests`` then you are in business."
msgstr ""

#: ../plone_training_config/instructions.rst:107
msgid "If you point your browser at http://localhost:8080 you see that Plone is running. Now create a new Plone site by clicking \"Create a new Plone site\". The username and the password are both \"admin\" (Never do this on a real site!)."
msgstr ""

#: ../plone_training_config/instructions.rst:109
msgid "Now you have a working Plone site up and running and can continue with the next chapter.  You can stop the running instance anytime using ``ctrl + c``."
msgstr ""

#: ../plone_training_config/instructions.rst:113
msgid "If there is an error message you should either try to fix it or use vagrant and continue in this chapter."
msgstr ""

#: ../plone_training_config/instructions.rst:119
msgid "Installing Plone with vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:121
msgid "In order not to waste too much time with installing and debugging the differences between systems, we use a virtual machine (Ubuntu 14.04) to run Plone during the training. We rely on Vagrant and VirtualBox to give the same development environment to everyone."
msgstr ""

#: ../plone_training_config/instructions.rst:123
msgid "`Vagrant <https://www.vagrantup.com>`_ is a tool for building complete development environments. We use it together with Oracle’s `VirtualBox <https://www.virtualbox.org>`_ to create and manage a virtual environment."
msgstr ""

#: ../plone_training_config/instructions.rst:128
msgid "Install VirtualBox"
msgstr ""

#: ../plone_training_config/instructions.rst:130
msgid "Vagrant uses Oracle’s VirtualBox to create virtual environments. Here is a link directly to the download page: https://www.virtualbox.org/wiki/Downloads. We use VirtualBox 4.3.x"
msgstr ""

#: ../plone_training_config/instructions.rst:136
msgid "Install and configure Vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:138
msgid "Get the latest version from https://www.vagrantup.com/downloads.html for your operating system and install it."
msgstr ""

#: ../plone_training_config/instructions.rst:142
msgid "In Windows there is a bug in the recent version of Vagrant. Here are the instructions for how to work around the warning ``Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed``."
msgstr ""

#: ../plone_training_config/instructions.rst:144
msgid "Now your system has a command ``vagrant`` that you can run in the terminal."
msgstr ""

#: ../plone_training_config/instructions.rst:148
msgid "You don't need to install ``NodeJS`` as mentioned in the previous section. Our Vagrant configuration already does that for you."
msgstr ""

#: ../plone_training_config/instructions.rst:151
msgid "First, create a directory in which you want to do the training."
msgstr ""

#: ../plone_training_config/instructions.rst:155
msgid "If you already have a ``training`` directory because you followed the **Installing Plone without vagrant** instructions above, you should either delete it, rename it, or use a different name below."
msgstr ""

#: ../plone_training_config/instructions.rst:162
msgid "Setup Vagrant to automatically install the current guest additions. You can choose to skip this step if you encounter any problems with it."
msgstr ""

#: ../plone_training_config/instructions.rst:168
msgid "Now download :download:`plone_training_config.zip <../_static/plone_training_config.zip>` and copy its contents into your training directory."
msgstr ""

#: ../plone_training_config/instructions.rst:175
msgid "The training directory should now hold the file ``Vagrantfile`` and the directory ``manifests`` which again contains several files."
msgstr ""

#: ../plone_training_config/instructions.rst:177
msgid "Now start setting up the VM that is configured in ``Vagrantfile``:"
msgstr ""

#: ../plone_training_config/instructions.rst:183
msgid "This takes a **veeeeery loooong time** (between 10 minutes and 1h depending on your internet connection and system speed) since it does all the following steps:"
msgstr ""

#: ../plone_training_config/instructions.rst:185
msgid "downloads a virtual machine (Official Ubuntu Server 14.04 LTS, also called \"Trusty Tahr\")"
msgstr ""

#: ../plone_training_config/instructions.rst:186
msgid "sets up the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:187
msgid "updates the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:188
msgid "installs various system-packages needed for Plone development"
msgstr ""

#: ../plone_training_config/instructions.rst:189
msgid "downloads and unpacks the buildout-cache to get all the eggs for Plone"
msgstr ""

#: ../plone_training_config/instructions.rst:190
msgid "clones the training buildout into /vagrant/buildout"
msgstr ""

#: ../plone_training_config/instructions.rst:191
msgid "builds Plone using the eggs from the buildout-cache"
msgstr ""

#: ../plone_training_config/instructions.rst:195
msgid "Sometimes this stops with the message:"
msgstr ""

#: ../plone_training_config/instructions.rst:201
msgid "If this happens or you have the feeling that something has gone wrong and the installation has not finished correctly for some reason you need to run the following command to repeat the process. This will only repeat steps that have not finished correctly."
msgstr ""

#: ../plone_training_config/instructions.rst:207
msgid "You can do this multiple times to fix problems, e.g. if your network connection was down and steps could not finish because of this."
msgstr ""

#: ../plone_training_config/instructions.rst:211
msgid "If while bringing vagrant up you get an error similar to:"
msgstr ""

#: ../plone_training_config/instructions.rst:217
msgid "The configuration may have stalled out because your computer's BIOS requires virtualization to be enabled. Check with your computer's manufacturer on how to properly enable virtualization.  See: https://teamtreehouse.com/community/vagrant-ssh-sshexchangeidentification-read-connection-reset-by-peer"
msgstr ""

#: ../plone_training_config/instructions.rst:219
msgid "Once Vagrant finishes the provisioning process, you can login to the now running virtual machine."
msgstr ""

#: ../plone_training_config/instructions.rst:227
msgid "If you use Windows you'll have to login with `putty <http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html>`_. Connect to vagrant@127.0.01 at port 2222. User **and** password are ``vagrant``."
msgstr ""

#: ../plone_training_config/instructions.rst:229
msgid "You are now logged in as the user vagrant in ``/home/vagrant``. We'll do all steps of the training as this user."
msgstr ""

#: ../plone_training_config/instructions.rst:231
msgid "Instead we use our own Plone instance during the training. It is in ``/vagrant/buildout/``. Start it in foreground with ``./bin/instance fg``."
msgstr ""

#: ../plone_training_config/instructions.rst:267
msgid "In rare cases when you are using OSX with an UTF-8 character set starting Plone might fail with the following error:"
msgstr ""

#: ../plone_training_config/instructions.rst:273
msgid "In that case you have to put the localized keyboard and language settings in the .bash_profile of the vagrant user to your locale (like ``en_US.UTF-8`` or ``de_DE.UTF-8``)"
msgstr ""

#: ../plone_training_config/instructions.rst:280
msgid "Now the Zope instance we're using is running. You can stop the running instance anytime using ``ctrl + c``."
msgstr ""

#: ../plone_training_config/instructions.rst:282
msgid "If it doesn't, don't worry, your shell isn't blocked. Type ``reset`` (even if you can't see the prompt) and press RETURN, and it should become visible again."
msgstr ""

#: ../plone_training_config/instructions.rst:284
msgid "If you point your local browser at http://localhost:8080 you see that Plone is running in vagrant. This works because VirtualBox forwards the port 8080 from the guest system (the vagrant Ubuntu) to the host system (your normal operating system). Now create a new Plone site by clicking \"Create a new Plone site\". The username and the password are both \"admin\" (Never do this on a real site!)."
msgstr ""

#: ../plone_training_config/instructions.rst:286
msgid "The Buildout for this Plone is in a shared folder.  This means we run it in the vagrant box from ``/vagrant/buildout`` but we can also access it in our own operating system and use our favorite editor. You will find the directory ``buildout`` in the directory ``training`` that you created in the very beginning next to ``Vagrantfile`` and ``manifests``."
msgstr ""

#: ../plone_training_config/instructions.rst:290
msgid "The database and the python packages are not accessible in your own system since large files cannot make use of symlinks in shared folders. The database lies in ``/home/vagrant/var``, the python packages are in ``/home/vagrant/packages``."
msgstr ""

#: ../plone_training_config/instructions.rst:292
msgid "If you have any problems or questions please mail us at team@starzel.de or create a ticket at https://github.com/plone/training/issues."
msgstr ""

#: ../plone_training_config/instructions.rst:298
msgid "What Vagrant does"
msgstr ""

#: ../plone_training_config/instructions.rst:300
msgid "Installation is done automatically by vagrant and puppet. If you want to know which steps are actually done please see the chapter :doc:`what_vagrant_does`."
msgstr ""

#: ../plone_training_config/instructions.rst:306
msgid "**Vagrant Care and Handling**"
msgstr ""

#: ../plone_training_config/instructions.rst:308
msgid "Keep in mind the following recommendations for using your Vagrant virtualboxes:"
msgstr ""

#: ../plone_training_config/instructions.rst:310
msgid "Use the ``vagrant suspend`` or ``vagrant halt`` commands to put the virtualbox to \"sleep\" or to \"power it off\" before attempting to start another Plone instance anywhere else on your machine, if it uses the same port.  That's because vagrant \"reserves\" port 8080, and even if you stopped Plone in vagrant, that port is still in use by the guest OS."
msgstr ""

#: ../plone_training_config/instructions.rst:311
msgid "If you are done with a vagrant box, and want to delete it, always remember to run ``vagrant destroy`` on it before actually deleting the directory containing it.  Otherwise you'll leave its \"ghost\" in the list of boxes managed by vagrant and possibly taking up disk space on your machine."
msgstr ""

#: ../plone_training_config/instructions.rst:312
msgid "See ``vagrant help`` for all available commands, including ``suspend``, ``halt``, ``destroy``, ``up``, ``ssh`` and ``resume``."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:2
msgid "What Vagrant is and does"
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:6
msgid "These steps are automatically done by Vagrant and Puppet for you. They are only interesting if you want to know what goes on under the hood for preparing your virtual training environment."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:8
msgid "Vagrant is an automation tool for developers to script the configuration and starting/stopping of virtual machines using applications like VirtualBox or Vmware Fusion/Workstation. The beauty of Vagrant is that it is largely platform independent for Linux, Windows and Apple, so with one 'Vagrantfile' per project you describe a base installation virtual image and all kinds of virtual machine settings you would otherwise have to click and type together in Virtual machine application."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:10
msgid "What Vagrant for example does is install a port forward so that ``http://localhost:8080`` on your physical computer is automatically forwarded to the port Plone will be listening on in the guest virtual machine. After Vagrant has done its thing to set up your virtual machine we are not finished though. Although Vagrant has the option to prebuild specific images it would be a lot of work and waste of bandwidth to redownload a machine images (300-600Mb) each time we would like to change small things in our virtual training environment."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:12
msgid "Puppet is a configuration management tool (others you might have heard of are Chef, Ansible and SaltStack) and helps system admnistrators to automatically manage servers (real and virtual). We won't get into Puppet in detail, but it builds on top of our base Vagrant image to further set up our environment."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:14
msgid "Vagrant detects when you set up a new machine and runs Puppet or other Provisioners by default only once, although it also can be used to keep machines up to date, which is a bit harder. See the ``Vagrantfile and`` `Vagrant Documentation <https://www.vagrantup.com/docs>`_, especially the ``Provisioning`` chapter."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:16
msgid "This is basically what Puppet does if we were to configure our system by hand:"
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:18
msgid "First we update Ubuntu and install some packages."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:41
msgid "Then we create a virtual python environment using virtualenv. This is always a good practice since that way we get a clean isolated copy of our system python, so that we do not break the system python by installing eggs that might collide with other eggs. Python is nowadays used a lot by your operating system as well for all kinds of system tools and scripting."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:47
msgid "Now we download and unpack a buildout-cache that holds all the python packages that make up Plone. This is an optimisation: We could skip this step and have buildout download all packages individually from the `python packaging index PyPi <https://pypi.python.org/pypi>`_ but that takes much longer on a first install."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:54
msgid "Then we check out our tutorial buildout from https://github.com/collective/training_buildout, checkout the branch *plone4* and build it."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:65
msgid "This will download additional eggs that are not yet part of the buildout-cache and configure Plone to be ready to run."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:67
msgid "At this point Vagrant and Puppet have finished their job to set up your virtual training environment on your local machine."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:69
msgid "You can now connect to the machine and start Plone."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:77
msgid "Now we have a fresh Buildout-based Zope application server, ready to add a Plone site. Go to http://localhost:8080 and create a Plone site."
msgstr ""

