# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-05 05:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../plone_training_config/instructions.rst:4
msgid "Installing Plone for the Training"
msgstr ""

#: ../plone_training_config/instructions.rst:8
msgid "Since Plone 5 is not yet released we are using the current state of Plone 5 as it is being developed. To do so our buildout will extend from the `Plone 5 Coredev Buildout <https://github.com/plone/buildout.coredev/tree/5.0>`_ and automatically checkout all packages that are currently under development (currently about 80)."
msgstr ""

#: ../plone_training_config/instructions.rst:10
msgid "Because of this, running buildout will take much more time than with a released version of Plone 5."
msgstr ""

#: ../plone_training_config/instructions.rst:12
msgid "Keep in mind that you need a fast internet connection during installation since you'll have to download a lot of data!"
msgstr ""

#: ../plone_training_config/instructions.rst:19
msgid "If you feel the desire to try out both methods below (with Vagrant and without), make sure you use different ``training`` directories!  The two installations do not coexist well."
msgstr ""

#: ../plone_training_config/instructions.rst:23
msgid "Installing Plone without vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:27
msgid "If you are **not** used to running Plone on your laptop skip this part and continue with :ref:`install-virtualbox`."
msgstr ""

#: ../plone_training_config/instructions.rst:29
msgid "If you **are** experienced with running Plone on your own laptop, we encourage you to do so because you will have certain benefits:"
msgstr ""

#: ../plone_training_config/instructions.rst:31
msgid "You can use the editor you are used to."
msgstr ""

#: ../plone_training_config/instructions.rst:32
msgid "You can use *omelette* to have all the code of Plone at your fingertips."
msgstr ""

#: ../plone_training_config/instructions.rst:33
msgid "You do not have to switch between different operating systems during the training."
msgstr ""

#: ../plone_training_config/instructions.rst:35
msgid "If you feel comfortable, please work on your own machine with your own Python. But ** please ** make sure that you have a system that will work, since we don't want you to lose valuable time!"
msgstr ""

#: ../plone_training_config/instructions.rst:37
msgid "Set up Plone for the training like this if you use your own OS (Linux or Mac):"
msgstr ""

#: ../plone_training_config/instructions.rst:49
msgid "Now you can run the buildout for the first time:"
msgstr ""

#: ../plone_training_config/instructions.rst:56
msgid "This will take some time and produce a lot of output because it downloads and configures Plone. Once it is done you can start your instance with"
msgstr ""

#: ../plone_training_config/instructions.rst:62
msgid "The output should be simliar to:"
msgstr ""

#: ../plone_training_config/instructions.rst:76
msgid "It the output says ``INFO Zope Ready to handle requests`` then you are in business."
msgstr ""

#: ../plone_training_config/instructions.rst:78
msgid "If you point your local browser at http://localhost:8080 you see that Plone is running. Now create a new Plone site by clicking \"Create a new Plone site\". The username and the password are both \"admin\" (Never do this on a real site!)."
msgstr ""

#: ../plone_training_config/instructions.rst:80
msgid "Now you have a working Plone site up and running and can continue with the next chapter."
msgstr ""

#: ../plone_training_config/instructions.rst:84
msgid "If there is an error message you should either try to fix it or use vagrant and continue in this chapter."
msgstr ""

#: ../plone_training_config/instructions.rst:90
msgid "Installing Plone with vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:92
msgid "In order not to waste too much time with installing and debugging the differences between systems, we use a virtual machine (Ubuntu 14.04) to run Plone during the training. We rely on Vagrant and VirtualBox to give the same development environment to everyone."
msgstr ""

#: ../plone_training_config/instructions.rst:94
msgid "`Vagrant <http://www.vagrantup.com>`_ is a tool for building complete development environments. We use it together with Oracle’s `VirtualBox <https://www.virtualbox.org>`_ to create and manage a virtual environment."
msgstr ""

#: ../plone_training_config/instructions.rst:99
msgid "Install VirtualBox"
msgstr ""

#: ../plone_training_config/instructions.rst:101
msgid "Vagrant uses Oracle’s VirtualBox to create virtual environments. Here is a link directly to the download page: https://www.virtualbox.org/wiki/Downloads. We use VirtualBox 4.3.x"
msgstr ""

#: ../plone_training_config/instructions.rst:107
msgid "Install and configure Vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:109
msgid "Get the latest version from http://www.vagrantup.com/downloads for your operating system and install it."
msgstr ""

#: ../plone_training_config/instructions.rst:113
msgid "In Windows there is a bug in the recent version of Vagrant. Here are the instructions for how to work around the warning ``Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed``."
msgstr ""

#: ../plone_training_config/instructions.rst:115
msgid "Now your system has a command ``vagrant`` that you can run in the terminal."
msgstr ""

#: ../plone_training_config/instructions.rst:117
msgid "First, create a directory in which you want to do the training."
msgstr ""

#: ../plone_training_config/instructions.rst:121
msgid "If you already have a ``training`` directory because you followed the **Installing Plone without vagrant** instructions above, you should either delete it or rename it."
msgstr ""

#: ../plone_training_config/instructions.rst:128
msgid "Setup Vagrant to automatically install the current guest additions. You can choose to skip this step if you encounter any problems with it."
msgstr ""

#: ../plone_training_config/instructions.rst:134
msgid "Now download https://raw.githubusercontent.com/plone/training/plone5/plone_training_config.zip and copy its contents into your training directory."
msgstr ""

#: ../plone_training_config/instructions.rst:141
msgid "The training directory should now hold the file ``Vagrantfile`` and the directory ``manifests`` which again contains several files."
msgstr ""

#: ../plone_training_config/instructions.rst:143
msgid "Now start setting up the VM that is configured in ``Vagrantfile``:"
msgstr ""

#: ../plone_training_config/instructions.rst:149
msgid "This takes a **veeeeery loooong time** (up to 1h depending on your internet connection and system speed) since it does all the following steps:"
msgstr ""

#: ../plone_training_config/instructions.rst:151
msgid "downloads a virtual machine (Official Ubuntu Server 14.04 LTS, also called \"Trusty Tahr\")"
msgstr ""

#: ../plone_training_config/instructions.rst:152
msgid "sets up the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:153
msgid "updates the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:154
msgid "installs various packages needed for Plone development"
msgstr ""

#: ../plone_training_config/instructions.rst:155
msgid "downloads and unpacks the unified installer for Plone"
msgstr ""

#: ../plone_training_config/instructions.rst:156
msgid "runs the unified installer for Plone."
msgstr ""

#: ../plone_training_config/instructions.rst:157
msgid "copies the eggs to a location we use in the training"
msgstr ""

#: ../plone_training_config/instructions.rst:158
msgid "clones the training buildout into /vagrant/buildout"
msgstr ""

#: ../plone_training_config/instructions.rst:159
msgid "builds Plone using the eggs from the buildout-cache"
msgstr ""

#: ../plone_training_config/instructions.rst:163
msgid "Sometimes this stops with the message *Skipping because of failed dependencies*."
msgstr ""

#: ../plone_training_config/instructions.rst:169
msgid "If this happens or you have the feeling that something has gone wrong and the installation has not finished correctly for some reason you need to run the following command to repeat the process. This will only repeat steps that have not finished correctly."
msgstr ""

#: ../plone_training_config/instructions.rst:175
msgid "You can do this multiple times to fix problems, e.g. if your network connection was down and steps could not finish because of this."
msgstr ""

#: ../plone_training_config/instructions.rst:177
msgid "Once Vagrant finishes the provisioning process, you can login to the now running virtual machine."
msgstr ""

#: ../plone_training_config/instructions.rst:185
msgid "If you use Windows you'll have to login with `putty <http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html>`_. Connect to vagrant@127.0.01 at port 2222. User **and** password are ``vagrant``."
msgstr ""

#: ../plone_training_config/instructions.rst:187
msgid "You are now logged in as the user vagrant in ``/home/vagrant``. We'll do all steps of the training as this user."
msgstr ""

#: ../plone_training_config/instructions.rst:189
msgid "We pre-installed a fresh Plone for you in the folder ``/home/vagrant/Plone/zinstance`` You can run it now and access it from the browser. We will **not** use this Plone instance in the training, so you can play around with it as much as you want."
msgstr ""

#: ../plone_training_config/instructions.rst:191
msgid "Instead we use our own Plone instance during the training. It is in ``/vagrant/buildout/``. Start it in foreground with ``./bin/instance fg``."
msgstr ""

#: ../plone_training_config/instructions.rst:209
msgid "In rare cases when you are using OSX with an UTF-8 character set starting Plone might fail with the following error:"
msgstr ""

#: ../plone_training_config/instructions.rst:215
msgid "In that case you have to put the localized keyboard and language settings in the .bash_profile of the vagrant user to your locale (like ``en_US.UTF-8`` or ``de_DE.UTF-8``)"
msgstr ""

#: ../plone_training_config/instructions.rst:222
msgid "Now the Zope instance we're using is running. You can stop the running instance anytime using ``ctrl + c``."
msgstr ""

#: ../plone_training_config/instructions.rst:224
msgid "If it doesn't, don't worry, your shell isn't blocked. Type ``reset`` (even if you can't see the prompt) and press RETURN, and it should become visible again."
msgstr ""

#: ../plone_training_config/instructions.rst:226
msgid "If you point your local browser at http://localhost:8080 you see that Plone is running in vagrant. This works because Virtualbox forwards the port 8080 from the guest system (the vagrant Ubuntu) to the host system (your normal operating system). Now create a new Plone site by clicking \"Create a new Plone site\". The username and the password are both \"admin\" (Never do this on a real site!)."
msgstr ""

#: ../plone_training_config/instructions.rst:228
msgid "The Buildout for this Plone is in a shared folder.  This means we run it in the vagrant box from ``/vagrant/buildout`` but we can also access it in our own operating system and use our favorite editor. You will find the directory ``buildout`` in the directory ``training`` that you created in the very beginning next to ``Vagrantfile`` and ``manifests``."
msgstr ""

#: ../plone_training_config/instructions.rst:232
msgid "The database and the python packages are not accessible in your own system since large files cannot make use of symlinks in shared folders. The database lies in ``/home/vagrant/var``, the python packages are in ``/home/vagrant/packages``."
msgstr ""

#: ../plone_training_config/instructions.rst:234
msgid "If you have any problems or questions please mail us at team@starzel.de or create a ticket at https://github.com/plone/training/issues."
msgstr ""

#: ../plone_training_config/instructions.rst:240
#: ../plone_training_config/what_vagrant_does.rst:2
msgid "What Vagrant does"
msgstr ""

#: ../plone_training_config/instructions.rst:242
msgid "Installation is done automatically by vagrant and puppet. If you want to know which steps are actually done please see the chapter :doc:`what_vagrant_does`."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:6
msgid "These steps are automatically done by vagrant and puppet. They are only explained here if you want to know what goes on below the hood."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:8
msgid "Puppet does the first installation, Puppet is a tool to automatically manage servers (real and virtual). We won't get into Puppet since it is not that widely used. This is basically what Puppet does if we did it by hand:"
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:10
msgid "First we update Ubuntu and install some packages."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:33
msgid "Then we create a virtual python environment using virtualenv. This is always a good practice since that way we get a clean copy of our system python, so that we can't break it by installing eggs that might collide with other eggs::"
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:37
msgid "Then we download, unpack and install the unified installer of Plone."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:50
msgid "The unified installer is an amazing tool that compiles its own python, brings with it all the python eggs we need and puts them in a buildout cache. It then creates a Buildout and makes Plone ready to run."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:52
msgid "We will not actually use this Plone during the training. If you want to use it for your own experiments, you can find it in ``/home/vagrant/Plone/zinstance`` on the virtual machine."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:54
msgid "Instead, vagrant now creates our own little Buildout and only uses the eggs that the unified installer created. First we copy the buildout cache that holds all the python packages that Plone consists of."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:60
msgid "Then we checkout our tutorial buildout from http://github.com/collective/training_buildout, switch to the branch 'plone5' and build it."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:72
msgid "At this point vagrant has finished its job."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:74
msgid "You can now connect to the machine and start plone."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:82
msgid "Now we have a fresh Buildout-based Zope site, ready to add a Plone site. Go to http://localhost:8080 and create a Plone site, only activate the  :guilabel:`Dexterity-based Plone Default Types` plugin."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:84
msgid "You might wonder why we use the unified installer. We use the unified installer to set up a cache of packages to download in a much shorter time. Without it, your first Buildout on a fresh computer would take more than half an hour on a good internet connection."
msgstr ""

