# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by
# the Plone Foundation under a Creative Commons Attribution 4.0
# International license.
# This file is distributed under the same license as the Plone 5 Training
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
# Leonardo J. Caballero G. <leonardocaballero@gmail.com>, 2018.
msgid ""
msgstr ""
"Project-Id-Version: Plone 5 Training 2017\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-26 08:29-0400\n"
"PO-Revision-Date: 2018-04-26 09:36-0400\n"
"Last-Translator: Leonardo J. Caballero G. <leonardocaballero@gmail.com>\n"
"Language-Team: es\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Virtaal 0.7.1\n"
"Generated-By: Babel 2.5.0\n"

#: ../javascript/about/glossary.rst:3
msgid "Glossary"
msgstr "Glosario"

#: ../javascript/about/glossary.rst:6
msgid "AWS"
msgstr "AWS"

#: ../javascript/about/glossary.rst:8
msgid ""
"`Amazon Web Services <https://aws.amazon.com/>`_ offers reliable, "
"scalable, and inexpensive cloud computing services. ree to join, pay only"
" for what you use."
msgstr ""
"`Amazon Web Services <https://aws.amazon.com/>`_ ofrece servicios de "
"computación en la nube confiables, escalables y económicos. libre de "
"unirse, pague solo por lo que usa."

#: ../javascript/about/glossary.rst:10
msgid "Linode"
msgstr "Linode"

#: ../javascript/about/glossary.rst:13
msgid ""
"`Linode.com <https://www.linode.com/>`_ is an American privately owned "
"virtual private server provider company"
msgstr ""
"`Linode.com <https://www.linode.com/>`_ es una empresa proveedora de "
"servidores privada virtual de propiedad privada estadounidense"

#: ../javascript/about/glossary.rst:13
msgid "based in Galloway, New Jersey, United States."
msgstr "con sede en Galloway, New Jersey, Estados Unidos."

#: ../javascript/about/glossary.rst:14
msgid "DigitalOcean"
msgstr "DigitalOcean"

#: ../javascript/about/glossary.rst:17
msgid ""
"`DigitalOcean, Inc. <https://www.digitalocean.com/>`_ is an American "
"cloud infrastructure provider"
msgstr ""
"`DigitalOcean, Inc. <https://www.digitalocean.com/>`_ es un proveedor "
"estadounidense de infraestructura en la nube"

#: ../javascript/about/glossary.rst:17
msgid "headquartered in New York City with data centers worldwide."
msgstr "con sede en la ciudad de Nueva York y centros de datos en todo el mundo."

#: ../javascript/about/glossary.rst:18
msgid "ZODB"
msgstr "ZODB"

#: ../javascript/about/glossary.rst:20
msgid "`A native object database for Python <http://www.zodb.org/en/latest/>`_."
msgstr ""
"`Una base de datos de objetos nativos para Python "
"<http://www.zodb.org/en/latest/>`_."

#: ../javascript/about/glossary.rst:21
msgid "TTW"
msgstr "TTW"

#: ../javascript/about/glossary.rst:23
msgid "Through-The-Web, changes in the browser/"
msgstr "A través de la web, cambios en el navegador/"

#: ../javascript/about/glossary.rst:24
msgid "S3"
msgstr "S3"

#: ../javascript/about/glossary.rst:26
msgid ""
"`Amazon S3 <https://aws.amazon.com/s3/>`_ - Object storage built to store"
" and retrieve any amount of data from anywhere."
msgstr ""
"`Amazon S3 <https://aws.amazon.com/s3/>`_ - Almacenamiento de objetos "
"creado para almacenar y recuperar cualquier cantidad de datos desde "
"cualquier lugar."

#: ../javascript/about/glossary.rst:27
msgid "NFS"
msgstr "NFS"

#: ../javascript/about/glossary.rst:29
msgid ""
"`Network File System "
"<https://en.wikipedia.org/wiki/Network_File_System>`_."
msgstr ""
"`Network File System "
"<https://en.wikipedia.org/wiki/Network_File_System>`_."

#: ../javascript/about/glossary.rst:30
msgid "Amazon Opsworks"
msgstr "Amazon Opsworks"

#: ../javascript/about/glossary.rst:33
msgid ""
"`AWS OpsWorks <https://aws.amazon.com/opsworks/>`_ is a configuration "
"management service that uses Chef,"
msgstr ""
"`AWS OpsWorks <https://aws.amazon.com/opsworks/>`_ es un servicio de "
"administración de configuración que usa Chef,"

#: ../javascript/about/glossary.rst:33
msgid "an automation platform that treats server configurations as code."
msgstr ""
"una plataforma de automatización que trata las configuraciones del "
"servidor como código."

#: ../javascript/about/glossary.rst:34
msgid "Ansible"
msgstr "Ansible"

#: ../javascript/about/glossary.rst:37
msgid ""
"`Ansible <https://www.ansible.com/>`_ is an open source automation "
"platform."
msgstr ""
"`Ansible <https://www.ansible.com/>`_ es una plataforma de automatización"
" de fuente abierta."

#: ../javascript/about/glossary.rst:37
msgid ""
"Ansible can help you with configuration management, application "
"deployment, task automation."
msgstr ""
"Ansible puede ayudarlo con la administración de configuraciones, el "
"despliegue de aplicaciones y la automatización de tareas."

#: ../javascript/about/glossary.rst:38
msgid "Chef"
msgstr "Chef"

#: ../javascript/about/glossary.rst:40
msgid ""
"`A configuration management tool written in Ruby and Erlang "
"<https://www.chef.io/chef/>`_."
msgstr ""
"`Una herramienta de gestión de configuración escrita en Ruby y Erlang "
"<https://www.chef.io/chef/>`_."

#: ../javascript/about/glossary.rst:41
msgid "CloudFormation"
msgstr "CloudFormation"

#: ../javascript/about/glossary.rst:43
msgid ""
"`AWS CloudFormation <https://aws.amazon.com/cloudformation/>`_ gives "
"developers and systems administrators an way to create and manage a "
"collection of related AWS resources, provisioning and updating them in an"
" orderly and predictable fashion."
msgstr ""
"`AWS CloudFormation <https://aws.amazon.com/cloudformation/>`_ brinda a "
"los desarrolladores y administradores de sistemas una forma de crear y "
"administrar una colección de recursos relacionados de AWS, "
"aprovisionándolos y actualizándolos de manera ordenada y predecible."

#: ../javascript/about/glossary.rst:45
msgid "Travis CI"
msgstr "Travis CI"

#: ../javascript/about/glossary.rst:47
msgid ""
"Travis CI is a hosted, distributed continuous integration service used to"
" build and test software projects hosted at GitHub. Open source projects "
"may be tested at no charge via `travis-ci.org <https://travis-ci.org>`_."
msgstr ""
"Travis CI es un servicio de integración continua alojado que se utiliza "
"para crear y probar proyectos de software alojados en GitHub. Los "
"proyectos de código abierto pueden probarse sin cargo a través de "
"`travis-ci.org <https://travis-ci.org>`_."

#: ../javascript/about/glossary.rst:49
msgid "Solr"
msgstr "Solr"

#: ../javascript/about/glossary.rst:51
msgid ""
"`Solr <http://lucene.apache.org/solr/>`_ a the popular, blazing-fast, "
"open source enterprise search platform built on Apache Lucene."
msgstr ""
"`Solr <http://lucene.apache.org/solr/>`_ una popular plataforma de "
"búsqueda empresarial de código abierto, desarrollada en Apache Lucene."

#: ../javascript/about/glossary.rst:52
msgid "ZCML"
msgstr "ZCML"

#: ../javascript/about/glossary.rst:54
msgid ""
"The `Zope Configuration Mark-up Language "
"<https://docs.plone.org/develop/addons/components/zcml.html>`_."
msgstr ""
"El `Lenguaje de marcado de configuración Zope "
"<https://docs.plone.org/develop/addons/components/zcml.html>`_."

#: ../javascript/about/glossary.rst:55
msgid "Diazo"
msgstr "Diazo"

#: ../javascript/about/glossary.rst:57
msgid ""
"`Diazo theme engine guide <http://docs.diazo.org/en/latest/>`_ Diazo "
"allows you to apply a theme contained in a static HTML web page to a "
"dynamic website created using any server-side technology."
msgstr ""
"`Guía del motor de temas Diazo <http://docs.diazo.org/en/latest/>`_ Diazo"
" le permite aplicar un tema contenido en una página web HTML estática a "
"un sitio web dinámico creado utilizando cualquier tecnología del lado del"
" servidor."

#: ../javascript/about/glossary.rst:59
msgid "Dexterity"
msgstr "Dexterity"

#: ../javascript/about/glossary.rst:61
msgid ""
"`Dexterity <https://github.com/plone/plone.dexterity>`_, the base "
"framework for building content types, both through-the-web and as "
"filesystem code for Zope."
msgstr ""

#: ../javascript/about/glossary.rst:62
msgid "Dublin Core"
msgstr "Dublin Core"

#: ../javascript/about/glossary.rst:64
msgid ""
"The Dublin Core Schema is a small set of vocabulary terms that can be "
"used to describe web resources (video, images, web pages, etc.), as well "
"as physical resources such as books or CDs, and objects like artworks."
msgstr ""

#: ../javascript/about/glossary.rst:66
msgid "ZMI"
msgstr "ZMI"

#: ../javascript/about/glossary.rst:68
msgid ""
"The Zope Management Interface. The ZMI is a direct interface into the "
"backend software stack of Plone. While it can still serve as a valuable "
"tool for Plone specialists to fix problems or accomplish certain tasks, "
"it is not recommended as a regular tool for Plone maintenance."
msgstr ""

#: ../javascript/about/index.rst:3 ../javascript/index.rst
msgid "About"
msgstr "Acerca de"

#: ../javascript/development-process.rst:3
msgid "JavaScript Development Process"
msgstr "Proceso del desarrollo de JavaScript"

#: ../javascript/development-process.rst:6
msgid "Code Style"
msgstr ""

#: ../javascript/development-process.rst:8
msgid ""
"Together with `plone.api` <https://github.com/plone/plone.api>`_ we "
"developed `code style guidelines "
"<https://github.com/plone/plone.api/blob/master/docs/contribute/conventions.rst>`_,"
" which we are enforcing now for core Plone development."
msgstr ""

#: ../javascript/development-process.rst:11
msgid "This makes code so much more readable."
msgstr ""

#: ../javascript/development-process.rst:13
msgid ""
"It currently doesn't cover JavaScript code guidelines, but those were "
"considered when Mockup was developed."
msgstr ""

#: ../javascript/development-process.rst:15
msgid ""
"And luckily, similar to PEP 8 and the associated tooling "
"(:program:`pep8`, :program:`pyflakes`, :program:`flake8`), JavaScript "
"also has some guidelines - not official, but well respected."
msgstr ""

#: ../javascript/development-process.rst:18
msgid ""
"`Douglas Crockford <http://crockford.com/javascript/>`_ - besides of "
"specifying the JSON standard - wrote the well known book \"JavaScript the"
" good parts\"."
msgstr ""

#: ../javascript/development-process.rst:20
msgid ""
"Out of that he developed the code linter `JSLint "
"<http://www.jslint.com/>`_."
msgstr ""

#: ../javascript/development-process.rst:22
msgid ""
"Because this one was too strict, some other people wrote `JSHint "
"<http://jshint.com/>`_."
msgstr ""

#: ../javascript/development-process.rst:24
msgid ""
"Mockup uses JSHint with the following `.jshintrc configuration file "
"<https://github.com/plone/mockup/blob/master/mockup/.jshintrc>`_:"
msgstr ""

#: ../javascript/development-process.rst:62
msgid ""
"When working with JSHint or JSLint, it can be very useful to get some "
"more context and explanation about several lint-errors. There is a lint-"
"error database available, which can be very handy: http://lint-"
"explain.herokuapp.com/ For JSHint there is a list of all configurable "
"options: http://jshint.com/docs/options/"
msgstr ""

#: ../javascript/development-process.rst:67
msgid ""
"We strongly recommend to configure your editor of choice to do JavaScript"
" code linting on save. The Mockup project is enforcing Lint-error-free "
"code."
msgstr ""

#: ../javascript/development-process.rst:70
msgid ""
"Besides of that, this will also make you a better coder. The JSHint site "
"lists some editors with Plugins to support JSHint linting: "
"http://jshint.com/install/"
msgstr ""

#: ../javascript/development-process.rst:74
msgid "Regarding spaces/tabs and indentation:"
msgstr ""

#: ../javascript/development-process.rst:76
msgid "Spaces instead of tabs."
msgstr ""

#: ../javascript/development-process.rst:77
msgid "Tab indentation: 2 characters (to save screen estate)."
msgstr ""

#: ../javascript/development-process.rst:79
msgid "You have to configure your editor to respect these settings."
msgstr ""

#: ../javascript/development-process.rst:81
msgid ""
"Confirming on a common code style makes contributing much more easier, "
"friendly and fun!"
msgstr ""

#: ../javascript/development-process.rst:85
msgid "Mockup Contributions"
msgstr ""

#: ../javascript/development-process.rst:87
msgid "For each feature, create a branch and make pull-requests on GitHub."
msgstr ""

#: ../javascript/development-process.rst:89
msgid ""
"Try to include all your changes in one commit only, so that our commit "
"history stays clean."
msgstr ""

#: ../javascript/development-process.rst:91
msgid ""
"Still, you can do many commits to not accidentally loose changes and "
"still commit to the last commit by doing"
msgstr ""

#: ../javascript/development-process.rst:97
msgid ""
"Don't forget to also include a change log entry in the "
":file:`CHANGES.rst` file."
msgstr ""

#: ../javascript/development-process.rst:101
msgid "Documentation"
msgstr "Documentación"

#: ../javascript/development-process.rst:103
msgid ""
"Besides documenting your changes in the :file:`CHANGES.rst` file, also "
"include user and developer documentation as appropriate."
msgstr ""

#: ../javascript/development-process.rst:105
msgid ""
"For patterns, the user documentation is included in a comment in the "
"header of the pattern file, as described in :ref:`mockup-writing-"
"documentation`."
msgstr ""

#: ../javascript/development-process.rst:107
msgid ""
"For function and methods, write an API documentation, following the "
"`apidocjs <http://apidocjs.com/>`_ standard."
msgstr ""

#: ../javascript/development-process.rst:109
msgid "You can find some examples throughout the source code."
msgstr ""

#: ../javascript/development-process.rst:111
msgid ""
"We also very welcome contributions to the `training documentation "
"<https://github.com/plone/training>`_ and the `official documentation "
"<https://github.com/plone/documentation>`_."
msgstr ""

#: ../javascript/development-process.rst:113
msgid ""
"As with other contributions: please create branches and make pull-"
"requests!"
msgstr ""

#: ../javascript/exercises/1.rst:3
msgid "Exercise 1: Include a JavaScript resource TTW"
msgstr ""

#: ../javascript/exercises/1.rst:7 ../javascript/exercises/10.rst:7
#: ../javascript/exercises/11.rst:7 ../javascript/exercises/12.rst:7
#: ../javascript/exercises/13.rst:7 ../javascript/exercises/2.rst:7
#: ../javascript/exercises/3.rst:7 ../javascript/exercises/4.rst:7
#: ../javascript/exercises/5.rst:7 ../javascript/exercises/6.rst:7
#: ../javascript/exercises/7.rst:7 ../javascript/exercises/8.rst:7
#: ../javascript/exercises/9.rst:7
msgid ""
"This exercise requires a working buildout using a fork of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/1.rst:11
msgid ""
"For this exercise, we are going to include a Javascript using the "
"resource registry through the web"
msgstr ""

#: ../javascript/exercises/1.rst:13
msgid ""
"We will be working in the ``exercise1`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/1.rst:17
msgid "Create your browser view"
msgstr ""

#: ../javascript/exercises/1.rst:21
msgid ""
"This might be redundant with other documentation. Skip ahead if you know "
"how to create browser views."
msgstr ""

#: ../javascript/exercises/1.rst:24
msgid ""
"Let’s add a basic new page view. This is only needed for calling our "
"Javascript file. Add this into your ``exercise1/page.pt`` file"
msgstr ""

#: ../javascript/exercises/1.rst:41
msgid ""
"And wire it up with :term:`ZCML` registration in the "
"``exercise1/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/1.rst:54
msgid "Add your JavaScript file"
msgstr ""

#: ../javascript/exercises/1.rst:56 ../javascript/exercises/9.rst:45
msgid "Go to the Site Setup, then to the Resource Registries."
msgstr ""

#: ../javascript/exercises/1.rst:58
msgid "Under the ``Overrides`` tab, click ``Add file``"
msgstr ""

#: ../javascript/exercises/1.rst:60
msgid "When it asks to give it a name, enter ``++plone++static/exercise1.js``"
msgstr ""

#: ../javascript/exercises/1.rst:62
msgid "Inside the new editor that comes up, enter the following"
msgstr ""

#: ../javascript/exercises/1.rst:94
msgid "Click ``Save``"
msgstr ""

#: ../javascript/exercises/1.rst:96
msgid ""
"You can verify that the resource works by going to "
"``http://localhost:8080/Plone/++plone++static/exercise1.js``"
msgstr ""

#: ../javascript/exercises/1.rst:100
msgid "Use the Javascript in your template"
msgstr ""

#: ../javascript/exercises/1.rst:102
msgid ""
"Now, you just need to edit your ``exercise1/page.pt`` file, so it would "
"look like this"
msgstr ""

#: ../javascript/exercises/1.rst:124 ../javascript/exercises/10.rst:212
#: ../javascript/exercises/11.rst:119 ../javascript/exercises/12.rst:120
#: ../javascript/exercises/13.rst:127 ../javascript/exercises/2.rst:163
#: ../javascript/exercises/3.rst:135 ../javascript/exercises/4.rst:116
#: ../javascript/exercises/5.rst:190 ../javascript/exercises/6.rst:187
#: ../javascript/exercises/7.rst:140 ../javascript/exercises/8.rst:149
#: ../javascript/exercises/9.rst:22
msgid "Installation"
msgstr "Instalación"

#: ../javascript/exercises/1.rst:126 ../javascript/exercises/10.rst:214
#: ../javascript/exercises/11.rst:121 ../javascript/exercises/12.rst:122
#: ../javascript/exercises/13.rst:131 ../javascript/exercises/2.rst:165
#: ../javascript/exercises/3.rst:137 ../javascript/exercises/4.rst:118
#: ../javascript/exercises/5.rst:192 ../javascript/exercises/6.rst:189
#: ../javascript/exercises/7.rst:144 ../javascript/exercises/8.rst:153
#: ../javascript/exercises/9.rst:26
msgid "Start up your Plone instance"
msgstr ""

#: ../javascript/exercises/1.rst:128
msgid ""
"Then, visit the URL: ``http://localhost:8080/Plone/front-"
"page/@@exercise1``."
msgstr ""

#: ../javascript/exercises/1.rst:131
msgid ""
"This is assuming your Plone is is located at the URL "
"``http://localhost:8080/Plone``."
msgstr ""

#: ../javascript/exercises/1.rst:135 ../javascript/exercises/10.rst:234
#: ../javascript/exercises/11.rst:154 ../javascript/exercises/12.rst:156
#: ../javascript/exercises/13.rst:158 ../javascript/exercises/2.rst:175
#: ../javascript/exercises/3.rst:152 ../javascript/exercises/4.rst:137
#: ../javascript/exercises/5.rst:219 ../javascript/exercises/7.rst:173
#: ../javascript/exercises/8.rst:173
msgid "Production"
msgstr ""

#: ../javascript/exercises/1.rst:137
msgid ""
"In this exercise, there is no special distinction between development and"
" production builds. The JavaScript is developed without any build "
"process."
msgstr ""

#: ../javascript/exercises/10.rst:3
msgid "Exercise 10: NG2 APP Component Rendered In A Browser View"
msgstr ""

#: ../javascript/exercises/10.rst:11
msgid ""
"For this exercise, we will run an Angular 2 application inside a Plone "
"browser view."
msgstr ""

#: ../javascript/exercises/10.rst:13 ../javascript/exercises/11.rst:13
msgid ""
"We have most of the Angular 2 boiler plate code created for you so let's "
"finish up a few things so you can customize it."
msgstr ""

#: ../javascript/exercises/10.rst:16
msgid ""
"In this case we are going to use angular client to create the app inside "
"the package."
msgstr ""

#: ../javascript/exercises/10.rst:18
msgid ""
"We will be working in the ``exercise10`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/10.rst:21 ../javascript/exercises/11.rst:19
#: ../javascript/exercises/12.rst:19
msgid "Bootstrap"
msgstr ""

#: ../javascript/exercises/10.rst:23 ../javascript/exercises/11.rst:21
#: ../javascript/exercises/12.rst:21
msgid "Install npm dependencies"
msgstr ""

#: ../javascript/exercises/10.rst:33 ../javascript/exercises/11.rst:30
#: ../javascript/exercises/12.rst:30
msgid "Add Your Angular 2 Component"
msgstr ""

#: ../javascript/exercises/10.rst:35
msgid ""
"In your ``exercise10/static/ng2app`` directory, there is a boilerplate "
"code for an ng2 app."
msgstr ""

#: ../javascript/exercises/10.rst:38
msgid "You can use ng2 cli to create new components, modules, services, ..."
msgstr ""

#: ../javascript/exercises/10.rst:40
msgid "We hope you like typescript."
msgstr ""

#: ../javascript/exercises/10.rst:42
msgid ""
"We can change the exercise10/static/src/app/app.component.html to create "
"your own template."
msgstr ""

#: ../javascript/exercises/10.rst:44
msgid "Like I said, you can do whatever in this module."
msgstr ""

#: ../javascript/exercises/10.rst:48 ../javascript/exercises/11.rst:59
#: ../javascript/exercises/12.rst:59 ../javascript/exercises/13.rst:71
#: ../javascript/exercises/2.rst:59 ../javascript/exercises/5.rst:104
#: ../javascript/exercises/6.rst:76 ../javascript/exercises/7.rst:59
#: ../javascript/exercises/8.rst:95
msgid "Register Static Resource Directory"
msgstr ""

#: ../javascript/exercises/10.rst:50 ../javascript/exercises/12.rst:61
#: ../javascript/exercises/2.rst:61
msgid "Next, let’s register the static directory we just placed our script into."
msgstr ""

#: ../javascript/exercises/10.rst:52 ../javascript/exercises/12.rst:63
#: ../javascript/exercises/2.rst:63
msgid ""
"To register, you need to add :term:`ZCML` registration for the static "
"directory your script is in."
msgstr ""

#: ../javascript/exercises/10.rst:55
msgid "Add this to the ``exercise10/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/10.rst:67 ../javascript/exercises/11.rst:76
#: ../javascript/exercises/12.rst:78
msgid "Build The File With Webpack"
msgstr ""

#: ../javascript/exercises/10.rst:69
msgid "Our deployment is built using the ng command line tool"
msgstr ""

#: ../javascript/exercises/10.rst:77 ../javascript/exercises/11.rst:86
msgid ""
"Whenever you make a change to your component files, webpack will auto re-"
"build the distribution."
msgstr ""

#: ../javascript/exercises/10.rst:82 ../javascript/exercises/12.rst:93
#: ../javascript/exercises/2.rst:78 ../javascript/exercises/6.rst:94
msgid "Register JavaScript Resource"
msgstr ""

#: ../javascript/exercises/10.rst:84
msgid ""
"Angular CLI creates three js, one for basic webpack instructions, one "
"with the main js and another with the styling js."
msgstr ""

#: ../javascript/exercises/10.rst:87
msgid ""
"You will need to register the three on the "
"``exercise10/profiles/default/registry.xml``"
msgstr ""

#: ../javascript/exercises/10.rst:107
msgid ""
"Its really important that in case that you need to have dependency on "
"loading the js you define on the registry.xml as its shown for the main "
"js."
msgstr ""

#: ../javascript/exercises/10.rst:110
msgid ""
"Finally we want to create a single entry point to load them, so we are "
"going to create and register a js with the requires that are loading the "
"app on a file called ``static/ng2app/main.js``"
msgstr ""

#: ../javascript/exercises/10.rst:119
msgid ""
"With the main.js defined on the filesystem we can now create the resource"
" as a new resource"
msgstr ""

#: ../javascript/exercises/10.rst:131 ../javascript/exercises/2.rst:94
msgid "Create Your Browser View"
msgstr ""

#: ../javascript/exercises/10.rst:135 ../javascript/exercises/2.rst:98
msgid "This might be redundant with other documentation."
msgstr ""

#: ../javascript/exercises/10.rst:137 ../javascript/exercises/2.rst:100
msgid "Skip ahead if you know how to create browser views."
msgstr ""

#: ../javascript/exercises/10.rst:140 ../javascript/exercises/2.rst:103
msgid ""
"Let’s load our JavaScript file to only load on a specific page you need "
"it on."
msgstr ""

#: ../javascript/exercises/10.rst:142 ../javascript/exercises/2.rst:105
msgid "In our case, let’s add a basic new page view."
msgstr ""

#: ../javascript/exercises/10.rst:144 ../javascript/exercises/2.rst:107
msgid ""
"The page template doesn’t need to implement any logic and we can use the "
"main template to bring in the content of the page we’re using in the "
"JavaScript(h1)."
msgstr ""

#: ../javascript/exercises/10.rst:147
msgid "Add this into your ``exercise10/page.pt`` file"
msgstr ""

#: ../javascript/exercises/10.rst:171
msgid "The ``app-root`` tag is what is used for the component selector."
msgstr ""

#: ../javascript/exercises/10.rst:173
msgid "You can customize this and use whatever selector you like."
msgstr ""

#: ../javascript/exercises/10.rst:177 ../javascript/exercises/2.rst:128
msgid "Load Your JavaScript Resource"
msgstr ""

#: ../javascript/exercises/10.rst:179
msgid ""
"Add in view python code to tell Plone to render the script in the "
"``exercise10/browser.py`` file"
msgstr ""

#: ../javascript/exercises/10.rst:196 ../javascript/exercises/2.rst:147
msgid "The most interesting part here is to look at ``add_resource_on_request``."
msgstr ""

#: ../javascript/exercises/10.rst:198
msgid ""
"Finally, wire it up with :term:`ZCML` registration in the "
"``exercise10/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/10.rst:215
msgid "Install the ``Exercise 10`` add-on"
msgstr ""

#: ../javascript/exercises/10.rst:216
msgid "Toggle development mode to make sure the new resources are included"
msgstr ""

#: ../javascript/exercises/10.rst:219
msgid ""
"Then, visit the URL:``http://localhost:8080/Plone/front-"
"page/@@exercise10``."
msgstr ""

#: ../javascript/exercises/10.rst:221 ../javascript/exercises/2.rst:171
msgid ""
"This is assuming your Plone is located at the URL "
"``http://localhost:8080/Plone``."
msgstr ""

#: ../javascript/exercises/10.rst:225 ../javascript/exercises/11.rst:127
#: ../javascript/exercises/12.rst:140
msgid ""
"To make sure your resource registry configuration changes apply, you'll "
"need to be in development mode."
msgstr ""

#: ../javascript/exercises/10.rst:228 ../javascript/exercises/11.rst:130
#: ../javascript/exercises/12.rst:143
msgid ""
"You can also toggle development mode on and off, click save, to force "
"configuration to be re-built after changes instead of keeping development"
" mode on."
msgstr ""

#: ../javascript/exercises/10.rst:236 ../javascript/exercises/2.rst:177
msgid ""
"In this exercise, there is no special distinction between development and"
" production builds."
msgstr ""

#: ../javascript/exercises/10.rst:239
msgid ""
"webpack re-builds the resource on every change for you and the JavaScript"
" build file is not added to any bundle--it is loaded for this particular "
"page."
msgstr ""

#: ../javascript/exercises/11.rst:3
msgid "Exercise 11: NG2 APP Component In a A bundle"
msgstr ""

#: ../javascript/exercises/11.rst:11 ../javascript/exercises/12.rst:11
msgid "For this exercise, we will add an Angular 2 application to a Plone bundle."
msgstr ""

#: ../javascript/exercises/11.rst:16
msgid ""
"We will be working in the ``exercise11`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/11.rst:32
msgid ""
"In your ``exercise11/static/app`` directory, add a file named "
"``app.component.ts``. Use this file to do anything you would like to the "
"page."
msgstr ""

#: ../javascript/exercises/11.rst:35
msgid "This example will stick with the angular 2 quickstart code."
msgstr ""

#: ../javascript/exercises/11.rst:37 ../javascript/exercises/12.rst:37
msgid "We hope you like typescript"
msgstr ""

#: ../javascript/exercises/11.rst:49 ../javascript/exercises/12.rst:49
msgid ""
"You can do whatever in this module however, please notice how we changed "
"the selector to ``.my-app``."
msgstr ""

#: ../javascript/exercises/11.rst:52 ../javascript/exercises/12.rst:52
msgid "In Angular 2, the selector can be anything."
msgstr ""

#: ../javascript/exercises/11.rst:54 ../javascript/exercises/12.rst:54
msgid ""
"By changing it to a class name, it will be easier for us to choose where "
"we want to bootstrap our Angular 2 component."
msgstr ""

#: ../javascript/exercises/11.rst:61
msgid "Next, let’s register the static directory we placed our script into."
msgstr ""

#: ../javascript/exercises/11.rst:63
msgid ""
"To register, you need to add :term:`ZCML` registration for the static "
"directory your script is in. Add this to the "
"``exercise11/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/11.rst:78 ../javascript/exercises/12.rst:80
msgid "Our deployment is built using webpack"
msgstr ""

#: ../javascript/exercises/11.rst:91
msgid "Register JavaScript Resource As A Bundle"
msgstr ""

#: ../javascript/exercises/11.rst:93 ../javascript/exercises/6.rst:96
msgid "Register our script as a JavaScript resource with Plone."
msgstr ""

#: ../javascript/exercises/11.rst:95
msgid ""
"In the ``exercise11/profiles/default/registry.xml`` file, add "
"configuration to register your script"
msgstr ""

#: ../javascript/exercises/11.rst:111
msgid "A couple notes about this configuration:"
msgstr ""

#: ../javascript/exercises/11.rst:113
msgid ""
"``merge_with`` tells Plone to combine this file with the default Plone "
"bundles"
msgstr ""

#: ../javascript/exercises/11.rst:114
msgid ""
"``compile`` is distinguish this bundle as one that is compiled outside of"
" Plone"
msgstr ""

#: ../javascript/exercises/11.rst:115
msgid ""
"``jscompilation`` and ``csscompilation`` are what Plone uses as the final"
" compiled output"
msgstr ""

#: ../javascript/exercises/11.rst:122
msgid "Install the ``Exercise 11`` add-on"
msgstr ""

#: ../javascript/exercises/11.rst:136 ../javascript/exercises/12.rst:127
#: ../javascript/exercises/13.rst:136 ../javascript/exercises/4.rst:123
#: ../javascript/exercises/5.rst:197 ../javascript/exercises/7.rst:149
#: ../javascript/exercises/8.rst:158
msgid "Running"
msgstr ""

#: ../javascript/exercises/11.rst:138
msgid ""
"It's up to you how to apply the component class name to an element of "
"your choice. A couple options available to you are:"
msgstr ""

#: ../javascript/exercises/11.rst:141 ../javascript/exercises/12.rst:133
msgid "use TinyMCE source view and add ``class=\"my-app\"`` onto any tag"
msgstr ""

#: ../javascript/exercises/11.rst:142 ../javascript/exercises/12.rst:134
#: ../javascript/exercises/13.rst:153 ../javascript/exercises/5.rst:214
#: ../javascript/exercises/7.rst:168
msgid ""
"customize the theme on your site and add it to an element in your theme "
"file or use a diazo rule diazo rule to dynamically add the class to an "
"element"
msgstr ""

#: ../javascript/exercises/11.rst:147 ../javascript/exercises/12.rst:149
msgid "Development"
msgstr ""

#: ../javascript/exercises/11.rst:149
msgid ""
"To make sure your changes are loaded after every build with webpack, make"
" sure to go into :menuselection:`Setup --> Resource registries` and "
"enable development mode."
msgstr ""

#: ../javascript/exercises/11.rst:156 ../javascript/exercises/12.rst:158
msgid ""
"Production for this is simple when you're no longer in development mode "
"on your Plone site."
msgstr ""

#: ../javascript/exercises/11.rst:159 ../javascript/exercises/12.rst:161
msgid "webpack rebuilds the JavaScript distribution on every change."
msgstr ""

#: ../javascript/exercises/12.rst:3
msgid "Exercise 12: NG2 APP In Logged In Bundle"
msgstr ""

#: ../javascript/exercises/12.rst:13
msgid ""
"We have most of the Angular 2 boilerplate code created for you so let's "
"finish up a few things so you can customize it."
msgstr ""

#: ../javascript/exercises/12.rst:16
msgid ""
"We will be working in the ``exercise12`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/12.rst:32
msgid ""
"In your ``exercise12/static/app`` directory, add a file named "
"``app.component.ts``. Use this file to do anything you would like to the "
"page."
msgstr ""

#: ../javascript/exercises/12.rst:35
msgid "This example will stick with the Angular 2 quickstart code."
msgstr ""

#: ../javascript/exercises/12.rst:66
msgid "Add this to the ``exercise12/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/12.rst:88
msgid ""
"Whenever you make a change to your component files, webpack will auto re-"
"build the distribution"
msgstr ""

#: ../javascript/exercises/12.rst:95
msgid ""
"Let’s register our script as a JavaScript resource with Plone. In the "
"``exercise12/profiles/default/registry.xml`` file, add configuration to "
"register your script"
msgstr ""

#: ../javascript/exercises/12.rst:113
msgid "Pay attention to this part of the exercise."
msgstr ""

#: ../javascript/exercises/12.rst:115
msgid "Here we merge the bundle with ``logged-in`` instead of ``default``."
msgstr ""

#: ../javascript/exercises/12.rst:116
msgid ""
"We also added an ``expression`` configuration option to specify that we "
"only want this bundle to load for logged in users."
msgstr ""

#: ../javascript/exercises/12.rst:123
msgid "Install the ``Exercise 12`` add-on"
msgstr ""

#: ../javascript/exercises/12.rst:129
msgid ""
"It's up to you how to apply the component class name to an element of "
"your choice."
msgstr ""

#: ../javascript/exercises/12.rst:131
msgid "A couple options available to you are:"
msgstr ""

#: ../javascript/exercises/12.rst:151
msgid ""
"To make sure your changes are loaded after every build with webpack, make"
" sure to go into Site :menuselection:`Setup --> Resource registries` and "
"enable development mode."
msgstr ""

#: ../javascript/exercises/13.rst:3
msgid "Exercise 13: Pattern with React"
msgstr ""

#: ../javascript/exercises/13.rst:11
msgid ""
"In this exercise, we'll be walking through creating a pattern that uses "
"`ReactJS <https://reactjs.org/>`_."
msgstr ""

#: ../javascript/exercises/13.rst:14
msgid ""
"We will be working in the ``exercise13`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/13.rst:18 ../javascript/exercises/5.rst:16
#: ../javascript/exercises/7.rst:18 ../javascript/exercises/8.rst:16
msgid "Add Your Pattern File"
msgstr ""

#: ../javascript/exercises/13.rst:20
msgid ""
"First off, in your ``exercise13/static`` directory, add a file named "
"``pattern.js``. Use this file to build your pattern."
msgstr ""

#: ../javascript/exercises/13.rst:23
msgid "This example will bind a React component to a pattern element:"
msgstr ""

#: ../javascript/exercises/13.rst:63
msgid ""
"Notice that the ``init`` of the pattern utilizes the React element "
"binding syntax."
msgstr ""

#: ../javascript/exercises/13.rst:65
msgid ""
"From there, react takes over and options from the pattern go into "
"``props`` for the React component."
msgstr ""

#: ../javascript/exercises/13.rst:73 ../javascript/exercises/5.rst:106
#: ../javascript/exercises/6.rst:78
msgid ""
"Next, let’s register the static directory we just placed our script into."
" To register, you need to add :term:`ZCML` registration for the static "
"directory your script is in."
msgstr ""

#: ../javascript/exercises/13.rst:77
msgid "Add this to the ``exercise13/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/13.rst:88 ../javascript/exercises/5.rst:121
#: ../javascript/exercises/7.rst:76 ../javascript/exercises/8.rst:111
msgid "Register Your Bundle"
msgstr ""

#: ../javascript/exercises/13.rst:90
msgid "Registration is done exactly like the other examples:"
msgstr ""

#: ../javascript/exercises/13.rst:129 ../javascript/exercises/7.rst:142
msgid "At this point, we have all the files necessary to run the pattern."
msgstr ""

#: ../javascript/exercises/13.rst:132
msgid "Install the ``Exercise 13`` add-on"
msgstr ""

#: ../javascript/exercises/13.rst:138 ../javascript/exercises/4.rst:125
#: ../javascript/exercises/5.rst:199 ../javascript/exercises/7.rst:151
msgid ""
"At this point, we have no compiled version of the code that we're running"
" with so our code doesn't do anything."
msgstr ""

#: ../javascript/exercises/13.rst:141 ../javascript/exercises/7.rst:154
#: ../javascript/exercises/8.rst:163
msgid "Go into :menuselection:`Site Setup --> Resource Registries`"
msgstr ""

#: ../javascript/exercises/13.rst:142 ../javascript/exercises/5.rst:203
#: ../javascript/exercises/7.rst:155 ../javascript/exercises/8.rst:164
msgid "Check :guilabel:`Development Mode`"
msgstr ""

#: ../javascript/exercises/13.rst:143
msgid "Select to develop JavaScript and CSS for the ``exercise13`` bundle"
msgstr ""

#: ../javascript/exercises/13.rst:144
msgid "Click :guilabel:`save`"
msgstr ""

#: ../javascript/exercises/13.rst:146
msgid ""
"This should load your JavaScript and LESS files now; however, we don't "
"have any elements with the ``pat-exercise13`` class assigned to them."
msgstr ""

#: ../javascript/exercises/13.rst:149 ../javascript/exercises/5.rst:210
#: ../javascript/exercises/7.rst:162
msgid ""
"It's up to you how to apply the pattern class to an element of your "
"choice. A couple options available to you are:"
msgstr ""

#: ../javascript/exercises/13.rst:152
msgid "use TinyMCE source view and add ``class=\"pat-exercise13\"`` onto any tag"
msgstr ""

#: ../javascript/exercises/13.rst:160 ../javascript/exercises/4.rst:140
#: ../javascript/exercises/5.rst:221 ../javascript/exercises/7.rst:175
#: ../javascript/exercises/8.rst:175
msgid ""
"To build our bundle, we'll utilize the ``plone-compile-resources`` script"
" that Plone ships with."
msgstr ""

#: ../javascript/exercises/13.rst:166 ../javascript/exercises/4.rst:146
#: ../javascript/exercises/5.rst:227 ../javascript/exercises/7.rst:181
#: ../javascript/exercises/8.rst:181
msgid ""
"If you're not running a ZEO setup, you'll need to shut down your Plone "
"instance since the ZODB in this mode does not allow multiple processes to"
" access it at the same time."
msgstr ""

#: ../javascript/exercises/13.rst:171
msgid "An example command will look like this:"
msgstr ""

#: ../javascript/exercises/13.rst:178 ../javascript/exercises/4.rst:158
#: ../javascript/exercises/5.rst:239 ../javascript/exercises/7.rst:193
#: ../javascript/exercises/8.rst:193
msgid ""
"Once this command finishes, your bundle is built and will be deployed "
"with your package package."
msgstr ""

#: ../javascript/exercises/2.rst:3
msgid "Exercise 2: Include JavaScript In Browser View"
msgstr ""

#: ../javascript/exercises/2.rst:11
msgid "For this exercise, we are simply including JavaScript in a browser view."
msgstr ""

#: ../javascript/exercises/2.rst:13
msgid ""
"We will be working in the ``exercise2`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/2.rst:16 ../javascript/exercises/3.rst:22
#: ../javascript/exercises/6.rst:17
msgid "Add Your JavaScript File"
msgstr ""

#: ../javascript/exercises/2.rst:18
msgid "In your ``exercise2/static`` directory, add a file named ``script.js``."
msgstr ""

#: ../javascript/exercises/2.rst:20
msgid "This exercise is open ended as to what you do with JavaScript on the page."
msgstr ""

#: ../javascript/exercises/2.rst:22
msgid ""
"We'll stay very simple for the sake of brevity, using `jQuery "
"<https://jquery.com/>`_ to do a animation effect on the title of the page"
msgstr ""

#: ../javascript/exercises/2.rst:55
msgid "Feel free to customize the script to do whatever you'd like."
msgstr ""

#: ../javascript/exercises/2.rst:66
msgid "Add this to the ``exercise2/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/2.rst:80
msgid "Let’s register our script as a JavaScript resource with Plone."
msgstr ""

#: ../javascript/exercises/2.rst:82
msgid ""
"In the ``exercise2/profiles/default/registry.xml`` file, add "
"configuration to register your script"
msgstr ""

#: ../javascript/exercises/2.rst:110
msgid "Add this into your ``exercise2/page.pt`` file"
msgstr ""

#: ../javascript/exercises/2.rst:130
msgid ""
"Add in view python code to tell Plone to render the script in the "
"``exercise2/browser.py`` file"
msgstr ""

#: ../javascript/exercises/2.rst:149
msgid ""
"Wire it up with :term:`ZCML` registration in the "
"``exercise2/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/2.rst:166
msgid "Install the ``Exercise 2`` add-on"
msgstr ""

#: ../javascript/exercises/2.rst:169
msgid ""
"Then, visit the URL: ``http://localhost:8080/Plone/front-"
"page/@@exercise2``."
msgstr ""

#: ../javascript/exercises/2.rst:180
msgid "The JavaScript is developed without any build process."
msgstr ""

#: ../javascript/exercises/3.rst:3
msgid "Exercise 3: Gallery Integration With Theme"
msgstr ""

#: ../javascript/exercises/3.rst:11
msgid ""
"In this exercise, we'll be walking through how to include custom "
"JavaScript into your theme."
msgstr ""

#: ../javascript/exercises/3.rst:14
msgid "This example essentially re-uses the Barceloneta theme."
msgstr ""

#: ../javascript/exercises/3.rst:16
msgid ""
"It's more important to pay attention to how the integration with the "
"theme works, than worrying about diazo/theming details for this exercise."
msgstr ""

#: ../javascript/exercises/3.rst:19
msgid ""
"We will be working in the ``exercise3`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/3.rst:24
msgid ""
"The lightGallery distribution files are already included in the "
"``collective.jstraining`` package you're working with."
msgstr ""

#: ../javascript/exercises/3.rst:27
msgid ""
"In your ``exercise3/theme`` directory, add a file named "
"``integration.js``. We'll use this file to integrate with Plone's album "
"view"
msgstr ""

#: ../javascript/exercises/3.rst:53
msgid "Let's talk about each part of this file in detail..."
msgstr ""

#: ../javascript/exercises/3.rst:55
msgid "Require the lightGallery JavaScript"
msgstr ""

#: ../javascript/exercises/3.rst:68
msgid ""
"This tells `RequirejS <http://requirejs.org/>`_ to load the `jQuery "
"<https://jquery.com/>`_ and the lightGallery JavaScript."
msgstr ""

#: ../javascript/exercises/3.rst:70
msgid ""
"What is important to pay attention to in this example is that we are "
"seeing if there are any ``photoAlbumEntry`` elements on the page."
msgstr ""

#: ../javascript/exercises/3.rst:73
msgid ""
"If there are any, we modify the DOM structure slightly to work seemlessly"
" with lightGallery>"
msgstr ""

#: ../javascript/exercises/3.rst:91
msgid "We call the lightGallery initialization with our configuration"
msgstr ""

#: ../javascript/exercises/3.rst:103
msgid "Including JavaScript/CSS Into Your Theme"
msgstr ""

#: ../javascript/exercises/3.rst:105
msgid ""
"For JavaScript and CSS, you can include resources with convenience theme "
"configuration settings of ``development-css``, ``production-css``, "
"``development-js`` and ``production-js``."
msgstr ""

#: ../javascript/exercises/3.rst:109
msgid ""
"Since we are reusing the existing Barceloneta theme with this example "
"though, we will simple include the JavaScript/CSS into the theme "
"``index.html`` file."
msgstr ""

#: ../javascript/exercises/3.rst:114
msgid "CSS"
msgstr "CSS"

#: ../javascript/exercises/3.rst:116
msgid "At the bottom of the head section in the ``index.html`` file, add"
msgstr ""

#: ../javascript/exercises/3.rst:125
msgid "JavaScript"
msgstr ""

#: ../javascript/exercises/3.rst:127
msgid ""
"At the bottom of the ``index.html`` file, before the ``</body>`` closing "
"tag, add"
msgstr ""

#: ../javascript/exercises/3.rst:138
msgid "Install the ``Exercise 3`` add-on"
msgstr ""

#: ../javascript/exercises/3.rst:142
msgid "Trying It Out"
msgstr ""

#: ../javascript/exercises/3.rst:144
msgid "Create a folder and add some images to it in your Plone site."
msgstr ""

#: ../javascript/exercises/3.rst:146
msgid "Specify ``Album view`` for your folder."
msgstr ""

#: ../javascript/exercises/3.rst:148
msgid "Now when you click on an image, it should show the gallery viewer."
msgstr ""

#: ../javascript/exercises/3.rst:154
msgid "In this example, there is no difference with development vs production."
msgstr ""

#: ../javascript/exercises/3.rst:156
msgid ""
"You can combine this example with other examples of building JavaScript "
"projects to build, compile and minify your resources."
msgstr ""

#: ../javascript/exercises/4.rst:3
msgid "Exercise 4: Gallery integration as resources"
msgstr ""

#: ../javascript/exercises/4.rst:11
msgid ""
"In this exercise, we'll include our custom JavaScript file into your "
"Plone site as a bundled resource, instead of manually including it into "
"your theme template (as in exercise 3)."
msgstr ""

#: ../javascript/exercises/4.rst:15
msgid ""
"We will be working in the ``exercise4`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/4.rst:18
msgid "Add your JavaScript files"
msgstr ""

#: ../javascript/exercises/4.rst:20
msgid ""
"In this example, we're going to create a rather contrive example to "
"demonstrate the bundling process. Add a ``static`` folder, inside it, "
"create a file named ``resource.js``"
msgstr ""

#: ../javascript/exercises/4.rst:36
msgid "Additionally, create a file named bundle.js"
msgstr ""

#: ../javascript/exercises/4.rst:47
msgid "Register static resource directory"
msgstr ""

#: ../javascript/exercises/4.rst:49
msgid ""
"Next, let’s register the static directory we just placed our script into."
" To register, you need to add ZCML registration for the static directory "
"your script is in. Add this to the ``exercise5/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/4.rst:63
msgid "Registry your JS as a resource"
msgstr ""

#: ../javascript/exercises/4.rst:65
msgid ""
"In order to include our files, we need to registry them as static "
"resources. In the ``registry.xml`` file, under ``profiles/default`` add"
msgstr ""

#: ../javascript/exercises/4.rst:77
msgid "Bundle resource"
msgstr ""

#: ../javascript/exercises/4.rst:79
msgid ""
"The bundle resource is just another resource registration like any other."
" Remember, the only difference here is in the content of the JavaScript "
"file. One file uses ``require``, the other uses ``define``. "
"Addditionally, we include our CSS/LESS dependencies here"
msgstr ""

#: ../javascript/exercises/4.rst:91 ../javascript/exercises/5.rst:163
#: ../javascript/exercises/7.rst:116
msgid "Bundle"
msgstr ""

#: ../javascript/exercises/4.rst:93 ../javascript/exercises/5.rst:165
#: ../javascript/exercises/7.rst:118
msgid "Finally, let's create our bundle registration"
msgstr ""

#: ../javascript/exercises/4.rst:119
msgid "Install the ``Exercise 4`` add-on"
msgstr ""

#: ../javascript/exercises/4.rst:128
msgid "Go into ``Site Setup`` -> ``Resource Registries``"
msgstr ""

#: ../javascript/exercises/4.rst:129
msgid "Check \"Development Mode\""
msgstr ""

#: ../javascript/exercises/4.rst:130
msgid "Select to develop JavaScript and CSS for the ``exercise4`` bundle"
msgstr ""

#: ../javascript/exercises/4.rst:131
msgid "Click save"
msgstr ""

#: ../javascript/exercises/4.rst:133
msgid ""
"This should load your JavaScript and LESS files now; reload the page, and"
" you should be greated by our \"exciting\" new alert box."
msgstr ""

#: ../javascript/exercises/4.rst:151 ../javascript/exercises/5.rst:232
#: ../javascript/exercises/7.rst:186 ../javascript/exercises/8.rst:186
msgid "An example command will look like this"
msgstr ""

#: ../javascript/exercises/5.rst:3
msgid "Exercise 5: Simple Pattern"
msgstr ""

#: ../javascript/exercises/5.rst:11
msgid ""
"In this exercise, we'll be walking through creating a simple Plone "
"pattern."
msgstr ""

#: ../javascript/exercises/5.rst:13
msgid ""
"We will be working in the ``exercise5`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/5.rst:18
msgid ""
"First off, in your ``exercise5/static`` directory, add a file named "
"``pattern.js``. Use this file to build your pattern."
msgstr ""

#: ../javascript/exercises/5.rst:21
msgid ""
"This example will stay very simple we’ll use `jQuery "
"<https://jquery.com/>`_ to do a simply modify the content of an element"
msgstr ""

#: ../javascript/exercises/5.rst:47
msgid ""
"For more details on how to write a mockup pattern, utilize the various "
"resources available."
msgstr ""

#: ../javascript/exercises/5.rst:50
msgid "`Minimal pattern <https://github.com/collective/mockup-minimalpattern>`_"
msgstr ""

#: ../javascript/exercises/5.rst:51
msgid "`Mockup docs <http://plone.github.io/mockup/dev/>`_"
msgstr ""

#: ../javascript/exercises/5.rst:52
msgid "`Patternslib <http://patternslib.com/>`_"
msgstr ""

#: ../javascript/exercises/5.rst:55
msgid ""
"In our example, we're using the RequireJS ``define`` function to define "
"our pattern as a JavaScript module."
msgstr ""

#: ../javascript/exercises/5.rst:60
msgid "Integrating With LESS"
msgstr ""

#: ../javascript/exercises/5.rst:62
msgid ""
"Add a ``pattern.less`` file to the ``exercise5/static`` directory and "
"provide whatever styles you'd like for your pattern"
msgstr ""

#: ../javascript/exercises/5.rst:73
msgid "Creating Your Bundle"
msgstr ""

#: ../javascript/exercises/5.rst:75
msgid ""
"To register the pattern, we'll create a bundle. Recall the difference "
"between using ``require`` and ``define`` from the RequireJS docs."
msgstr ""

#: ../javascript/exercises/5.rst:78
msgid ""
"Our bundle will use the ``require`` function to include the JavaScript "
"module pattern we created our previously."
msgstr ""

#: ../javascript/exercises/5.rst:81
msgid "Create a ``bundle.js`` file in your ``exercise5/static`` directory"
msgstr ""

#: ../javascript/exercises/5.rst:91
msgid ""
"The only thing we're doing in this file is including the ``exercise5`` "
"module we defined earlier--that's it."
msgstr ""

#: ../javascript/exercises/5.rst:94
msgid ""
"Bundles can do more as well. Then can include initialization code for "
"example."
msgstr ""

#: ../javascript/exercises/5.rst:97
msgid ""
"See Plone's `default bundle "
"<https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/static/plone.js>`_."
msgstr ""

#: ../javascript/exercises/5.rst:99
msgid ""
"Bundles more or less tell the compiler what we care about loading. They "
"do the dependency resolution and include the modules that were required "
"with them."
msgstr ""

#: ../javascript/exercises/5.rst:110
msgid "Add this to the ``exercise5/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/5.rst:123
msgid ""
"Registering your bundle is done by adding Generic Setup xml configuration"
" to the Plone registry. This is done in the ``registry.xml`` file in the "
"``profiles/default`` directory."
msgstr ""

#: ../javascript/exercises/5.rst:129
msgid "Resource"
msgstr ""

#: ../javascript/exercises/5.rst:131 ../javascript/exercises/7.rst:88
msgid "Resource is done exactly the same as in Exercise 1"
msgstr ""

#: ../javascript/exercises/5.rst:142 ../javascript/exercises/7.rst:99
msgid "Bundle Resource"
msgstr ""

#: ../javascript/exercises/5.rst:144
msgid ""
"The bundle resource is another resource registration like any other. "
"Remember, the difference here is in the content of the JavaScript file."
msgstr ""

#: ../javascript/exercises/5.rst:147
msgid "One file uses ``require``, the other uses ``define``."
msgstr ""

#: ../javascript/exercises/5.rst:149
msgid "Addditionally, we include our CSS/LESS dependencies here"
msgstr ""

#: ../javascript/exercises/5.rst:193
msgid "Install the ``Exercise 5`` add-on"
msgstr ""

#: ../javascript/exercises/5.rst:202
msgid "Go into ::menuselection:`Site Setup --> Resource Registries`"
msgstr ""

#: ../javascript/exercises/5.rst:204
msgid "Select to develop JavaScript and CSS for the ``exercise5`` bundle"
msgstr ""

#: ../javascript/exercises/5.rst:205 ../javascript/exercises/7.rst:157
#: ../javascript/exercises/8.rst:166 ../javascript/javascript-3-ttw.rst:59
#: ../javascript/javascript-3-ttw.rst:63 ../javascript/javascript-3-ttw.rst:81
#: ../javascript/javascript-3-ttw.rst:99
msgid "Click :guilabel:`Save`"
msgstr ""

#: ../javascript/exercises/5.rst:207
msgid ""
"This should load your JavaScript and LESS files now; however, we don't "
"have any elements with the ``pat-exercise5`` class assigned to them."
msgstr ""

#: ../javascript/exercises/5.rst:213
msgid ""
"use TinyMCE source view and add ``class=\"pat-exercise5\"`` onto any "
"``p`` tag"
msgstr ""

#: ../javascript/exercises/6.rst:3
msgid "Exercise 6: Using A Pattern In A Z3C Form Widget"
msgstr ""

#: ../javascript/exercises/6.rst:11
msgid ""
"This exercise will go through adding a widget that checks the minimum "
"size of an image before it is uploaded."
msgstr ""

#: ../javascript/exercises/6.rst:14
msgid ""
"We will be working in the ``exercise6`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/6.rst:19
msgid ""
"First off, in your ``exercise6/static`` directory, add a file named "
"``script.js``."
msgstr ""

#: ../javascript/exercises/6.rst:21
msgid "Use this file to do anything you would like to the page"
msgstr ""

#: ../javascript/exercises/6.rst:71
msgid ""
"This pattern simply has ``minWidth`` and ``minHeight`` options and when a"
" file is selected for upload, will check to make sure it is a valid size."
msgstr ""

#: ../javascript/exercises/6.rst:82
msgid "Add this to the ``exercise6/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/6.rst:98
msgid ""
"In the ``exercise6/profiles/default/registry.xml`` file, add "
"configuration to register your script"
msgstr ""

#: ../javascript/exercises/6.rst:110
msgid "Create A Custom Widget"
msgstr ""

#: ../javascript/exercises/6.rst:112
msgid "Our custom widget will apply to all lead images."
msgstr ""

#: ../javascript/exercises/6.rst:114
msgid ""
"Add a file ``widget.py`` to your ``exercise6`` directory with the follow "
"contents"
msgstr ""

#: ../javascript/exercises/6.rst:159
msgid ""
"Notice in the ``render`` method we utilize the "
"``add_resource_on_request`` function to load our pattern."
msgstr ""

#: ../javascript/exercises/6.rst:163
msgid ""
"The code for ``image_widget.pt`` is already provided for this example "
"since it is quite long."
msgstr ""

#: ../javascript/exercises/6.rst:166
msgid ""
"Review the file and notice where we are passing the value from the "
"``pattern_options`` method into our widget."
msgstr ""

#: ../javascript/exercises/6.rst:170
msgid "Register Widget Customization"
msgstr ""

#: ../javascript/exercises/6.rst:172
msgid "Next, we need to register our custom widget so it is used."
msgstr ""

#: ../javascript/exercises/6.rst:174
msgid "In your ``configure.zcml`` file, add the following"
msgstr ""

#: ../javascript/exercises/6.rst:190
msgid "Install the ``Exercise 6`` add-on"
msgstr ""

#: ../javascript/exercises/6.rst:193
msgid "Now, try to add/edit a lead image to content on the site."
msgstr ""

#: ../javascript/exercises/6.rst:197
msgid ""
"To make sure your resource registry configuration changes apply, you'll "
"need to be in development mode. You can also toggle development mode on "
"and off, click save, to force configuration to be re-built after changes "
"instead of keeping development mode on."
msgstr ""

#: ../javascript/exercises/7.rst:3
msgid "Exercise 7: Pattern Wrapping A 3rd Party Library"
msgstr ""

#: ../javascript/exercises/7.rst:11
msgid ""
"In this exercise, we'll be walking through wrapping the tablesorter "
"JavaScript library into a pattern"
msgstr ""

#: ../javascript/exercises/7.rst:14
msgid ""
"We will be working in the ``exercise7`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/7.rst:20
msgid ""
"First off, in your ``exercise7/static`` directory, add a file named "
"``pattern.js``."
msgstr ""

#: ../javascript/exercises/7.rst:22
msgid ""
"Use this file to build your pattern. This example will simply load and "
"initialize the table sorter js"
msgstr ""

#: ../javascript/exercises/7.rst:52
msgid ""
"Notice in this example how we're not using ``define`` for this pattern. "
"In this example, we are defining our pattern right inside what will be "
"our bundle."
msgstr ""

#: ../javascript/exercises/7.rst:55
msgid "``tablesorter`` will be our registered 3rd party library include."
msgstr ""

#: ../javascript/exercises/7.rst:61
msgid ""
"Register the static directory we just placed our script into. To "
"register, you need to add ZCML registration for the static directory your"
" script is in."
msgstr ""

#: ../javascript/exercises/7.rst:65
msgid "Add this to the ``exercise7/configure.zcml`` file"
msgstr ""

#: ../javascript/exercises/7.rst:78
msgid ""
"Registering your bundle is done by adding Generic Setup xml configuration"
" to the Plone registry."
msgstr ""

#: ../javascript/exercises/7.rst:81
msgid ""
"This is done in the ``registry.xml`` file in the ``profiles/default`` "
"directory."
msgstr ""

#: ../javascript/exercises/7.rst:86
msgid "Tablesorter"
msgstr ""

#: ../javascript/exercises/7.rst:101
msgid ""
"Our pattern is a bundle-able resource since it uses the ``require`` "
"function instead of the ``define`` function"
msgstr ""

#: ../javascript/exercises/7.rst:145
msgid "Install the ``Exercise 7`` add-on"
msgstr ""

#: ../javascript/exercises/7.rst:156
msgid "Select to develop JavaScript and CSS for the ``exercise7`` bundle"
msgstr ""

#: ../javascript/exercises/7.rst:159
msgid ""
"This should load your JavaScript and LESS files now; however, we don't "
"have any elements with the ``pat-exercise7`` class assigned to them."
msgstr ""

#: ../javascript/exercises/7.rst:165
msgid ""
"use TinyMCE source view and add ``class=\"pat-tablesorter\"`` onto any "
"``table`` tag. You need to use ``th`` tags for the top row in your header"
" for tablesorter to know to do anything."
msgstr ""

#: ../javascript/exercises/8.rst:3
msgid "Exercise 8: Customizing Pattern"
msgstr ""

#: ../javascript/exercises/8.rst:11
msgid ""
"In this exercise, we'll be walking through customizing the livesearch "
"pattern."
msgstr ""

#: ../javascript/exercises/8.rst:13
msgid ""
"We will be working in the ``exercise8`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/8.rst:18
msgid ""
"In your ``exercise8/static`` directory, add a file named ``pattern.js``. "
"Use this file to build your pattern."
msgstr ""

#: ../javascript/exercises/8.rst:21
msgid ""
"This example will define a new pattern to overwrite the existing "
"livesearch pattern:"
msgstr ""

#: ../javascript/exercises/8.rst:59
msgid "Pay close attention to what we're doing here:"
msgstr ""

#: ../javascript/exercises/8.rst:70
msgid "We're deleting the existing registration of the livesearch pattern."
msgstr ""

#: ../javascript/exercises/8.rst:72
msgid "Next, we're extending the existing pattern:"
msgstr ""

#: ../javascript/exercises/8.rst:83
msgid ""
"And overriding the ``init`` function to provide our customization(default"
" search current section):"
msgstr ""

#: ../javascript/exercises/8.rst:97
msgid ""
"Next, let’s register the static directory we just placed our script into."
" To register, you need to add ZCML registration for the static directory "
"your script is in."
msgstr ""

#: ../javascript/exercises/8.rst:101
msgid "Add this to the ``exercise8/configure.zcml`` file::"
msgstr ""

#: ../javascript/exercises/8.rst:113
msgid "Again, registration is done exactly the same as previous exercises:"
msgstr ""

#: ../javascript/exercises/8.rst:151
msgid "We have all the files necessary to run the pattern now."
msgstr ""

#: ../javascript/exercises/8.rst:154
msgid "Install the ``Exercise 8`` add-on"
msgstr ""

#: ../javascript/exercises/8.rst:160
msgid ""
"At this point, we have no compiled version of the code that we're running"
" with because of that our code doesn't do anything."
msgstr ""

#: ../javascript/exercises/8.rst:165
msgid "Select to develop JavaScript and CSS for the ``exercise8`` bundle"
msgstr ""

#: ../javascript/exercises/8.rst:168
msgid ""
"Now, you should see the livesearch pattern default to searching the "
"current section."
msgstr ""

#: ../javascript/exercises/9.rst:3
msgid "Exercise 9: Overriding a pattern TTW"
msgstr ""

#: ../javascript/exercises/9.rst:11
msgid "In this exercise, we'll be overriding a pattern through the web."
msgstr ""

#: ../javascript/exercises/9.rst:13
msgid ""
"We will be working in the ``exercise9`` directory of the "
"collective.jstraining package."
msgstr ""

#: ../javascript/exercises/9.rst:17
msgid ""
"Overriding resources through the web is limited to resources using the "
"++plone++ namespace. For more information read https://docs.plone.org"
"/adapt-and-extend/theming/resourceregistry.html#the-plone-traversal-"
"namespace"
msgstr ""

#: ../javascript/exercises/9.rst:24
msgid "In this exercise, we will first run the installation"
msgstr ""

#: ../javascript/exercises/9.rst:27
msgid "Install the ``Exercise 9`` add-on"
msgstr ""

#: ../javascript/exercises/9.rst:31
msgid "Try current pattern"
msgstr ""

#: ../javascript/exercises/9.rst:33
msgid ""
"Add a new page, and using the source code editor add a ``<p>`` element "
"with the ``exercise9`` pattern"
msgstr ""

#: ../javascript/exercises/9.rst:39
msgid "After saving, you should see ``test Exercise 9 was here``"
msgstr ""

#: ../javascript/exercises/9.rst:43
msgid "Choose the pattern to override"
msgstr ""

#: ../javascript/exercises/9.rst:47
msgid "Under the ``Overrides`` tab, pick ++plone++exercise9/pattern.js"
msgstr ""

#: ../javascript/exercises/9.rst:49
msgid "Now modify the line"
msgstr ""

#: ../javascript/exercises/9.rst:55
msgid "To be"
msgstr ""

#: ../javascript/exercises/9.rst:63
msgid "Recompile bundle"
msgstr ""

#: ../javascript/exercises/9.rst:65
msgid "Go back to the ``Registry`` tab, and find the ``exercise9`` bundle."
msgstr ""

#: ../javascript/exercises/9.rst:67
msgid "Click the ``Build`` button. Finally, click ``Build it``"
msgstr ""

#: ../javascript/exercises/9.rst:71
msgid "Testing"
msgstr ""

#: ../javascript/exercises/9.rst:73
msgid ""
"Now, if you go back to the page you added before, you should now see "
"``test Exercise 9 has been overridden``"
msgstr ""

#: ../javascript/exercises/index.rst:5
msgid "Exercises"
msgstr "Ejercicios"

#: ../javascript/exercises/index.rst:7
msgid "**Prerequisites**"
msgstr ""

#: ../javascript/exercises/index.rst:9
msgid ""
"Follow the instructions here to get a training buildout installed: "
"https://training.plone.org/5/plone_training_config/instructions.html"
msgstr ""

#: ../javascript/exercises/index.rst:12
msgid ""
"Fork https://github.com/collective/collective.jstraining and install your"
" fork into your buildout from the previous step"
msgstr ""

#: ../javascript/exercises/index.rst:15
msgid "npm/nodejs install on your system"
msgstr ""

#: ../javascript/exercises/index.rst:17
msgid "webpack installed on your system"
msgstr ""

#: ../javascript/exercises/index.rst:19
msgid "grunt-cli installed on your system(``npm install -g grunt-cli``)"
msgstr ""

#: ../javascript/exercises/index.rst:23
msgid ""
"On macOS versions of npm/nodejs newer than 6.9.1 can make the bundling "
"process fail. Installing and using version 6.9.1 fixes the problem. "
"Different versions of nodejs can be managed with nvm (Node Version "
"Manager)."
msgstr ""

#: ../javascript/exercises/index.rst:27
msgid "**Install forked collective.jstraining**"
msgstr ""

#: ../javascript/exercises/index.rst:29
msgid "Add this line to the end of your ``buildout.cfg`` file:"
msgstr ""

#: ../javascript/exercises/index.rst:35
msgid "``<location of your fork>`` should be replaced with where your fork is."
msgstr ""

#: ../javascript/exercises/index.rst:37
msgid "Also, add ``collective.jstraining`` to the auto-checkout list:"
msgstr ""

#: ../javascript/exercises/index.rst:46
msgid "And one more spot to add collective.jstraining to: eggs:"
msgstr ""

#: ../javascript/index.rst:5 ../javascript/index.rst:7
msgid "JavaScript For Plone Developers"
msgstr "JavaScript para desarrolladores Plone"

#: ../javascript/index.rst
msgid "Level"
msgstr "Nivel"

#: ../javascript/index.rst:8
msgid "Experienced"
msgstr "Experimentado"

#: ../javascript/index.rst
msgid "Status"
msgstr "Estatus"

#: ../javascript/index.rst:9
msgid "Work in progress"
msgstr ""

#: ../javascript/index.rst:11
msgid ""
"The definitive location for documentation regarding Plone's JavaScript "
"and Resource Registries is located at: https://docs.plone.org/adapt-and-"
"extend/theming/resourceregistry.html"
msgstr ""

#: ../javascript/index.rst:16
msgid "**Training Objective**"
msgstr ""

#: ../javascript/index.rst:18
msgid ""
"The most important objective of this training is to explain how to "
"integrate JavaScript applications and integrations into Plone in "
"different scenarios."
msgstr ""

#: ../javascript/index.rst:22
msgid ""
"Secondly, it is to explain the JavaScript technologies used in Plone "
"itself (`RequireJS <http://requirejs.org/>`_, `Patterns "
"<https://github.com/plone/plone.patternslib>`_, `Resource registry "
"<https://docs.plone.org/adapt-and-"
"extend/theming/resourceregistry.html>`_)."
msgstr ""

#: ../javascript/index.rst:26
msgid "This training is **not** about:"
msgstr ""

#: ../javascript/index.rst:28
msgid "How to write JavaScript"
msgstr ""

#: ../javascript/index.rst:29
msgid "How to write React/Angular 2/JS framework of the week"
msgstr ""

#: ../javascript/index.rst:32
msgid "**Sections**"
msgstr "**Secciones**"

#: ../javascript/javascript-3-ttw.rst:3
msgid "Through-The-Web Development"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:5
msgid ""
"It is possible to include JavaScript functionality without the need to "
"know about any of the tools involved."
msgstr ""

#: ../javascript/javascript-3-ttw.rst:9
msgid ""
"This is not reccommended for when you need to do a complex and modular "
"implementation."
msgstr ""

#: ../javascript/javascript-3-ttw.rst:13
msgid "portal_javascript & portal_css"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:15
msgid ""
"These two portal tools are no longer used in Plone 5. They are still "
"present, but nothing should be included in them."
msgstr ""

#: ../javascript/javascript-3-ttw.rst:20
msgid "Resource Registries"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:22
msgid ""
"This is the new tool included in Plone 5. From here we will manage "
"everything related to JavaScript and CSS resources."
msgstr ""

#: ../javascript/javascript-3-ttw.rst:25
msgid ""
"It can be found right at the bottom of Plone's Control Panel, in the "
":guilabel:`Advanced` section."
msgstr ""

#: ../javascript/javascript-3-ttw.rst:32
msgid "Add Files"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:34
msgid ""
"We are going to include 2 new resources, a JavaScript file, and a LESS "
"file."
msgstr ""

#: ../javascript/javascript-3-ttw.rst:36
msgid "The JavaScript will look like this:"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:45
msgid "The LESS will look like this:"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:55
msgid "Go to the :guilabel:`Overrides` tab"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:56
msgid "Click the :guilabel:`Add file` button"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:57
msgid "Name the new file :file:`++plone++static/custom-links.js`"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:58
msgid "Paste the contents of the JavaScript section into the textarea"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:60
msgid "Click the :guilabel:`Add file` button again"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:61
msgid "Name the new file :file:`++plone++static/custom-links.less`"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:62
msgid "Paste the contents of the CSS section into the textarea"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:67
msgid "Create The Resource"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:69 ../javascript/javascript-3-ttw.rst:87
msgid "Go to the :guilabel:`Registry` tab"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:70
msgid "Click the :guilabel:`Add resource` button"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:71
msgid "Name it ``training-custom-links``"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:72
msgid "Under ``JS`` enter ``++plone++static/custom-links.js``"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:73
msgid "For the :guilabel:`CSS/LESS` section, click :guilabel:`Add`"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:74
msgid "Enter :file:`++plone++static/custom-links.less`"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:76 ../javascript/javascript-3-ttw.rst:94
msgid "It should look something like this:"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:85
msgid "Create The Bundle And Wire Everything Up"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:88
msgid "Click the :guilabel:`Add bundle` button"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:89
msgid "Name it ``training-custom-bundle``"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:90
msgid "Under :guilabel:`Resources` enter ``training-custom-links``"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:91
msgid "For the :guilabel:`Depends` section, we'll use ``plone``"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:92
msgid "Make sure :guilabel:`Enabled` is checked"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:103
msgid "Build The Bundle"
msgstr ""

#: ../javascript/javascript-3-ttw.rst:105
msgid ""
"To include changes, you need to build your bundle. For doing this, you "
"need to click the :guilabel:`Build` under the bundle you want to build."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:3
msgid "Scratchpad"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:5
msgid ""
"Scratchpat for text snippets to be included somewhere else in the "
"training."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:9
msgid "General Advises"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:13
msgid ""
"When providing static resources (JS/Less/CSS) for Plone 5's resource "
"registry, use `plone.resource <https://pypi.org/project/plone.resource>`_"
" based resources instead of Zope's browser resources. The latter are "
"cached heavily and you won't get your changes built with Zope resources."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:19
msgid ""
"A bundle can depend on another. This is mainly used for the order of "
"inclusion in the rendered content. Currently, it doesn't hook in the "
"require JavaScript dependency mechanism."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:23
msgid ""
"This means, each bundle gets all their dependencies compiled in, which "
"raise the response payload unnecessarily. To avoid this, add your "
"resources to existing bundles, like the ``plone`` bundle."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:28
msgid ""
"The mockup grunt infrastructure is build with a convention over "
"configuration approach in mind."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:30
msgid ""
"It's actually very picky about a lot of things: locations of your bundle "
"files, location of your bundle Less files, location of your pattern "
"JavaScript and Less files and the require JavaScript ids of those."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:33
msgid ""
"Bundles have to be named ``mockup-bundles-BUNDLENAME``, patterns have to "
"be named ``mockup-patterns-PATTERNNAME``."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:37
msgid ""
"There is currently no API to build JavaScript and Less resources "
"programmatically after importing them. Both build steps need the Client "
"side RequireJS respectively Less compilers."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:40
msgid ""
"The resources are downloaded to your browser, compiled there and re-"
"upload to the Plone server, where they are stored in ZODB as "
"`plone.resource <https://pypi.org/project/plone.resource>`_` resources."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:42
msgid ""
"We can pre-build everything using standard JavaScript and Less "
"development frameworks, e.g. via ``mockup``'s Grunt infrastructure."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:46
msgid "Structure"
msgstr "Estructura"

#: ../javascript/javascript-scratchpad.rst:56
msgid "About this training"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:56
msgid "Training Agenda"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:53
msgid "DAY1"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:52
msgid ""
"Framework Tools Create Mockup Pattern Integrate Other (Non-Mockup based) "
"JavaScript"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:56
msgid "DAY2"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:56
msgid "Practicing"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:60
msgid "Preparing for the training"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:60
msgid "About JavaScript, Mockup, Patternslib and Plone 5"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:60
msgid "History of everything, What's what."
msgstr ""

#: ../javascript/javascript-scratchpad.rst:62
msgid "Installation Mockup"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:70
msgid "Development environment"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:66
msgid "JavaScript and editor support Code Linter Grunt Bower Testing"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:76
msgid "Whirlwind tour through Mockup, Patternslib and JavaScript in Plone 5"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:73
msgid ""
"Short explanation of the code tree / main modules: Mockup Patternslib "
"Plone 5"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:87
msgid "Developing a Pattern"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:82
msgid "A Barebone Pattern"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:80
msgid "Based on collective.minimalpattern"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:82
msgid "Pattern explained"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:84
msgid "Adding a bower.json dependency"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:86
msgid "Testing the Pattern"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:93
msgid "Integrating the Pattern"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:90
msgid ""
"Integration in Plone 5 Integration in Plone 4 Integration in Mockup w/out"
" Plone"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:95
msgid "No-Pattern JavaScript in Plone"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:97
msgid "The require JS (JavaScript) way"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:99
msgid "The old, require JS-less way"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:102
msgid "Using other Frameworks in Plone"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:104
msgid "Angular JS React JS"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:108
msgid "Comparison to other frameworks"
msgstr ""

#: ../javascript/javascript-scratchpad.rst:110
msgid ""
"Patternslib and Web Components Patternslib and React Components "
"Patternslib and Angular JS directives Plone and ES 6"
msgstr ""

#: ../javascript/mockup.rst:3
msgid "Mockup"
msgstr ""

#: ../javascript/mockup.rst:5
msgid "A Patternslib based collection of components."
msgstr ""

#: ../javascript/mockup.rst:7
msgid ""
"Plone 5 ships with a revamped UI (User Interface). An important part of "
"the new UI is a collection of new input widgets, that we are used to work"
" with in the so called Web 2.0 era."
msgstr ""

#: ../javascript/mockup.rst:10
msgid "For Plone, it was high time to update and modernize its input widgets."
msgstr ""

#: ../javascript/mockup.rst:12
msgid ""
"Not because the new ones look much better, but because they offer a much "
"more comfortable way of entering data."
msgstr ""

#: ../javascript/mockup.rst:14
msgid ""
"To update Plone's widgets was the goal of `plone.app.widgets "
"<https://pypi.org/project/plone.app.widgets>`_, started by Nathan van "
"Gheem and pushed wide forward by Rok Garbas. Rok forked Patternslib and "
"created the Mockup project."
msgstr ""

#: ../javascript/mockup.rst:17
msgid ""
"Patternslib used a complex configuration syntax parser instead of a "
"simple JSON based approach and the test coverage was not high enough. "
"Besides it was fun to create something new, so Mockup was born."
msgstr ""

#: ../javascript/mockup.rst:20
msgid ""
"There were concerns about having two projects with the same goal, JC "
"Brand took the initiative and brought the two projects back together."
msgstr ""

#: ../javascript/mockup.rst:23
msgid ""
"Where Mockup had a dependency on `mockup-core <https://github.com/plone"
"/mockup-core>`_ with a base pattern to extend from, a configuration "
"parser, pattern registry and Grunt infrastructure, this dependency was "
"removed and replaced by a dependency on `patternslib "
"<http://patternslib.com>`_."
msgstr ""

#: ../javascript/mockup.rst:26
msgid ""
"Those projects led the foundation to the new way of developing JavaScript"
" in Plone."
msgstr ""

#: ../javascript/mockup.rst:30
msgid "Mockup Project Structure"
msgstr ""

#: ../javascript/mockup.rst:32
msgid "This is how Mockup is structured on the filesystem::"
msgstr ""

#: ../javascript/mockup.rst:112
msgid "A Minimal Pattern"
msgstr ""

#: ../javascript/mockup.rst:114
msgid ""
"The following is a minimal pattern example, except that it uses `jQuery "
"<https://jquery.com/>`_ and changes some HTML elements' text."
msgstr ""

#: ../javascript/mockup.rst:139
msgid ""
"For a complete example including tests, bundle config und Plone "
"integration see: https://github.com/collective/mockup-minimalpattern"
msgstr ""

#: ../javascript/mockup-writing-documentation.rst:5
msgid "Writing Documentation For Mockup"
msgstr ""

#: ../javascript/mockup-writing-documentation.rst:7
msgid ""
"The documentation for Mockup is automatically generated from comments in "
"pattern code."
msgstr ""

#: ../javascript/mockup-writing-documentation.rst:9
msgid "The structure is as follows::"
msgstr ""

#: ../javascript/requirejs-modules.rst:3
msgid "RequireJS And JavaScript Modules"
msgstr ""

#: ../javascript/requirejs-modules.rst:5
msgid ""
"One of the great new features, Plone 5 gives us, is the ability to define"
" and use JavaScript modules."
msgstr ""

#: ../javascript/requirejs-modules.rst:7
msgid ""
"Most serious programming languages provide the concept of namespaces and "
"module dependencies, like Python's :py:mod:`import <importlib>` "
"mechanism. Python code would be unmanageable, if we'd rely on the "
"existence of global variables and objects in our own scripts."
msgstr ""

#: ../javascript/requirejs-modules.rst:10
msgid ""
"But JavaScript doesn't have any concept for declaring dependencies. Only "
"the new and finalized ECMAScript 6 (ES6) standard finally comes with a "
"module definition system (actually directly inspired by RequireJS and "
"CommonJS), along other great features like proper variable scoping."
msgstr ""

#: ../javascript/requirejs-modules.rst:13
msgid ""
"In Plone, we use `RequireJS <http://requirejs.org>`_ as a framework to "
"define and load modules."
msgstr ""

#: ../javascript/requirejs-modules.rst:15
msgid ""
"RequireJS is an implementation of the `Asynchronous Module Definition API"
" <https://github.com/amdjs/amdjs-api/blob/master/AMD.md>`_. The module "
"definition and loading standard of CommonJS is used by NodeJS. RequireJS "
"adds the ability to load modules asynchronously, which can be better for "
"performance. The CommonJS module loading syntax can also be used in "
"RequireJS."
msgstr ""

#: ../javascript/requirejs-modules.rst:20
msgid ""
"But the main point why Plone uses RequireJS is, that there is a "
"JavaScript based compiler, which allows us to build bundles (a combined, "
"optimized and minified form with all dependencies) Through-The-Web. "
"RequireJS and CommonJS are also forward compatible with ES6's module "
"definition standard."
msgstr ""

#: ../javascript/requirejs-modules.rst:23
msgid ""
"Finally we can use JavaScript in Plone like it is a proper programming "
"language! No need to depend on the existence of global variables and a "
"strict order, in which scripts have to be loaded. You can still use "
"legacy-style JavaScript, but Plone encourages you to enter the modern "
"world of JavaScript development."
msgstr ""

#: ../javascript/requirejs-modules.rst:29
msgid "Defining A module"
msgstr ""

#: ../javascript/requirejs-modules.rst:31
msgid ""
"In the past years, a common pattern of defining anonymous function calls "
"has evolved. This allows to better scope variables and not clutter the "
"global namespace. The pattern is discussed in depth at `JavaScript Module"
" Pattern: In-Depth <http://www.adequatelygood.com/JavaScript-Module-"
"Pattern-In-Depth.html>`_ and basically comes down to the following "
"Pattern:"
msgstr ""

#: ../javascript/requirejs-modules.rst:42
msgid ""
"If your code should be reused like a library, you can define a module "
"export."
msgstr ""

#: ../javascript/requirejs-modules.rst:55
msgid ""
"RequireJS extends this pattern and removes the necessity for globals to "
"refer to other modules."
msgstr ""

#: ../javascript/requirejs-modules.rst:57
msgid "In RequireJS, you're wrapping your code like this:"
msgstr ""

#: ../javascript/requirejs-modules.rst:70
msgid ""
"No need for any globals anymore (except for the ``define`` and "
"``require`` methods)!"
msgstr ""

#: ../javascript/requirejs-modules.rst:72
msgid ""
"Also note, that the code within the RequireJS define wrapper is exactly "
"the same as in the module pattern example above. Using RequireJS doesn't "
"mean, you have to rewrite everything. It's about modularizing code."
msgstr ""

#: ../javascript/requirejs-modules.rst:76
msgid ""
"To be able to use the defined module somewhere else, you need to be able "
"to reference it by a module id. You can pass it as very first argument to"
" the ``define`` function, but you might better do that in the RequireJS "
"configuration."
msgstr ""

#: ../javascript/requirejs-modules.rst:79
msgid ""
"If you don't do it at all, it gets automatically assigned the name of the"
" file."
msgstr ""

#: ../javascript/requirejs-modules.rst:81
msgid ""
"For example, let's assume a project structure like follows and the "
"``define`` example from above living in a file called ``my_module.js``::"
msgstr ""

#: ../javascript/requirejs-modules.rst:90
msgid ""
"Let's do the RequireJS configuration in :file:`main.js` and use that as "
"main entry point also to finally let something happen:"
msgstr ""

#: ../javascript/requirejs-modules.rst:105
msgid ""
"You can use your defined module as a dependency in another ``define`` "
"module definition - if you want to run some non-reusable code - as a "
"dependency in a ``require`` call."
msgstr ""

#: ../javascript/requirejs-modules.rst:108
msgid ""
"While you have to return a module export in ``define``, you don't need "
"that for ``require``. ``require`` corresponds to the first form of the "
"module pattern explained above."
msgstr ""

#: ../javascript/requirejs-modules.rst:111
msgid ""
"When using in the browser (and not in NodeJS, for example), we have to "
"include an entry point as script tag in our HTML markup:"
msgstr ""

#: ../javascript/requirejs-modules.rst:118
msgid ""
"Alternatively, you can define a script as main entry point in RequireJS "
"as data attribute on the script tag, which loads require.js. In that "
"case, you could omit the configuration, because the entry point script is"
" used as ``baseUrl``, if nothing else is defined:"
msgstr ""

#: ../javascript/requirejs-modules.rst:127
msgid "More information"
msgstr ""

#: ../javascript/requirejs-modules.rst:129
msgid ""
"More on RequireJS' API and how to include legacy code, which doesn't use "
"the ``define`` module definition pattern, see the `RequireJS API "
"documentation <http://requirejs.org/docs/api.html#define>`_."
msgstr ""

#: ../javascript/training-installation.rst:3
msgid "Setup"
msgstr ""

#: ../javascript/training-installation.rst:5
msgid ""
"To get Plone and example packages for this training installed, please "
"follow the installation instructions about `how to get setup "
"<https://training.plone.org/5/plone_training_config/instructions.html>`_"
msgstr ""

#: ../javascript/training-installation.rst:7
msgid ""
"After that, issue the following command to get the development "
"environment for the ``mockup-minimalpattern`` example package installed"
msgstr ""

#: ../javascript/training-installation.rst:15
msgid ""
"To be able to install the JavaScript development tools, you need `NodeJS "
"<https://nodejs.org/en/download/>`_ installed on your development "
"computer."
msgstr ""

#: ../javascript/training-installation.rst:19
msgid "Installing Mockup"
msgstr ""

#: ../javascript/training-installation.rst:21
msgid "Optionally you can install Mockup."
msgstr ""

#: ../javascript/training-installation.rst:23
msgid ""
"Mockup is already included in the `training_buildout "
"<https://github.com/collective/training_buildout/blob/plone5/buildout.cfg>`_."
msgstr ""

#: ../javascript/training-installation.rst:25
msgid ""
"Uncomment the \"mockup\" lines in the buildout's ``auto-checkout`` and "
"``eggs`` sections."
msgstr ""

#: ../javascript/training-installation.rst:27
msgid "After that, run buildout:"
msgstr ""

#: ../javascript/training-installation.rst:35
msgid ""
"If you are running buildout inside vagrant, always remember to use "
"specify :file:`vagrant.cfg`: :command:`bin/buildout -Nc vagrant.cfg`"
msgstr ""
