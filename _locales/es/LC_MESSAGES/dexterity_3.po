# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, Philip Bauer, Patrick Gerken. Version 1.2.2
# This file is distributed under the same license as the Mastering Plone
# package.
# Translators:

msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-05 04:39-0400\n"
"PO-Revision-Date: 2017-08-07 08:46-0400\n"
"Last-Translator: Leonardo J. Caballero G. <leonardocaballero@gmail.com>, 2017\n"
"Language-Team: Spanish Team\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Virtaal 0.7.1\n"
"Generated-By: Babel 2.3.4\n"

#: ../dexterity_3.rst:4
msgid "Dexterity Types III: Python"
msgstr "Tipos Dexterity - III: Python"

#: ../dexterity_3.rst
msgid "Get the code!"
msgstr "¡Obtén el código!"

#: ../dexterity_3.rst:8
msgid ""
"Get the code for this chapter (:doc:`More info <sneak>`) using this "
"command in the buildout directory:"
msgstr ""
"Obtén el código para este capítulo (:doc:`Más información <sneak>`) usando "
"este comando en el directorio buildout:"

#: ../dexterity_3.rst:15
msgid ""
"Without sponsors a conference would be hard to finance plus it is a good "
"opportunity for Plone companies to advertise their services."
msgstr ""
"Sin patrocinadores una conferencia sería difícil de financiar además de que "
"es una buena oportunidad para las empresas Plone para hacer publicidad de "
"sus servicios."

#: ../dexterity_3.rst:17
msgid "In this part we will:"
msgstr "En esta parte vamos a tratar:"

#: ../dexterity_3.rst:19
msgid "create the content type *sponsor* that has a python schema"
msgstr ""

#: ../dexterity_3.rst:20
msgid "create a viewlet that shows the sponsor logos sorted by sponsoring level"
msgstr ""

#: ../dexterity_3.rst:23
msgid "The topics we cover are:"
msgstr ""

#: ../dexterity_3.rst:25
msgid "python schema for dexterity"
msgstr ""

#: ../dexterity_3.rst:26
msgid "schema hint and directives"
msgstr ""

#: ../dexterity_3.rst:27
msgid "field permissions"
msgstr ""

#: ../dexterity_3.rst:28
msgid "image scales"
msgstr ""

#: ../dexterity_3.rst:29
msgid "caching"
msgstr ""

#: ../dexterity_3.rst:33
msgid "The python schema"
msgstr ""

#: ../dexterity_3.rst:35
msgid ""
"First we create the schema for the new type. Instead of xml we use python"
" now. Create a new folder ``content`` with an empty ``__init__.py`` in "
"it. We don't need to register that folder in ``configure.zcml`` since we "
"don't need a ``content/configure.zcml`` (at least not yet)."
msgstr ""

#: ../dexterity_3.rst:37
msgid "Now add a new file ``content/sponsor.py``."
msgstr ""
"Primero creamos el esquema para el nuevo tipo de contenido. En lugar del "
"código XML ahora usamos código Python. Cree una nueva carpeta ``content`` "
"con un archivo vacío ``__init__.py`` en esta. Ahora agregue un nuevo archivo"
" ``content/sponsor.py``, con el siguiente código Python:"

#: ../dexterity_3.rst:102
msgid "Some things are notable here:"
msgstr "Algunas cosas son notables aquí:"

#: ../dexterity_3.rst:104
msgid ""
"The fields in the schema are mostly from ``zope.schema``. A reference of "
"available fields is at "
"http://docs.plone.org/external/plone.app.dexterity/docs/reference/fields.html"
msgstr ""

#: ../dexterity_3.rst:105
msgid ""
"In ``directives.widget(level=RadioFieldWidget)`` we change the default "
"widget for a Choice field from a dropdown to radioboxes. An incomplete "
"reference of available widgets is at "
"http://docs.plone.org/external/plone.app.dexterity/docs/reference/widgets.html"
msgstr ""
"Los campos en el esquema son en su mayoría basado en el paquete "
"``zope.schema``. Una referencia de campos está disponible en la siguiente dirección URL: "
"http://docs.plone.org/4/en/external/plone.app.dexterity/docs/reference/fields.html"

#: ../dexterity_3.rst:106
msgid ""
"In ``directives.widget(level=RadioFieldWidget)`` we change the default "
"widget for a Choice-field from a dropdown to radioboxes. A incomplete "
"reference of available widgets is at "
"http://docs.plone.org/4/en/external/plone.app.dexterity/docs/reference/widgets.html"
msgstr ""
"En ``directives.widget(level=RadioFieldWidget)`` cambiamos el widget "
"predeterminado para un campo de elección de un menú desplegable para casilla"
" de selección simple. Una referencia incompleta de widgets está disponible "
"en la siguiente dirección URL: "
"http://docs.plone.org/4/en/external/plone.app.dexterity/docs/reference/widgets.html"

#: ../dexterity_3.rst:90
msgid ""
"``LevelVocabulary`` is used to create the options used in the field "
"``level``. This way we could easily translate the displayed value."
msgstr ""
"``LevelVocabulary`` se utiliza para crear las opciones que se utilizan en el"
" campo ``level``. De esta manera se podría traducir fácilmente el valor "
"mostrado."

#: ../dexterity_3.rst:107
msgid ""
"``fieldset('Images', fields=['logo', 'advertisment'])`` moves the two "
"image fields to another tab."
msgstr ""
"``fieldset('Images', fields=['logo', 'advertisment'])`` mueve las dos campos"
" de imágenes a otra pestaña."

#: ../dexterity_3.rst:108
msgid ""
"``directives.read_permission(...)`` sets the read and write permission "
"for the field ``notes`` to users who can add new members. Usually this "
"permission is only granted to Site Administrators and Managers. We use it"
" to store information that should not be publicly visible. Please note "
"that ``obj.notes`` is still accessible in templates and python. Only "
"using the widget (like we do in the view later) checks for the "
"permission."
msgstr ""
"``directives.read_permission(...)`` establece el permiso de lectura y escritura, "
"para el campo ``note`` a los usuarios que pueden agregar nuevos usuarios de tipo"
"Miembro. Por lo general, este permiso sólo se concede a Administradores de "
"Sitio y Administradores. Lo utilizamos para almacenar información que no "
"debe ser visible públicamente. Tenga en cuenta que ``obj.note`` sigue siendo"
" accesible en plantillas y código Python. Sólo utilizando el widget (como lo "
"hacemos en la vista posterior) comprueba el permiso."

#: ../dexterity_3.rst:109
msgid "We use no grok here"
msgstr "Nosotros no usaremos Grok aquí"

#: ../dexterity_3.rst:113
msgid ""
"`All available Fields "
"<http://docs.plone.org/external/plone.app.dexterity/docs/reference/fields.html"
"#field-types>`_"
msgstr ""

#: ../dexterity_3.rst:114
msgid ""
"`Schema-driven types with Dexterity "
"<http://docs.plone.org/external/plone.app.dexterity/docs/schema-driven-"
"types.html#schema-driven-types>`_"
msgstr ""

#: ../dexterity_3.rst:115
msgid ""
"`Form schema hints and directives "
"<http://docs.plone.org/external/plone.app.dexterity/docs/reference/form-"
"schema-hints.html>`_"
msgstr ""

#: ../dexterity_3.rst:118
msgid "The FTI"
msgstr ""

#: ../dexterity_3.rst:120
msgid ""
"Second we create the FTI for the new type in "
"``profiles/default/types/sponsor.xml``"
msgstr ""
"Segundo nosotros creamos el *Factory Type Information - FTI* para el nuevo tipo de contenido en el "
"archivo ``profiles/default/types/sponsor.xml``, con el siguiente código XML:"

#: ../dexterity_3.rst:171
msgid "Then we register the FTI in ``profiles/default/types.xml``"
msgstr ""
"Entonces nosotros registramos el FTI en el archivo "
"``profiles/default/types.xml``, con el siguiente código XML:"

#: ../dexterity_3.rst:185
msgid "After reinstalling our package we can create the new type."
msgstr ""
"Después volvemos a instalar nuestro paquete y entonces nosotros podemos "
"crear un tipos de contenido ``Sponsor``. Utilizamos la vista predeterminada proporcionada"
" por Dexterity ya que mostremos a los patrocinadores en un viewlet."

#: ../dexterity_3.rst:189
msgid "Exercise 1"
msgstr ""

#: ../dexterity_3.rst:191
msgid ""
"Sponsors are containers but they don't have to be. Turn them into items "
"by changing their class to ``plone.dexterity.content.Item``."
msgstr ""
"En cambio, nosotros nos ajustamos la vista predeterminada con algunas sentencias CSS."
" Agregue lo siguiente al archivo ``resources/ploneconf.css``, con el siguiente código CSS:"

#: ../dexterity_3.rst:193 ../dexterity_3.rst:459
msgid "Solution"
msgstr ""
"Si quisiéramos una vista personalizada para los tipos de contenidos ``Sponsor`` podría "
"tenerlo con esta apariencia."

#: ../dexterity_3.rst:196
msgid "Simply modify the property ``klass`` in the FTI and reinstall."
msgstr ""

#: ../dexterity_3.rst:205
msgid "The view"
msgstr ""

#: ../dexterity_3.rst:207
msgid ""
"We use the default view provided by dexterity for testing since we will "
"only display the sponsors in a viewlet and not in their own page."
msgstr ""
"Tenga en cuenta que tenemos que manejar el campo con permisos especiales: "
"``tal:condition=\"python: 'notes' in view.w\"`` comprueba si la conveniencia"
" diccionario ``w`` proporcionada por la clase base ``DefaultView`` sostiene "
"el widget para el campo ``note``. Si el usuario actual no tiene permiso "
"``cmf.ManagePortal`` será omitido del diccionario y sale un error ya que "
"``notes`` no sería una clave en ``w``. A primera comprobación si falta "
"trabajamos alrededor de eso."

#: ../dexterity_3.rst:209
msgid ""
"But we could tweak the default view with some css to make it less ugly. "
"Add the following to ``resources/ploneconf.css``"
msgstr ""
"Nosotros mostramos los tipos de contenidos ``Sponsor`` en la parte inferior de la página Web "
"en un viewlet."

#: ../dexterity_3.rst:224
msgid "If we really want a custom view for sponsors it could look like this."
msgstr ""

#: ../dexterity_3.rst:267
msgid ""
"Note how we handle the field with special permissions: "
"``tal:condition=\"python: 'notes' in view.w\"`` checks if the "
"convenience-dictionary ``w`` provided by the base class ``DefaultView`` "
"holds the widget for the field ``notes``. If the current user does not "
"have the permission ``cmf.ManagePortal`` it will be omited from the "
"dictionary and get an error since ``notes`` would not be a key in ``w``. "
"By first checking if it's missing we work around that."
msgstr ""

#: ../dexterity_3.rst:271
msgid "The viewlet"
msgstr ""

#: ../dexterity_3.rst:273
msgid ""
"Instead of writing a view you will have to display the sponsors at the "
"bottom of the website in a viewlet."
msgstr ""

#: ../dexterity_3.rst:275
msgid ""
"``_sponsors`` returns a list of dictionaries containing all necessary "
"info about sponsors."
msgstr ""
"``_sponsors`` regresa una lista de diccionarios conteniendo todo la "
"información necesaria sobre los tipos de contenidos ``Sponsor``."

#: ../dexterity_3.rst:361
msgid ""
"We create the complete img tag using a custom scale (200x80) using the "
"view ``images`` from plone.namedfile. This actually scales the logos and "
"saves them as new blobs."
msgstr ""

#: ../dexterity_3.rst:362
msgid ""
"In ``sponsors`` we return a ordered dictionary of randomized lists of "
"dicts (containing the information on sponsors)."
msgstr ""

#: ../dexterity_3.rst:364
msgid ""
"``_sponsors`` is cached for an hour using `plone.memoize "
"<http://docs.plone.org/manage/deploying/testing_tuning/performance/decorators.html"
"#timeout-caches>`_. This way we don't need to keep all sponsor objects in"
" memory all the time. But we'd have to wait for up to an hour until "
"changes will be visible."
msgstr ""
"``_sponsors`` se almacena en caché durante una hora usando `plone.memoize "
"<http://docs.plone.org/4/en/manage/deploying/testing_tuning/performance/decorators.html"
"#timeout-caches>`_. De esta manera no es necesario mantener todos los "
"objetos tipos de contenidos ``Sponsor`` en la memoria todo el tiempo. También podríamos "
"almacenar en caché hasta que uno de los tipos de contenidos ``Sponsor`` sea modificado:"

#: ../dexterity_3.rst:366
msgid ""
"Instead we'll cache until one of the sponsors is modified by using a "
"callable ``_sponsors_cachekey`` that returns a number that changes when a"
" sponsor is modified."
msgstr ""
"Creamos la etiqueta HTML ``IMG`` completa utilizando una escala personalizada "
"(200x80) utilizando la vista ``images`` del paquete ``plone.namedfile``. Este "
"escalas en realidad los logotipos y las guarda como nuevos registros blobs."

#: ../dexterity_3.rst:384
msgid ""
"`Guide to Caching "
"<http://docs.plone.org/manage/deploying/caching/index.html>`_"
msgstr ""
"En ``sponsors`` regresamos un diccionario ordenado de una listas aleatorias "
"de diccionarios (que contiene la información sobre los tipos de contenidos ``Sponsor``)."

#: ../dexterity_3.rst:385
msgid ""
"`Cache decorators "
"<http://docs.plone.org/manage/deploying/testing_tuning/performance/decorators.html>`_"
msgstr ""
"http://docs.plone.org/4/en/develop/plone/images/content.html#for-plone-4"

#: ../dexterity_3.rst:386
msgid ""
"`Image Scaling <http://docs.plone.org/develop/plone/images/content.html"
"#image-scales-plone-4>`_"
msgstr ""

#: ../dexterity_3.rst:390
msgid "The template for the viewlet"
msgstr ""

#: ../dexterity_3.rst:392
msgid "Add the template ``browser/templates/sponsors_viewlet.pt``"
msgstr ""
"Agregar la plantilla en el archivo ``browser/templates/sponsors_viewlet.pt``, con el siguiente código ZPT:"

#: ../dexterity_3.rst:425
msgid ""
"Ther already is some css in ``browser/static/ploneconf.css`` to make it "
"look ok."
msgstr ""

#: ../dexterity_3.rst:442
msgid "Exercise 2"
msgstr ""

#: ../dexterity_3.rst:444
msgid ""
"Turn the a content type speaker from :ref:`Exercise 2 of the first "
"chapter on dexterity <dexterity1-excercises-label>` into a python-based "
"type."
msgstr ""

#: ../dexterity_3.rst:446
msgid "Is should hold the following fields:"
msgstr ""

#: ../dexterity_3.rst:448
msgid "title"
msgstr ""

#: ../dexterity_3.rst:449
msgid "email"
msgstr ""

#: ../dexterity_3.rst:450
msgid "homepage"
msgstr ""

#: ../dexterity_3.rst:451
msgid "biography"
msgstr ""

#: ../dexterity_3.rst:452
msgid "company"
msgstr ""

#: ../dexterity_3.rst:453
msgid "twitter_name"
msgstr ""

#: ../dexterity_3.rst:454
msgid "irc_name"
msgstr ""

#: ../dexterity_3.rst:455
msgid "image"
msgstr ""

#: ../dexterity_3.rst:457
msgid ""
"Do *not* use the IBasic or IDublinCore behavior to add title and "
"description. Instead add your own field ``title`` and give it the title "
"*Name*."
msgstr ""

#: ../dexterity_3.rst:524
msgid "Register the type in ``profiles/default/types.xml``"
msgstr ""

#: ../dexterity_3.rst:539
msgid ""
"The FTI goes in ``profiles/default/types/speaker.xml``. Again we use "
"``Item`` as the base-class:"
msgstr ""

#: ../dexterity_3.rst:589
msgid "After reinstalling the package the new type is useable."
msgstr ""

# fb1e4796dfc642948fc5362ff403b850
#~ msgid ""
#~ "Without sponsors a conference would be"
#~ " hard to finance plus it is a"
#~ " good opportunity for plone-companies "
#~ "to advertise their services."
#~ msgstr ""

# 5e7c05e2dcf243979476adb6f496848b
#~ msgid "create the content-type *sponsor* that has a python-schema"
#~ msgstr ""

# 890d864c7cda47abab77b8a409c055ae
#~ msgid "create a viewlet that shows the sponsors sorted by level"
#~ msgstr ""

# ffd7023004ae4c0daa7a450dcebd2682
#~ msgid "discuss image-scales"
#~ msgstr ""

# 3bab4d73b1a444ddba8cb829064ffb9f
#~ msgid ""
#~ "First we create the schema for the"
#~ " new type. Instead of xml we "
#~ "use python now. Create a new "
#~ "folder ``content`` with a empty "
#~ "``__init__.py`` in it. Now add a "
#~ "new file ``content/sponsor.py``."
#~ msgstr ""

# dc72d732b492445ba053876278f731a8
#~ msgid ""
#~ "In ``directives.widget(level=RadioFieldWidget)`` we "
#~ "change the widget from a dropdown "
#~ "to radioboxes."
#~ msgstr ""

# 8b888bdb1a064809b6d7b2bf1f5a9dcb
#~ msgid ""
#~ "``fieldset('Images', fields=['logo', 'advertisment'])``"
#~ " moves the two image-fields to "
#~ "another tab."
#~ msgstr ""

# 1fab7800481e48f6a888a6238fdc2527
#~ msgid ""
#~ "``directives.read_permission(...)`` sets the read-"
#~ " and write-permission for the field"
#~ " ``note`` to users who can add "
#~ "new members. Usually this permission is"
#~ " only granted to Site-Administrators "
#~ "and Managers. We use it to store"
#~ " information that should not be "
#~ "publicly visible. Please note that "
#~ "``obj.note`` is still accessible in "
#~ "templates and python. Only using the "
#~ "widget (like we do in the view "
#~ "later) checks for the permission."
#~ msgstr ""

# 8731728484fe408b841d66ed07b82c62
#~ msgid ""
#~ "Second we create the FTI for new"
#~ " type in ``profiles/default/types/sponsor.xml``"
#~ msgstr ""

# 8f428c56e2034f499ca50c9ffd2b9fa3
#~ msgid ""
#~ "After reinstalling our package we can"
#~ " create the new type. We use "
#~ "the default-view provided by dexterity"
#~ " since we display the sponsors in "
#~ "a viewlet."
#~ msgstr ""

# 8498760679c24d1ea462b77d63130b49
#~ msgid ""
#~ "Instead we tweak the default-view "
#~ "with some css. Add the following "
#~ "to ``resources/ploneconf.css``"
#~ msgstr ""

# b3a84ab1fce4474ab90e225e8734a3d8
#~ msgid "If we would want a custom view for sponsors it could look like this."
#~ msgstr ""

# 87f19e2bfb4a417b9b7f0f1604b2676f
#~ msgid ""
#~ "Note that we have to handle the"
#~ " field with special permissions: "
#~ "``tal:condition=\"python: 'notes' in view.w\"`` "
#~ "checks if the convenience-dictionary "
#~ "``w`` provided by the base-class "
#~ "``DefaultView`` holds the widget for the"
#~ " field ``note``. If the current user"
#~ " does not have the permission "
#~ "``cmf.AddPortalMember`` it will be omited "
#~ "from the dictionary and get an "
#~ "error since ``notes`` would not be "
#~ "a key in ``w``. By first checking"
#~ " if it is missing we work "
#~ "around that."
#~ msgstr ""

# 05814a524476443f969ec86ce2f2907e
#~ msgid "We display the sponsors at the bottom of the website in a viewlet."
#~ msgstr ""

# e0bb99634edc4b24909b2eae93a762a6
#~ msgid "Add the viewlet-class in ``browser/viewlets.py``"
#~ msgstr ""

# 855164c0a1834aa2bc3e286eaa786445
#~ msgid ""
#~ "``_sponsors`` is cached for an hour "
#~ "using `plone.memoize "
#~ "<http://docs.plone.org/manage/deploying/testing_tuning/performance/decorators.html"
#~ "#timeout-caches>`_. This way we don't "
#~ "need to keep all sponsor-objects "
#~ "in memory all the time. We could"
#~ " also cache until one of the "
#~ "sponsors is modified:"
#~ msgstr ""

# 679033a4a82e4dfabbad87aa82a0d58d
#~ msgid ""
#~ "We create the complete img-tag "
#~ "using a custom scale (200x80) using "
#~ "the view ``images`` from plone.namedfile. "
#~ "This actually scales the logos and "
#~ "saves them as new blobs."
#~ msgstr ""

# 5a0275433ba84f0aaf07bd8eb0107f0c
#~ msgid ""
#~ "In ``sponsors`` we return a ordered "
#~ "dicttionary of randomized lists of dicts"
#~ " (containing the information on sponsors)."
#~ msgstr ""

# 7104479c905d43658ae5fba4877e489f
#~ msgid ""
#~ "http://docs.plone.org/develop/plone/images/content.html#image-"
#~ "scales-plone-4"
#~ msgstr ""

# 5375f14e42fe4365882cccd1e883fb6e
#~ msgid "Now add some css to make it look ok. Edit ``resources/ploneconf.css``"
#~ msgstr ""
