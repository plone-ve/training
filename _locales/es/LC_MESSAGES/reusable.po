# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by
# the Plone Foundation under a Creative Commons Attribution 4.0
# International license.
# This file is distributed under the same license as the Mastering Plone
# package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone Training\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-05 04:39-0400\n"
"PO-Revision-Date: 2014-07-13 05:24+0000\n"
"Last-Translator: Leonardo J. Caballero G. <leonardocaballero@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mastering-"
"plone-training/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../reusable.rst:4
msgid "Making Our Package Reusable"
msgstr ""

#: ../reusable.rst:6
msgid "In this part you will:"
msgstr ""

#: ../reusable.rst:8
msgid "Add Permissions"
msgstr ""

#: ../reusable.rst:10
msgid "Topics covered:"
msgstr ""

#: ../reusable.rst:12
msgid "Permissions"
msgstr ""

#: ../reusable.rst:15
msgid "The package contains some problems."
msgstr ""

#: ../reusable.rst:17
msgid "No permission settings, Users can't customize who and when users can vote"
msgstr ""

#: ../reusable.rst:18
msgid "We do things, but don't trigger events. Events allow others to react."
msgstr ""

#: ../reusable.rst:23
msgid "Adding permissions"
msgstr ""

#: ../reusable.rst:32
msgid "Permissions have a long history, there are two types of permissions."
msgstr ""

#: ../reusable.rst:34
msgid "In Zope2, a permission was just a string."
msgstr ""

#: ../reusable.rst:36
msgid "In ZTK, a permission is an object that gets registered as a Utility."
msgstr ""

#: ../reusable.rst:38
msgid ""
"We must support both, in some cases we have to reference the permission "
"by their Zope2 version, in some by their ZTK Version."
msgstr ""

#: ../reusable.rst:40
msgid ""
"Luckily, there is a zcml statement to register a permission both ways in "
"one step."
msgstr ""

#: ../reusable.rst:44
msgid ""
"The configuration registry was meant to solve a problem, but we will now "
"stumble over a problem that did not get resolved properly."
msgstr ""

#: ../reusable.rst:46
msgid ""
"Our permission is a utility. Our browser views declare this permission as"
" a requirement for viewing them."
msgstr ""

#: ../reusable.rst:48
msgid ""
"When our browser views get registered, the permissions must exist "
"already. If you try to register the permissions after the views, Zope "
"won't start because it doesn't know about the permissions."
msgstr ""

#: ../reusable.rst:50
msgid "Let's modify the file :file:`configure.zcml`"
msgstr ""

#: ../reusable.rst:78
msgid ""
"In some places we have to reference the Zope 2 permission strings. It is "
"best practice to provide a static variable for this."
msgstr ""

#: ../reusable.rst:80
msgid "We provide this in :file:`__init__.py`"
msgstr ""

#: ../reusable.rst:93
msgid "Using our permissions"
msgstr ""

#: ../reusable.rst:97
msgid ""
"As you can see, we created two permissions, one for voting, one for "
"viewing the votes."
msgstr ""

#: ../reusable.rst:99
msgid ""
"If a user is not allowed to see the votes, she does not need access to "
"the vote viewlet."
msgstr ""

#: ../reusable.rst:101
msgid ""
"While we are at it, if a user can't vote, she needs no access to the "
"helper view to actually submit a vote."
msgstr ""

#: ../reusable.rst:103
msgid "We can add this restriction to :file:`browser/configure.zcml`"
msgstr ""

#: ../reusable.rst:140
msgid ""
"We are configuring components, so we use the component name of the "
"permission, which is the :samp:`id` part of the declaration we added "
"earlier."
msgstr ""

#: ../reusable.rst:144
msgid "So, what happens if we do not protect the browser view to vote?"
msgstr ""

#: ../reusable.rst:146
msgid ""
"The person could still vote, by handcrafting the URL. Browser Views run "
"code without any restriction, it is your job to take care of security."
msgstr ""

#: ../reusable.rst:148
msgid ""
"But... if a person has no access to the object at all, maybe because the "
"site is configured that Anonymous users cannot access private objects, "
"the unauthorized users will not be able to submit a vote."
msgstr ""

#: ../reusable.rst:150
msgid ""
"That is because Zope checks security permissions when trying to find the "
"right object. If it can't find the object due to security constraints not"
" met, no view ill ever be called, because that would have been the next "
"step."
msgstr ""

#: ../reusable.rst:152
msgid ""
"We now protect our views and viewlets. We still show the option to vote "
"though."
msgstr ""

#: ../reusable.rst:154
msgid ""
"We must add a condition in our page template, and we must provide the "
"condition information in our viewlet class."
msgstr ""

#: ../reusable.rst:156
msgid "Lets move on to :file:`browser/viewlets.py`"
msgstr ""

#: ../reusable.rst:185
msgid "And the template in :file:`browser/templates/voting_viewlet.pt`"
msgstr ""

#: ../reusable.rst:216
msgid ""
"Sometimes subtle bugs come up because of changes. In this case I noticed "
"that I should only prompt people to vote if they are allowed to vote!"
msgstr ""

#: ../reusable.rst:221
msgid "Provide defaults"
msgstr ""

#: ../reusable.rst:225
msgid "Are we done yet? Who may vote now?"
msgstr ""

#: ../reusable.rst:227
msgid "We have to tell that someone."
msgstr ""

#: ../reusable.rst:229
msgid ""
"Who has which permissions is managed in Zope. This is persistent, and "
"persistent configuration is handled by GenericSetup."
msgstr ""

#: ../reusable.rst:231
msgid ""
"The persistent configuration is managed in another file: "
":file:`profiles/default/rolemap.xml`"
msgstr ""

# 76231bdddd604bcabf4ad5db001ee2d5
#~ msgid "Making our package reusable"
#~ msgstr ""

# 2465965c617648fda7cbd2765cbaaba4
#~ msgid "In ZTK, a permission is an object that gets registered as an Utility."
#~ msgstr ""

# 1753ba26ff7c472b9492eb2df69b9736
#~ msgid ""
#~ "The configuration registry wanted to "
#~ "solve a problem, but we will now"
#~ " stumble over a problem that did "
#~ "not get resolved properly."
#~ msgstr ""

# b6d26a2eaffd4f64a38dfe79197b6ea6
#~ msgid ""
#~ "Our permission is an utility. Our "
#~ "browser views declare this permission as"
#~ " a requirement for viewing them."
#~ msgstr ""

# 0d0e8dd6b557481cab57f7a91711c8b3
#~ msgid "Lets modify the file :file:`configure.zcml`"
#~ msgstr ""

# 7b722da5d7e54dd29ce0ab042ea8179f
#~ msgid ""
#~ "If one may not see the votings,"
#~ " he does not need access to the"
#~ " vote viewlet."
#~ msgstr ""

# 4e766459c43c45b1bad6a3b06df6f193
#~ msgid ""
#~ "While we are at it, if one "
#~ "can't vote, he needs no access to"
#~ " the helper view to actually submit"
#~ " a vote."
#~ msgstr ""

# 3dd11c4e39c64607aac17e3e6a86871e
#~ msgid "So, what happens, if we do not protect the browser view to vote?"
#~ msgstr ""

# 770148969a1d46199794edb048d22c1c
#~ msgid ""
#~ "That is, because Zope checks security"
#~ " permissions when trying to find the"
#~ " right object. If it can't find "
#~ "the object due to security constraints"
#~ " not met, no view ill ever be"
#~ " called, because that would have been"
#~ " the next step."
#~ msgstr ""

# 157edfbdf4c44f589bbcee23d9515a4c
#~ msgid ""
#~ "Sometimes subtle bugs come up because"
#~ " of changes, in this case, I "
#~ "noticed that I should only animate "
#~ "people to vote, if they are "
#~ "allowed to vote!"
#~ msgstr ""

# 9c8d150ef36d46539b4576d411d8bb21
#~ msgid ""
#~ "Who has which permissions is managed "
#~ "in Zope, it is persistent, persistent"
#~ " stuff goes to GenericSetup."
#~ msgstr ""

