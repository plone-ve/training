# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Plone Training package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Plone Training 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-02 12:20-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Angel Lopez <angel_lopez_1990@hotmail.es>, 2016\n"
"Language-Team: Spanish (https://www.transifex.com/plone/teams/21152/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../mastering_plone/about_mastering.rst:4
msgid "About Mastering Plone"
msgstr "Sobre \"Maestría en Plone\""

#: ../mastering_plone/about_mastering.rst:6
msgid ""
"This training was created by Philip Bauer and Patrick Gerken of `starzel.de "
"<https://www.starzel.de>`_ to create a canonical training for future Plone "
"developers. The aim is that anyone with the appropriate knowledge can give a"
" training based on it and contribute to it. It is published as Open Source "
"on `github <https://github.com/plone/training>`_ and `training.plone.org "
"<https://training.plone.org/>`_."
msgstr ""

#: ../mastering_plone/about_mastering.rst:8
msgid ""
"If you want to inquire the original authors about organizing a training "
"please contact them at team@starzel.de."
msgstr ""
"Si desea ponerse en contacto con los autores originales para un "
"entrenamiento, por favor,  puede hacerlo por medio del correo "
"team@starzel.de."

#: ../mastering_plone/about_mastering.rst:14
msgid "Upcoming Trainings"
msgstr "Próximos entrenamientos"

#: ../mastering_plone/about_mastering.rst:16
msgid ""
"There will be several trainings during `Ploneconf 2016 in Boston "
"<https://2016.ploneconf.org/>`_."
msgstr ""

#: ../mastering_plone/about_mastering.rst:18
msgid ""
"If you want to have a training near you please ask for trainings on "
"https://community.plone.org"
msgstr ""

#: ../mastering_plone/about_mastering.rst:23
msgid "Previous Trainings"
msgstr "Entrenamientos previos"

#: ../mastering_plone/about_mastering.rst:25
msgid ""
"The Mastering Plone Training was so far held publicly at the following "
"occasions:"
msgstr ""
"El entrenamiento \"Maestría en Plone\" se celebró públicamente en las "
"siguientes ocasiones:"

#: ../mastering_plone/about_mastering.rst:27
msgid "October 2015, Bucharest"
msgstr ""

#: ../mastering_plone/about_mastering.rst:28
msgid "`March 2015, Munich <https://www.starzel.de/leistungen/training/>`_"
msgstr ""

#: ../mastering_plone/about_mastering.rst:29
msgid "Plone Conference 2014, Bristol"
msgstr ""

#: ../mastering_plone/about_mastering.rst:30
msgid ""
"`June 2014, Caracas "
"<https://twitter.com/hellfish2/status/476906131970068480>`_"
msgstr ""
"`Junio de 2014, Caracas "
"<https://twitter.com/hellfish2/status/476906131970068480>`_"

#: ../mastering_plone/about_mastering.rst:31
msgid "`May 2014, Munich <https://www.starzel.de/blog/mastering-plone>`_"
msgstr "`Mayo de 2014, Múnich <https://www.starzel.de/blog/mastering-plone>`_"

#: ../mastering_plone/about_mastering.rst:32
msgid ""
"`PythonBrasil/Plone Conference 2013, Brasilia "
"<http://2013.pythonbrasil.org.br/>`_"
msgstr ""

#: ../mastering_plone/about_mastering.rst:33
msgid "PyCon DE 2012, Leipzig"
msgstr ""

#: ../mastering_plone/about_mastering.rst:34
msgid "Plone Conference 2012, Arnheim"
msgstr ""

#: ../mastering_plone/about_mastering.rst:35
msgid "PyCon De 2011, Leipzig"
msgstr ""

#: ../mastering_plone/about_mastering.rst:41
msgid "Trainers"
msgstr "Entrenadores"

#: ../mastering_plone/about_mastering.rst:43
msgid "The following trainers have given trainings based on Mastering Plone:"
msgstr ""
"Los siguientes entrenadores han dado entrenamiento basado en el material "
"\"Maestría en Plone\":"

#: ../mastering_plone/about_mastering.rst:46
msgid "Philip Bauer"
msgstr "Philip Bauer"

#: ../mastering_plone/about_mastering.rst:46
msgid ""
"Philip Bauer is a web developer from Munich who fell in love with Plone in "
"2005 and since then works almost exclusively with Plone. A historian by "
"education he drifted towards creating websites in the 90's and founded the "
"company Starzel.de in 2000. He is a member of the Plone foundation, loves "
"teaching and is dedicated to Open Source. Among other Plone-related projects"
" he started creating the Mastering Plone Training so that everyone can "
"become a Plone-Developer."
msgstr ""

#: ../mastering_plone/about_mastering.rst:49
msgid "Patrick Gerken"
msgstr ""

#: ../mastering_plone/about_mastering.rst:49
msgid ""
"Patrick Gerken works with Python since 2002. He started working with pure "
"Zope applications and now develops mainly with Plone, Pyramid and Javascript"
" as well as doing what is called DevOps. He works at Zumtobel Group."
msgstr ""

#: ../mastering_plone/about_mastering.rst:52
msgid "Steve McMahon"
msgstr "Steve McMahon"

#: ../mastering_plone/about_mastering.rst:52
msgid ""
"Steve McMahon is a long-time Plone community member, contributor and "
"trainer. He is the creator of PloneFormGen and maintainer of the Unified "
"installer. Steve also wrote several chapters of Practical Plone and is an "
"experienced speaker and instructor."
msgstr ""

#: ../mastering_plone/about_mastering.rst:55
msgid "Steffen Lindner"
msgstr "Steffen Lindner"

#: ../mastering_plone/about_mastering.rst:55
msgid ""
"Steffen Lindner started developing Plone in 2006. He worked on small Plone "
"sites and also with huge intranet sites. As Open Source / Free Software "
"developer he joined the Plone core developer team 2011 and works at "
"Starzel.de."
msgstr ""

#: ../mastering_plone/about_mastering.rst:58
msgid "Fulvio Casali"
msgstr ""

#: ../mastering_plone/about_mastering.rst:58
msgid ""
"Fulvio Casali has been working almost exclusively with Plone since 2008.  He"
" struggled for years to find his way around the source code of Plone when "
"there was no documentation and no trainings, and feels passionate about "
"helping users and developers become proficient.  He loves participating in "
"Plone community events, and organized two strategic Plone sprints on the "
"northwest coast of the USA and helped galvanized the developer community "
"there."
msgstr ""

#: ../mastering_plone/about_mastering.rst:61
msgid "Johannes Raggam"
msgstr ""

#: ../mastering_plone/about_mastering.rst:61
msgid ""
"Johannes Raggam from Graz/Austria works most of the time with a technology "
"stack based around Python, Plone, Pyramid and Javascript. As an active Open "
"Source / Free Software developer he believes in the power of collaborative "
"work. He is a BlueDynamics Alliance Partner and Plone Core Contributor since"
" 2009, a member of the Plone Framework Team since 2012 and Plone Foundation "
"member."
msgstr ""

#: ../mastering_plone/about_mastering.rst:64
msgid "Franco Pellegrini"
msgstr ""

#: ../mastering_plone/about_mastering.rst:64
msgid ""
"Franco Pellegrini is a software developer from Cordoba, Argentina. He "
"started developing Plone in 2005 in a small software company, and as an "
"independent contractor since 2011. He believes in free software philosophy, "
"and so, he has been a Plone core developer since 2010 and Framework Team "
"member since 2012."
msgstr ""

#: ../mastering_plone/about_mastering.rst:67
msgid "Fred van Dijk"
msgstr ""

#: ../mastering_plone/about_mastering.rst:67
msgid ""
"Fred, from Rotterdam the Netherlands, has been exposed to Plone early on as "
"a user. In 2007 he joined Zest Software to work on and with Plone and Python"
" web apps full time. He can focus on the business side, helping users decide"
" on which features are most valuable to develop or when to stick with "
"standard functionality. He also gives training on using and administering "
"the CMS. On the IT side he has plenty technical knowledge to work on code, "
"system administration and do project management in a team of developers."
msgstr ""

#: ../mastering_plone/about_mastering.rst:70
msgid "Leonardo Caballero"
msgstr "Leonardo Caballero"

#: ../mastering_plone/about_mastering.rst:70
msgid ""
"Leonardo J. Caballero G. of Maracaibo, Venezuela, is a Technical Director at"
" Covantec R.L. and Conectivo C.A. Leonardo maintains the Spanish "
"translations of more than 49 Plone Add-ons as well as Spanish-language "
"documentation for Plone itself. He has contributed several Plone Add-ons "
"that are part of PloneGov. Currently serving the Plone Board as a Plone "
"Ambassador, Leonardo has also served as an Advisory Board member and has "
"spoken at or helped organize Plone and open-source events throughout South "
"America."
msgstr ""

#: ../mastering_plone/about_mastering.rst:76
msgid "Using the documentation for a training"
msgstr "Usando la documentación para un entrenamiento"

#: ../mastering_plone/about_mastering.rst:78
msgid ""
"Feel free to organize a training yourself. Please be so kind to contribute "
"any bug fixes or enhancements you made to the documentation for your "
"training."
msgstr ""

#: ../mastering_plone/about_mastering.rst:80
msgid "The training is rendered using sphinx and builds in two flavors:"
msgstr ""
"El entrenamiento se genera mediante la herramienta Sphinx y se basa en dos "
"sabores:"

#: ../mastering_plone/about_mastering.rst:83
msgid "default"
msgstr "por defecto"

#: ../mastering_plone/about_mastering.rst:83
msgid ""
"The verbose version used for the online documentation and for the trainer. "
"Build it in sphinx with ``make html`` or use the online version."
msgstr ""

#: ../mastering_plone/about_mastering.rst:86
msgid "presentation"
msgstr "presentation"

#: ../mastering_plone/about_mastering.rst:86
msgid ""
"A abbreviated version used for the projector during a training. It should "
"use more bullet points than verbose text. Build it in sphinx with ``make "
"presentation``."
msgstr ""

#: ../mastering_plone/about_mastering.rst:90
msgid ""
"By prefixing an indented block of text or code with ``.. only:: "
"presentation`` you can control that this block is used for the presentation "
"version only."
msgstr ""

#: ../mastering_plone/about_mastering.rst:92
msgid ""
"To hide a block from the presentation version use ``.. only:: not "
"presentation``"
msgstr ""

#: ../mastering_plone/about_mastering.rst:94
msgid "Content without a prefix will be included in both versions."
msgstr "Contenido sin un prefijo sera incluido en ambas versiones."

#: ../mastering_plone/about_mastering.rst:98
msgid "The readthedocs theme"
msgstr ""

#: ../mastering_plone/about_mastering.rst:100
msgid ""
"We slightly tweaked readthedocs theme in ``_static/custom.css`` so that it "
"works better with projectors:"
msgstr ""

#: ../mastering_plone/about_mastering.rst:102
msgid ""
"We start hiding the navigation bar much earlier so that it does not "
"interfere with the text."
msgstr ""

#: ../mastering_plone/about_mastering.rst:103
msgid "We enlarge the default width of the content-area."
msgstr "Ampliamos el ancho predeterminado del área de contenido."

#: ../mastering_plone/about_mastering.rst:106
#: ../mastering_plone/behaviors_2.rst:325 ../mastering_plone/dexterity.rst:237
#: ../mastering_plone/features.rst:72 ../mastering_plone/views_3.rst:230
msgid "Exercises"
msgstr "Ejercicios"

#: ../mastering_plone/about_mastering.rst:108
msgid ""
"Some additional javascript shows hidden solutions for exercises by clicking."
msgstr ""
"Algunos javascript adicionales muestran las soluciones ocultas para los "
"ejercicios haciendo clic en ellos."

#: ../mastering_plone/about_mastering.rst:110
msgid "Just prepend the solution with this markup::"
msgstr "Simplemente escriba la solución con este markup::"

#: ../mastering_plone/about_mastering.rst:115
msgid "Here is a full example::"
msgstr "Aqui hay un ejemplo completo::"

#: ../mastering_plone/about_mastering.rst:131
msgid "It will be rendered like this:"
msgstr "Eso sera renderizado como algo así:"

#: ../mastering_plone/about_mastering.rst:134
#: ../mastering_plone/behaviors_2.rst:328 ../mastering_plone/dexterity.rst:240
#: ../mastering_plone/dexterity_3.rst:192 ../mastering_plone/events.rst:138
#: ../mastering_plone/export_code.rst:401 ../mastering_plone/features.rst:75
#: ../mastering_plone/frontpage.rst:227 ../mastering_plone/testing.rst:165
#: ../mastering_plone/user_generated_content.rst:227
#: ../mastering_plone/viewlets_1.rst:145 ../mastering_plone/views_3.rst:235
#: ../mastering_plone/zpt.rst:474
msgid "Exercise 1"
msgstr "Ejercicio 1"

#: ../mastering_plone/about_mastering.rst:136
msgid "Your mission, should you choose to accept it..."
msgstr "Su misión, si decide aceptarla..."

#: ../mastering_plone/about_mastering.rst:138
#: ../mastering_plone/anatomy.rst:143 ../mastering_plone/behaviors_2.rst:332
#: ../mastering_plone/behaviors_2.rst:392 ../mastering_plone/dexterity.rst:244
#: ../mastering_plone/dexterity.rst:273 ../mastering_plone/dexterity_2.rst:341
#: ../mastering_plone/dexterity_3.rst:196
#: ../mastering_plone/dexterity_3.rst:462
#: ../mastering_plone/dexterity_3.rst:606 ../mastering_plone/events.rst:142
#: ../mastering_plone/events.rst:174 ../mastering_plone/export_code.rst:405
#: ../mastering_plone/export_code.rst:421 ../mastering_plone/features.rst:79
#: ../mastering_plone/features.rst:107 ../mastering_plone/features.rst:117
#: ../mastering_plone/frontpage.rst:231 ../mastering_plone/restapi.rst:57
#: ../mastering_plone/restapi.rst:464 ../mastering_plone/testing.rst:181
#: ../mastering_plone/user_generated_content.rst:231
#: ../mastering_plone/viewlets_1.rst:149 ../mastering_plone/viewlets_1.rst:225
#: ../mastering_plone/views_2.rst:348 ../mastering_plone/views_3.rst:239
#: ../mastering_plone/views_3.rst:261 ../mastering_plone/views_3.rst:392
#: ../mastering_plone/zpt.rst:511 ../mastering_plone/zpt.rst:547
#: ../mastering_plone/zpt.rst:587 ../mastering_plone/zpt.rst:636
#: ../mastering_plone/zpt.rst:680 ../mastering_plone/zpt.rst:718
#: ../mastering_plone/zpt.rst:758
msgid "Solution"
msgstr "Solución"

#: ../mastering_plone/about_mastering.rst:141
msgid "To save the world with only seconds to spare do the following:"
msgstr ""
"Para salvar al mundo con sólo unos segundos de sobra haga lo siguiente:"

#: ../mastering_plone/about_mastering.rst:149
msgid "Building the documentation locally"
msgstr "Construyendo la documentación localmente"

#: ../mastering_plone/about_mastering.rst:152
msgid "Dependencies"
msgstr "Dependencias"

#: ../mastering_plone/about_mastering.rst:154
msgid ""
"Please make sure that you have `Enchant "
"<http://www.abisource.com/projects/enchant/>`_ installed, this is needed for"
" spell-checking."
msgstr ""

#: ../mastering_plone/about_mastering.rst:156
msgid "Install Enchant on OS X:"
msgstr ""

#: ../mastering_plone/about_mastering.rst:162
msgid "Install Enchant on Ubuntu:"
msgstr ""

#: ../mastering_plone/about_mastering.rst:169
msgid "To build the documentation follow these steps:"
msgstr "Para construir la documentación siga estos pasos:"

#: ../mastering_plone/about_mastering.rst:178
msgid "Now install dependencies and build."
msgstr ""

#: ../mastering_plone/about_mastering.rst:185
msgid ""
"You can now open the output from ``_build/html/index.html``. To build the "
"presentation version use ``make presentation`` instead of ``make html``. You"
" can open the presentation at ``presentation/index.html``."
msgstr ""

#: ../mastering_plone/about_mastering.rst:188
msgid "Build new"
msgstr ""

#: ../mastering_plone/about_mastering.rst:199
msgid "Now you can open documentation with your web-bowser."
msgstr ""

#: ../mastering_plone/about_mastering.rst:201
msgid "If you use OS X you can just do:"
msgstr ""

#: ../mastering_plone/about_mastering.rst:207
msgid "In the case of Linux, Ubuntu for example you can do:"
msgstr ""

#: ../mastering_plone/about_mastering.rst:215
msgid ""
"If you do not use Firefox but Chrome, please replace firefox with google-"
"chrome e.g"
msgstr ""

#: ../mastering_plone/about_mastering.rst:225
msgid "Update existing"
msgstr ""

#: ../mastering_plone/about_mastering.rst:236
msgid "Technical set up to do before a training (as a trainer)"
msgstr ""

#: ../mastering_plone/about_mastering.rst:238
msgid ""
"Prepare a mailserver for the user registration mail (See :ref:`features-"
"mailserver-label`)"
msgstr ""

#: ../mastering_plone/about_mastering.rst:239
msgid ""
"If you do only a part of the training (Advanced) prepare a database with the"
" steps of the previous sections. Be aware that the file- and blobstorage in "
"the Vagrant box is here: /home/vagrant/var/ (not at the buildout path "
"/vagrant/buildout/)"
msgstr ""

#: ../mastering_plone/about_mastering.rst:243
msgid "Upgrade the vagrant and buildout to a new Plone-version"
msgstr ""

#: ../mastering_plone/about_mastering.rst:245
msgid ""
"In https://github.com/collective/training_buildout change `buildout.cfg "
"<https://github.com/collective/training_buildout/blob/master/buildout.cfg>`_"
" to extend from the new `versions.cfg` on http://dist.plone.org/release"
msgstr ""

#: ../mastering_plone/about_mastering.rst:246
msgid ""
"Check if we should to update any versions in "
"https://github.com/collective/training_buildout/blob/master/versions.cfg"
msgstr ""

#: ../mastering_plone/about_mastering.rst:247
msgid "Commit and push the changes to the training_buildout"
msgstr ""

#: ../mastering_plone/about_mastering.rst:248
msgid ""
"Modify the vagrant-setup by modifying "
":file:`plone_training_config/manifests/plone.pp`. Set the new Plone-version "
"as `$plone_version` in line 3."
msgstr ""

#: ../mastering_plone/about_mastering.rst:249
msgid ""
"Test the vagrant-setup it by creating a new vagrant-box using the new "
"config."
msgstr ""

#: ../mastering_plone/about_mastering.rst:250
msgid ""
"Create a new zip-file of all files in `plone_training_config` and move it to"
" `_static`:"
msgstr ""

#: ../mastering_plone/about_mastering.rst:258
msgid "Commit and push the changes to https://github.com/plone/training"
msgstr ""

#: ../mastering_plone/about_mastering.rst:262
msgid "Train the trainer"
msgstr ""

#: ../mastering_plone/about_mastering.rst:264
msgid ""
"If you are a trainer there is a special mini training about giving technical"
" trainings. We really want this material to be used, re-used, expanded and "
"improved by Plone trainers world wide. These chapters don't contain any "
"Plone specific advice, there's background, theory,  check lists and tips for"
" anyone trying to teach technical subjects."
msgstr ""

#: ../mastering_plone/about_mastering.rst:266
msgid ":doc:`../trainthetrainer/index`"
msgstr ""

#: ../mastering_plone/about_mastering.rst:271
msgid "Contributing"
msgstr "Contribuyendo"

#: ../mastering_plone/about_mastering.rst:273
msgid ""
"Everyone is **very welcome** to contribute. Minor bug fixes can be pushed "
"directly in the `repository <https://github.com/plone/training>`_, bigger "
"changes should made as `pull-requests "
"<https://github.com/plone/training/pulls/>`_ and discussed previously in "
"tickets."
msgstr ""

#: ../mastering_plone/about_mastering.rst:279
msgid "License"
msgstr "Licencia"

#: ../mastering_plone/about_mastering.rst:281
msgid ""
"The Mastering Plone Training is licensed under a `Creative Commons "
"Attribution 4.0 International License "
"<https://creativecommons.org/licenses/by/4.0/>`_."
msgstr ""
"El entrenamiento \"Maestría en Plone\" es licenciado bajo la `Creative "
"Commons Attribution 4.0 International License "
"<https://creativecommons.org/licenses/by/4.0/>`_."

#: ../mastering_plone/about_mastering.rst:283
msgid ""
"Make sure you have filled out a `Contributor Agreement "
"<https://plone.org/foundation/contributors-agreement>`_."
msgstr ""

#: ../mastering_plone/about_mastering.rst:285
msgid ""
"If you haven't filled out a Contributor Agreement, you can still contribute."
" Contact the Documentation team, for instance via the `mailinglist "
"<https://sourceforge.net/p/plone/mailman/plone-docs/>`_ or directly send a "
"mail to plone-docs@lists.sourceforge.net Basically, all we need is your "
"written confirmation that you are agreeing your contribution can be under "
"Creative Commons. You can also add in a comment with your pull request \"I, "
"<full name>, agree to have this published under Creative Commons 4.0 "
"International BY\"."
msgstr ""

#: ../mastering_plone/add-ons.rst:4
msgid "Extend Plone With Add-On Packages"
msgstr ""

#: ../mastering_plone/add-ons.rst:6
msgid ""
"There are more than 2,000 add-ons for Plone. We will cover only a handful "
"today."
msgstr ""

#: ../mastering_plone/add-ons.rst:7
msgid "Using them saves a lot of time"
msgstr ""

#: ../mastering_plone/add-ons.rst:8
msgid "The success of a project often depends on finding the right add-on"
msgstr ""

#: ../mastering_plone/add-ons.rst:9
msgid "Their use, usefulness, quality and complexity varies a lot"
msgstr "Su uso, utilidad, calidad y complejidad varia mucho"

#: ../mastering_plone/add-ons.rst:15
msgid "Some notable add-ons"
msgstr "Algunos complementos notables"

#: ../mastering_plone/add-ons.rst:18
msgid ""
"`Products.PloneFormGen "
"<http://docs.plone.org/develop/plone/forms/ploneformgen.html>`_"
msgstr ""
"`Products.PloneFormGen "
"<http://docs.plone.org/develop/plone/forms/ploneformgen.html>`_"

#: ../mastering_plone/add-ons.rst:18
msgid "A form generator."
msgstr ""

#: ../mastering_plone/add-ons.rst:21
msgid "`collective.disqus <https://pypi.python.org/pypi/collective.disqus/>`_"
msgstr ""

#: ../mastering_plone/add-ons.rst:21
msgid "Integrates the Disqus commenting platform API into Plone"
msgstr ""

#: ../mastering_plone/add-ons.rst:24
msgid ""
"`collective.plonetruegallery "
"<https://pypi.python.org/pypi/collective.plonetruegallery>`_"
msgstr ""
"`collective.plonetruegallery "
"<https://pypi.python.org/pypi/collective.plonetruegallery>`_"

#: ../mastering_plone/add-ons.rst:24
msgid "Photo galleries with a huge selection of various js-libraries."
msgstr ""

#: ../mastering_plone/add-ons.rst:27
msgid "`plone.app.mosaic <https://github.com/plone/plone.app.mosaic>`_"
msgstr ""

#: ../mastering_plone/add-ons.rst:27
msgid "Layout solution to easily create complex layouts through the web."
msgstr ""

#: ../mastering_plone/add-ons.rst:30
msgid "`collective.geo <http://collectivegeo.readthedocs.io/en/latest/>`_"
msgstr "`collective.geo <http://collectivegeo.readthedocs.io/en/latest/>`_"

#: ../mastering_plone/add-ons.rst:30
msgid ""
"Flexible bundle of add-ons to geo-reference content and display in maps"
msgstr ""

#: ../mastering_plone/add-ons.rst:33
msgid ""
"`collective.mailchimp <https://pypi.python.org/pypi/collective.mailchimp>`_"
msgstr ""
"`collective.mailchimp <https://pypi.python.org/pypi/collective.mailchimp>`_"

#: ../mastering_plone/add-ons.rst:33
msgid "Allows visitors to subscribe to mailchimp newsletters"
msgstr "Permite a los visitantes suscribirse a noticias Mailchimp"

#: ../mastering_plone/add-ons.rst:36
msgid ""
"`eea.facetednavigation "
"<https://pypi.python.org/pypi/eea.facetednavigation/>`_"
msgstr ""
"`eea.facetednavigation "
"<https://pypi.python.org/pypi/eea.facetednavigation/>`_"

#: ../mastering_plone/add-ons.rst:36
msgid "Create faceted navigation and searches through the web."
msgstr "Crear la navegación facetada y búsquedas a través de la Web."

#: ../mastering_plone/add-ons.rst:39
msgid ""
"`collective.lineage <https://pypi.python.org/pypi/collective.lineage>`_"
msgstr ""

#: ../mastering_plone/add-ons.rst:39
msgid ""
"Microsites for Plone - makes subfolders appear to be autonomous Plone sites"
msgstr ""

#: ../mastering_plone/add-ons.rst:42
msgid "`Products.Doormat <https://pypi.python.org/pypi/Products.Doormat>`_"
msgstr "`Products.Doormat <https://pypi.python.org/pypi/Products.Doormat>`_"

#: ../mastering_plone/add-ons.rst:42
msgid "A flexible doormat"
msgstr "Un flexible pie de página basado en el patrón de diseño Doormat"

#: ../mastering_plone/add-ons.rst:45
msgid ""
"`collective.behavior.banner "
"<https://github.com/collective/collective.behavior.banner>`_"
msgstr ""
"`collective.behavior.banner "
"<https://github.com/collective/collective.behavior.banner>`_"

#: ../mastering_plone/add-ons.rst:45
msgid "Add decorative banners and sliders"
msgstr "Agrega banners decorativos y pasarelas"

#: ../mastering_plone/add-ons.rst:48
msgid ""
"`plone.app.multilingual "
"<https://pypi.python.org/pypi/plone.app.multilingual>`_"
msgstr ""

#: ../mastering_plone/add-ons.rst:48
msgid "Allows multilingual sites by translating content."
msgstr ""

#: ../mastering_plone/add-ons.rst:51
msgid "`Rapido <https://rapidoplone.readthedocs.io/en/latest/>`_"
msgstr ""

#: ../mastering_plone/add-ons.rst:51
msgid ""
"Allows developers with a little knowledge of HTML and a little knowledge of "
"Python to implement custom elements and insert them anywhere they want."
msgstr ""

#: ../mastering_plone/add-ons.rst:54
msgid "`Plomino <http://plomino.net/>`_"
msgstr "`Plomino <http://plomino.net/>`_"

#: ../mastering_plone/add-ons.rst:54
msgid "Powerful and flexible web-based application builder for Plone"
msgstr ""
"Un poderoso y flexible constructor de aplicaciones basado en Web para Plone"

#: ../mastering_plone/add-ons.rst:58
msgid ""
"Some add-ons may not yet run under Plone 5 and will have to be updated to be"
" compatible."
msgstr ""

#: ../mastering_plone/add-ons.rst:64
msgid "How to find add-ons"
msgstr "¿Como buscar complementos?"

#: ../mastering_plone/add-ons.rst:66
msgid "https://plone.org/download/add-ons"
msgstr ""

#: ../mastering_plone/add-ons.rst:67
msgid "https://pypi.python.org/pypi - use the search form!"
msgstr "https://pypi.python.org/pypi - ¡Use el formulario de búsqueda!"

#: ../mastering_plone/add-ons.rst:68
msgid "https://github.com/collective >1200 repos"
msgstr "https://github.com/collective > 1200 repositorios"

#: ../mastering_plone/add-ons.rst:69
msgid "https://github.com/plone >260 repos"
msgstr "https://github.com/plone > 260 repositorios"

#: ../mastering_plone/add-ons.rst:70
msgid "https://community.plone.org - ask the community"
msgstr ""

#: ../mastering_plone/add-ons.rst:71
msgid "google (e.g. `Plone+Slider <http://lmgtfy.com/?q=plone+slider>`_)"
msgstr ""
"Navegando en Google (por ejemplo `Plone+Slider "
"<http://lmgtfy.com/?q=plone+slider>`_)"

#: ../mastering_plone/add-ons.rst:72
msgid "ask in irc and on the mailing list"
msgstr "Pregunta en el canal irc y la lista de correo"

#: ../mastering_plone/add-ons.rst:76
msgid ""
"A talk on finding and managing add-ons: "
"https://www.youtube.com/watch?v=Sc6NkqaSjqw"
msgstr ""

#: ../mastering_plone/add-ons.rst:82
msgid "Installing Add-ons"
msgstr "Instalando complementos"

#: ../mastering_plone/add-ons.rst:84
msgid "Installation is a two-step process."
msgstr "La instalación es un proceso de dos pasos."

#: ../mastering_plone/add-ons.rst:87
msgid "Making the add-on packages available to Zope"
msgstr "Haciendo los paquetes Complementos disponibles para Zope"

#: ../mastering_plone/add-ons.rst:89
msgid ""
"First, we must make the add-on packages available to Zope. This means that "
"Zope can import the code. Buildout is responsible for this."
msgstr ""

#: ../mastering_plone/add-ons.rst:91
msgid "Look at the :file:`buildout.cfg` file in :file:`/vagrant/buildout`."
msgstr ""

#: ../mastering_plone/add-ons.rst:95
msgid ""
"If you're using our Vagrant kit, the Plone configuration is available in a "
"folder that is shared between the host and guest operating systems. Look in "
"your Vagrant install directory for the :file:`buildout` folder. You may edit"
" configuration files using your favorite text editor in the host operating "
"system, then switch into your virtual machine to run buildout on the guest "
"operating system."
msgstr ""

#: ../mastering_plone/add-ons.rst:99
msgid ""
"In the section ``[instance]`` there is a variable called ``eggs``, which has"
" a list of *eggs* as a value. For example::"
msgstr ""

#: ../mastering_plone/add-ons.rst:106
msgid ""
"You add an egg by adding a new line containing the package name to the "
"configuration. You must write the egg name indented: this way, buildout "
"understands that the current line is part of the last variable and not a new"
" variable."
msgstr ""

#: ../mastering_plone/add-ons.rst:109
msgid ""
"If you add new add-ons here you will have to run buildout and restart the "
"site:"
msgstr ""
"Si agregas nuevos complementos tendrás que ejecutar buildout y reiniciar el "
"sitio:"

#: ../mastering_plone/add-ons.rst:116
msgid "Now the code is available from within Plone."
msgstr "Ahora el código está disponible desde dentro de Plone."

#: ../mastering_plone/add-ons.rst:119
msgid "Installing add-ons in your Plone Site"
msgstr "Instalando complementos en su sitio de Plone"

#: ../mastering_plone/add-ons.rst:121
msgid ""
"Your Plone site has not yet been told to use the add-on. For this, you have "
"to activate the add-on in your Plone Site."
msgstr ""

#: ../mastering_plone/add-ons.rst:125
msgid ""
"Why the extra step of activating the add-on package? You may have multiple "
"Plone sites in a single Zope installation. It's common to want to activate "
"some add-ons in one site, others in another."
msgstr ""

#: ../mastering_plone/add-ons.rst:127
msgid ""
"In your browser, go to Site Setup (shortcut: add ``/@@overview-"
"controlpanel`` to the Plone site URL), and open the ``Add-ons`` Panel. You "
"will see that you can install the add-ons there."
msgstr ""
"En el navegador, vaya a Configuración del sitio (atajo: añadir en su "
"dirección URL ``/@@overview-controlpanel`` del sitio Plone), y abrir el "
"panel ``Complementos``. Usted verá que puede instalar los complementos allí."

#: ../mastering_plone/add-ons.rst:129
msgid "Install **PloneFormGen** now."
msgstr ""

#: ../mastering_plone/add-ons.rst:131
msgid ""
"This is what happens: The GenericSetup profile of the product gets loaded. "
"This does things like:"
msgstr ""
"Esto es lo que sucede: el perfil GenericSetup del producto se ha cargado. "
"esto hace cosas como:"

#: ../mastering_plone/add-ons.rst:133
msgid "Configuring new actions"
msgstr ""

#: ../mastering_plone/add-ons.rst:134
msgid "Registering new contenttypes"
msgstr ""

#: ../mastering_plone/add-ons.rst:135
msgid "Registering css and js files"
msgstr ""

#: ../mastering_plone/add-ons.rst:136
msgid "Creating some content/configuration objects in your Plone site."
msgstr ""

#: ../mastering_plone/add-ons.rst:138
msgid "Let's have a look at what we just installed."
msgstr "Miremos lo que hemos instalado."

#: ../mastering_plone/add-ons.rst:144
msgid "PloneFormGen"
msgstr "PloneFormGen"

#: ../mastering_plone/add-ons.rst:146
msgid "There are many ways to create forms in Plone:"
msgstr "Hay muchas formas de crear formularios en Plone:"

#: ../mastering_plone/add-ons.rst:148
msgid "Pure: html and python in a view"
msgstr ""

#: ../mastering_plone/add-ons.rst:149
msgid "Framework: z3c.form, formlib, deform"
msgstr ""

#: ../mastering_plone/add-ons.rst:150
msgid "TTW: Products.PloneFormGen"
msgstr "A través de la Web: Products.PloneFormGen"

#: ../mastering_plone/add-ons.rst:152
msgid ""
"The basic concept of PloneFormGen is that you build a form by adding a Form "
"Folder, to which you add form fields as content items. Fields are added, "
"deleted, edited and moved just as with any other type of content. Form "
"submissions may be automatically emailed and/or saved for download. There "
"are many add-ons to PloneFormGen that provide additional field types and "
"actions."
msgstr ""

#: ../mastering_plone/add-ons.rst:154
msgid "Let's build a registration form:"
msgstr "Vamos a construir un formulario de registro:"

#: ../mastering_plone/add-ons.rst:156
msgid ""
"Activate PloneFormGen for this site via the add-on configuration panel in "
"site setup"
msgstr ""
"Activar PloneFormGen para este sitio a través del panel de configuración "
"Complementos en la Configuración del sitio."

#: ../mastering_plone/add-ons.rst:157
msgid ""
"Add an object of the new type 'Form Folder' in the site root. Call it "
"\"Registration\""
msgstr ""
"Agrega un objeto del nuevo tipo 'Form Folder' en el raíz del sitio llamado "
"\"Registro\""

#: ../mastering_plone/add-ons.rst:158
msgid "Save and view the result, a simple contact form that we may customize"
msgstr ""
"Guarde y ver el resultado, un sencillo formulario de contacto el cual puede "
"personalizar"

#: ../mastering_plone/add-ons.rst:159
msgid "Click in QuickEdit"
msgstr "Haga clic en QuickEdit (para la edición rápida)"

#: ../mastering_plone/add-ons.rst:160
msgid "Remove field \"Subject\""
msgstr "Remueva el campo \"Subject\""

#: ../mastering_plone/add-ons.rst:161
msgid "Add fields for food preference and shirt size"
msgstr "Añadir campos para preferencia de alimentos y el tamaño de la camisa"

#: ../mastering_plone/add-ons.rst:162
msgid "Add a DataSave Adapter"
msgstr "Agregar un adaptador DataSave"

#: ../mastering_plone/add-ons.rst:163
msgid "Customize the mailer"
msgstr "Personalizar el script de envio de correo"

#: ../mastering_plone/add-ons.rst:167
msgid ""
"Need CAPTCHAs? Add the :py:mod:`collective.recaptcha` package to your "
"buildout and PFG will have a CAPTCHA field."
msgstr ""

#: ../mastering_plone/add-ons.rst:169
msgid ""
"Need encryption? Add GPG encryption to your system, add a GPG configuration "
"for the Plone daemon user that includes a public key for the mail targets, "
"and you'll be able to encrypt email before sending."
msgstr ""

#: ../mastering_plone/add-ons.rst:171
msgid ""
"Think PFG is too complicated for your site editors? Administrators (and "
"we're logged in as an administrator) see lots of more complex options that "
"are invisible to site editors."
msgstr ""
"¿Piense PoneFormGen es demasiado complicado para sus editores del sitio? Los"
" administradores (y estamos registrados como administrador) ver un montón de"
" opciones más complejas que son invisibles para editores del sitio."

#: ../mastering_plone/add-ons.rst:173
msgid ""
"By the way, while PloneFormGen is good at what it does, it is not a good "
"model for designing your own extensions. It was created before the Zope "
"Component Architecture became widely used. The authors would write it much "
"differently if they were starting from scratch."
msgstr ""

#: ../mastering_plone/add-ons.rst:177
msgid ""
"`collective.easyform <https://pypi.python.org/pypi/collective.easyform>`_ is"
" a alternative form-generator that uses dexterity. It is still under "
"development."
msgstr ""

#: ../mastering_plone/add-ons.rst:183
msgid "Add Photo Gallery with :py:mod:`collective.plonetruegallery`"
msgstr ""

#: ../mastering_plone/add-ons.rst:185
msgid ""
"To advertise the conference we want to show some photos showing past "
"conferences and the city where the conference is taking place."
msgstr ""

#: ../mastering_plone/add-ons.rst:187
msgid ""
"Instead of creating new contenttypes for galleries, it integrates with the "
"Plone functionality to choose different views for folderish contenttypes."
msgstr ""

#: ../mastering_plone/add-ons.rst:189
msgid "https://pypi.python.org/pypi/collective.plonetruegallery"
msgstr "https://pypi.python.org/pypi/collective.plonetruegallery"

#: ../mastering_plone/add-ons.rst:191
msgid "Activate the add-on"
msgstr ""

#: ../mastering_plone/add-ons.rst:192
msgid ""
"Enable the behavior ``Plone True Gallery`` on the type ``Folder``: "
"http://localhost:8080/Plone/dexterity-types/Folder/@@behaviors"
msgstr ""
"Habilite el comportamiento \"Plone True Gallery\" en el tipo \"Folder\": "
"http://localhost:8080/Plone/dexterity-types/Folder/@@behaviors"

#: ../mastering_plone/add-ons.rst:193
msgid "Add a folder ``/the-event/location``"
msgstr ""

#: ../mastering_plone/add-ons.rst:194
msgid "Upload some photos from lorempixel.com"
msgstr ""

#: ../mastering_plone/add-ons.rst:195
msgid "Enable the view ``galleryview``"
msgstr "Habilite la vista ``galleryview``"

#: ../mastering_plone/add-ons.rst:201
msgid "Internationalization"
msgstr "Internacionalización"

#: ../mastering_plone/add-ons.rst:203
msgid "Plone can run the same site in many different languages."
msgstr "Plone puede ejecutar el mismo sitio en múltiples lenguajes."

#: ../mastering_plone/add-ons.rst:205
msgid ""
"We're not doing this with the conference site since the *lingua franca* of "
"the Plone community is English."
msgstr ""

#: ../mastering_plone/add-ons.rst:207
msgid ""
"We would use the built-in addon "
"https://pypi.python.org/pypi/plone.app.multilingual for this."
msgstr ""

#: ../mastering_plone/add-ons.rst:209
msgid ""
"Building a multi-lingual site requires activating "
":py:mod:`plone.app.multilingual`, but no add-on is necessary to build a site"
" in only one language. Just select a different site language when creating a"
" Plone site, and all text in the user-interface will be switched to that "
"language."
msgstr ""

#: ../mastering_plone/add-ons.rst:215
#: ../mastering_plone/configuring_customizing.rst:304
#: ../mastering_plone/dexterity_2.rst:566 ../mastering_plone/views_3.rst:471
#: ../mastering_plone/zpt_2.rst:441
msgid "Summary"
msgstr "Resumen"

#: ../mastering_plone/add-ons.rst:217
msgid ""
"We are now able to customize and extend many parts of our website. We can "
"even install extensions that add new functionality."
msgstr ""
"Ahora somos capaces de personalizar y ampliar muchas partes de nuestro sitio"
" web. Incluso podemos instalar extensiones que añaden nuevas "
"funcionalidades."

#: ../mastering_plone/add-ons.rst:219
msgid "But:"
msgstr "Pero:"

#: ../mastering_plone/add-ons.rst:221
msgid "Can we submit talks now?"
msgstr "¿Podemos enviar Charlas al jurado evaluador ahora?"

#: ../mastering_plone/add-ons.rst:222
msgid "Can we create lists with the most important properties of each talk?"
msgstr ""

#: ../mastering_plone/add-ons.rst:223
msgid "Can we allow a jury to vote on talks?"
msgstr "¿Podemos permitir a un miembro del jurado votar en las Charlas?"

#: ../mastering_plone/add-ons.rst:225
msgid ""
"We often have to work with structured data. Up to a degree we can do all "
"this TTW, but at some point we run into barriers. In the next part of the "
"training, we'll teach you how to break through these barriers."
msgstr ""

#: ../mastering_plone/anatomy.rst:4
msgid "The Anatomy of Plone"
msgstr "La Anatomía de Plone"

#: ../mastering_plone/anatomy.rst:6 ../mastering_plone/api.rst:6
#: ../mastering_plone/behaviors_1.rst:14 ../mastering_plone/behaviors_2.rst:6
#: ../mastering_plone/buildout_1.rst:6 ../mastering_plone/dexterity.rst:6
#: ../mastering_plone/eggs1.rst:17 ../mastering_plone/eggs2.rst:8
#: ../mastering_plone/embed.rst:6 ../mastering_plone/export_code.rst:16
#: ../mastering_plone/extending.rst:6 ../mastering_plone/ide.rst:6
#: ../mastering_plone/registry.rst:15 ../mastering_plone/reusable.rst:6
#: ../mastering_plone/viewlets_1.rst:15 ../mastering_plone/viewlets_2.rst:12
#: ../mastering_plone/views_1.rst:15 ../mastering_plone/views_2.rst:14
#: ../mastering_plone/views_3.rst:14 ../mastering_plone/zpt.rst:15
#: ../mastering_plone/zpt_2.rst:14
msgid "In this part you will:"
msgstr ""

#: ../mastering_plone/anatomy.rst:8
msgid "Learn a bit about the history of Plone."
msgstr ""

#: ../mastering_plone/anatomy.rst:10 ../mastering_plone/api.rst:11
#: ../mastering_plone/behaviors_1.rst:18 ../mastering_plone/behaviors_2.rst:10
#: ../mastering_plone/buildout_1.rst:10 ../mastering_plone/dexterity.rst:11
#: ../mastering_plone/eggs1.rst:23 ../mastering_plone/eggs2.rst:12
#: ../mastering_plone/embed.rst:10 ../mastering_plone/export_code.rst:22
#: ../mastering_plone/extending.rst:10 ../mastering_plone/ide.rst:10
#: ../mastering_plone/registry.rst:21 ../mastering_plone/reusable.rst:10
#: ../mastering_plone/testing.rst:19 ../mastering_plone/viewlets_1.rst:19
#: ../mastering_plone/viewlets_2.rst:18 ../mastering_plone/views_1.rst:21
#: ../mastering_plone/views_2.rst:20 ../mastering_plone/views_3.rst:20
#: ../mastering_plone/zpt.rst:20 ../mastering_plone/zpt_2.rst:18
msgid "Topics covered:"
msgstr ""

#: ../mastering_plone/anatomy.rst:12
msgid "CMF"
msgstr "CMF"

#: ../mastering_plone/anatomy.rst:13
msgid "Zope"
msgstr ""

#: ../mastering_plone/anatomy.rst:14 ../mastering_plone/anatomy.rst:121
msgid "Pyramid"
msgstr "Pyramid"

#: ../mastering_plone/anatomy.rst:15
msgid "Bluebream"
msgstr ""

#: ../mastering_plone/anatomy.rst:18
msgid "Python, Zope, CMF, Plone ... -- how does all that fit together?"
msgstr ""

#: ../mastering_plone/anatomy.rst:24
msgid "Zope2"
msgstr "Zope2"

#: ../mastering_plone/anatomy.rst:26
msgid "Zope is a web application framework that Plone runs on top of."
msgstr ""
"Zope es un Framework de aplicación Web el cual Plone corre encima de él."

#: ../mastering_plone/anatomy.rst:27
msgid ""
"The majority of Zope's code is written in Python, like everything else "
"written on top of it."
msgstr ""

#: ../mastering_plone/anatomy.rst:28
msgid "It serves applications that communicate with users via http."
msgstr "Ese sirve aplicaciones que comunica con usuarios vía HTTP."

#: ../mastering_plone/anatomy.rst:32
msgid ""
"Before Zope, there usually was an Apache server that would call a script and"
" give the request as an input. The script would then just print HTML to the "
"standard output. Apache returned that to the user. Opening database "
"connections, checking permission constraints, generating valid HTML, "
"configuring caching, interpreting form data and everything else: you have to"
" do it on your own. When the second request comes in, you have to do "
"everything again."
msgstr ""

#: ../mastering_plone/anatomy.rst:38
msgid ""
"Jim Fulton thought that this was slightly tedious. So he wrote code to "
"handle requests. He believed that site content is object-oriented and that "
"the URL should somehow point directly into the object hierarchy, so he wrote"
" an object-oriented database, called `ZODB "
"<http://www.zodb.org/en/latest/>`_."
msgstr ""
"Jim Fulton pensaba que esto era un poco tedioso. Así que escribió el código "
"para manejar las peticiones. Él creía que el contenido del sitio es "
"orientado a objetos y que la URL de alguna manera debe apuntar directamente "
"a la jerarquía de objetos, por lo que escribió una base de datos orientada a"
" objetos, llamada `ZODB <http://www.zodb.org/en/latest/>`_."

#: ../mastering_plone/anatomy.rst:42
msgid ""
"The ZODB is a fully `ACID <https://en.wikipedia.org/wiki/ACID>`_ compliant "
"database with automatic transactional integrity. It automatically maps "
"traversal in the object hierarchy to URL paths, so there is no need to "
"\"wire\" objects or database nodes to URLs. This gives Plone its easy SEO-"
"friendly URLs."
msgstr ""

#: ../mastering_plone/anatomy.rst:44
msgid ""
"Traversal through the object database is security checked at every point via"
" very fine grained access-control lists."
msgstr ""
"Transversal a través de la base de datos de objeto tiene la seguridad "
"comprobada en todos los puntos a través de listas de control de acceso muy "
"detallado."

#: ../mastering_plone/anatomy.rst:46
msgid "One missing piece is important and complicated: ``Acquisition``."
msgstr ""
"Una pieza que falta el cual es importante y a la ves complicada: "
"``Acquisition``."

#: ../mastering_plone/anatomy.rst:48
msgid ""
"Acquisition is a kind of magic. Imagine a programming system where you do "
"not access the file system and where you do not need to import code. You "
"work with objects. An object can be a folder that contains more objects, an "
"HTML page, data, or another script. To access an object, you need to know "
"where the object is. Objects are found by paths that look like URLs, but "
"without the domain name. Now Acquisition allows you to write an incomplete "
"path. An incomplete path is a relative path, it does not explicitly state "
"that the path starts from the root, it starts relative to where the content "
"object is -- its context. If Zope cannot resolve the path to an object "
"relative to your code, it tries the same path in the containing folder. And "
"then the folder containing the folder."
msgstr ""

#: ../mastering_plone/anatomy.rst:50
msgid "This might sound weird, what do I gain with this?"
msgstr "Esto puede sonar extraño, ¿qué gano yo con esto?"

#: ../mastering_plone/anatomy.rst:52
msgid ""
"You can have different data or code depending on your :py:obj:`context`. "
"Imagine you want to have header images differing for each section of your "
"page, sometimes even differing for a specific subsection of your site. So "
"you define a path ``header_image`` and put a header image at the root of "
"your site. If you want a folder with a different header image, you put the "
"header image into this folder. Please take a minute to let this settle and "
"think about what this allows you to do."
msgstr ""

#: ../mastering_plone/anatomy.rst:57
msgid "contact forms with different e-mail addresses per section"
msgstr ""
"formularios de contacto con diferentes direcciones de correo electrónico por"
" sección."

#: ../mastering_plone/anatomy.rst:58
msgid "different CSS styles for different parts of your site"
msgstr "diferentes estilos CSS para diferentes partes de su sitio."

#: ../mastering_plone/anatomy.rst:59
msgid ""
"One site, multiple customers, everything looks different for each customer."
msgstr "Un sitio, varios clientes, todo se ve diferente para cada cliente."

#: ../mastering_plone/anatomy.rst:61
msgid ""
"As with all programming magic, acquisition exacts a price. Zope code must be"
" written carefully in order to avoid inheriting side effects via "
"acquisition. The Zope community expresses this with the Python (Monty) "
"maxim: Beware the `Spammish Acquisition`."
msgstr ""

#: ../mastering_plone/anatomy.rst:63
msgid "Basically this is Zope."
msgstr "Básicamente esto es Zope."

#: ../mastering_plone/anatomy.rst:67
msgid "http://www.zope.org/the-world-of-zope"
msgstr ""

#: ../mastering_plone/anatomy.rst:68
msgid "http://docs.zope.org/zope2/zope2book/"
msgstr ""

#: ../mastering_plone/anatomy.rst:74
msgid "Content Management Framework"
msgstr "Content Management Framework"

#: ../mastering_plone/anatomy.rst:76
msgid ""
"`CMF (Content Management Framework) "
"<http://old.zope.org/Products/CMF/index.html/>`_ is add-on for Zope to build"
" Content Management Systems (like Plone)."
msgstr ""
"`CMF (Content Management Framework) "
"<http://old.zope.org/Products/CMF/index.html/>`_ es un complemento para Zope"
" para construir sistemas de gestión de contenido (como Plone)."

#: ../mastering_plone/anatomy.rst:81
msgid ""
"After many websites were successfully created using Zope, a number of "
"recurring requirements emerged, and some Zope developers started to write "
"CMF, the Content Management Framework."
msgstr ""

#: ../mastering_plone/anatomy.rst:83
msgid ""
"The CMF offers many services that help you to write a CMS based on Zope. "
"Most objects you see in the ZMI are part of the CMF somehow."
msgstr ""
"La CMF ofrece muchos servicios que le ayudan a escribir un CMS basado en "
"Zope. La mayoría de los objetos que ve en la ZMI son parte de la CMF de "
"alguna manera."

#: ../mastering_plone/anatomy.rst:86
msgid ""
"The developers behind CMF do not see CMF as a ready to use CMS. They created"
" a CMS Site which was usable out of the box, but made it deliberately ugly, "
"because you have to customize it anyway."
msgstr ""
"Los desarrolladores detrás CMF no ven CMF como un producto listo para usar "
"CMS. Ellos crearon un sitio CMS que era utilizable fuera de la caja, pero "
"dejó deliberadamente feo, porque usted tiene que personalizar todas formas."

#: ../mastering_plone/anatomy.rst:88
msgid ""
"We are still in prehistoric times here. There were no eggs (Python "
"packages), Zope did not consist of 100 independent software components but "
"was one big file set."
msgstr ""
"Todavía estamos en los tiempo de la prehistoria aquí. En ese entonces no "
"existían los paquetes eggs (paquetes Python), Zope no consistía en más de "
"100 componentes de software independientes, pero era una gran conjunto."

#: ../mastering_plone/anatomy.rst:90
msgid ""
"Many parts of Plone are derived from the CMF, but it's a mixed heritage. The"
" CMF is an independent software project, and has often moved more slowly "
"than Plone. Plone is gradually eliminating dependence on most parts of the "
"CMF."
msgstr ""
"Muchas partes de Plone se derivan de la CMF, pero es una herencia mixta. El "
"CMF es un proyecto independiente de software, y se ha movido a menudo más "
"lentamente que Plone. Plone está eliminando gradualmente la dependencia de "
"la mayoría de las partes de la CMF."

#: ../mastering_plone/anatomy.rst:95
msgid "Zope Toolkit / Zope3"
msgstr "Zope Toolkit / Zope3"

#: ../mastering_plone/anatomy.rst:97
msgid ""
"Zope 3 was originally intended as a rewrite of Zope from the ground up."
msgstr ""

#: ../mastering_plone/anatomy.rst:98
msgid ""
"Plone uses parts of it provided by the `Zope Toolkit (ZTK) "
"<https://zopetoolkit.readthedocs.io/en/latest/>`_."
msgstr ""
"Plone usa partes provistas por el `Zope Toolkit (ZTK) "
"<https://zopetoolkit.readthedocs.io/en/latest/>`_."

#: ../mastering_plone/anatomy.rst:102
msgid ""
"Unfortunately, only few people started to use Zope 3, nobody migrated to "
"Zope 3 because nobody knew how."
msgstr ""

#: ../mastering_plone/anatomy.rst:104
msgid ""
"But there were many useful things in Zope 3 that people wanted to use in "
"Zope 2, thus the Zope community adapted some parts so that they could use "
"them in Zope 2. Sometimes, a wrapper of some sort was necessary, these "
"usually are being provided by packages from the :py:mod:`five` namespace.  "
"(Zope 2 + Zope 3 = \"five\")"
msgstr ""

#: ../mastering_plone/anatomy.rst:107
msgid ""
"To make the history complete, since people stayed on Zope 2, the Zope "
"community renamed Zope 3 to Bluebream, so that people would not think that "
"Zope 3 was the future. It wasn't anymore."
msgstr ""

#: ../mastering_plone/anatomy.rst:113
msgid "Zope Component Architecture (ZCA)"
msgstr "Zope Component Architecture (ZCA)"

#: ../mastering_plone/anatomy.rst:115
msgid ""
"The `Zope Component Architecture <http://muthukadan.net/docs/zca.html>`_, "
"which was developed as part of Zope 3, is a system which allows for "
"component pluggability and complex dispatching based on objects which "
"implement an interface (a description of a functionality). It is a subset of"
" the ZTK but can be used standalone. Plone makes extensive use of the ZCA in"
" its codebase."
msgstr ""

#: ../mastering_plone/anatomy.rst:123
msgid ""
"`Pyramid <http://docs.pylonsproject.org/en/latest/docs/pyramid.html>`_ is a "
"Python web application development framework that is often seen as the "
"successor to Zope."
msgstr ""
"`Pyramid <http://docs.pylonsproject.org/en/latest/docs/pyramid.html>`_ es un"
" framework de desarrollo de aplicaciones Web en Python que es a veces visto "
"como el sucesor natural de Zope."

#: ../mastering_plone/anatomy.rst:124
msgid ""
"It does less than Zope, is very pluggable and `uses the Zope Component "
"Architecture "
"<http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/zca.html>`_ "
"“under the hood” to perform view dispatching and other application "
"configuration tasks."
msgstr ""

#: ../mastering_plone/anatomy.rst:128
msgid ""
"You can use it with a relational Database instead of ZODB if you want, or "
"you can use both databases or none of them."
msgstr ""

#: ../mastering_plone/anatomy.rst:130
msgid ""
"Apart from the fact that Pyramid was not forced to support all legacy "
"functionality, which can make things more complicated, the original "
"developer had a very different stance on how software must be developed. "
"While both Zope and Pyramid have good test coverage, Pyramid has good "
"documentation; something that was very neglected in Zope, and at times in "
"Plone too."
msgstr ""
"Aparte del hecho de que Pyramid no se vio obligado a soportar todas las "
"funcionalidades legado, que puede hacer las cosas más complicadas, el "
"desarrollador original tenía una postura muy diferente sobre cómo el "
"software debe ser desarrollado. Mientras tanto Zope y Pyramid tienen una "
"buena de la pruebas de software, Pyramid tiene una buena documentación; algo"
" que estaba muy descuidado en Zope, y en ocasiones en Plone también."

#: ../mastering_plone/anatomy.rst:132
msgid ""
"Whether the component architecture is better in Pyramid or not we don't dare"
" say, but we like it more. But maybe it's just because it was documented."
msgstr ""

#: ../mastering_plone/anatomy.rst:136
msgid "http://docs.pylonsproject.org/projects/pyramid/en/latest/index.html"
msgstr ""

#: ../mastering_plone/anatomy.rst:139 ../mastering_plone/dexterity_2.rst:337
#: ../mastering_plone/restapi.rst:53 ../mastering_plone/restapi.rst:460
#: ../mastering_plone/views_2.rst:341 ../mastering_plone/views_3.rst:388
msgid "Exercise"
msgstr "Ejercicio"

#: ../mastering_plone/anatomy.rst:141
msgid ""
"Definition of the PYTHON_PATH makes up most of the `bin/instance` script's "
"code. Look at the package list (and maybe also the links provided in the "
"respective sections of this chapter). Try to identify 3 packages that belong"
" to the original Zope2, 3 packages from CMF, 3 Zope Toolkit packages and 3 "
"packages from the ZCA."
msgstr ""

#: ../mastering_plone/anatomy.rst:146
msgid "Zope2: Zope2, ZODB, Acquistion, AccessControl, ..."
msgstr ""

#: ../mastering_plone/anatomy.rst:147
msgid ""
"CMF: Products.CMFCore, Products.CMFUid, Products.CMFEditions, ... "
"Products.DCWorkflow doesn't fit the pattern but is a very important part of "
"the CMF"
msgstr ""

#: ../mastering_plone/anatomy.rst:148
msgid ""
"ZTK: zope.browser, zope.container, zope.pagetemplate, ... You can find a "
"complete list `<here https://zopetoolkit.readthedocs.io/en/latest/releases/packages-"
"trunk.html>`_"
msgstr ""

#: ../mastering_plone/anatomy.rst:149
msgid "ZCA: zope.component, zope.interface, zope.event"
msgstr ""

#: ../mastering_plone/api.rst:4
msgid "Programming Plone"
msgstr "Programando en Plone"

#: ../mastering_plone/api.rst:8
msgid "Learn about the right ways to do something in code in Plone."
msgstr ""

#: ../mastering_plone/api.rst:9
msgid "Learn to debug"
msgstr ""

#: ../mastering_plone/api.rst:13 ../mastering_plone/api.rst:70
msgid "Debugging"
msgstr "Depurando"

#: ../mastering_plone/api.rst:14
msgid "Plone API"
msgstr ""

#: ../mastering_plone/api.rst:15
msgid "Portal tools"
msgstr ""

#: ../mastering_plone/api.rst:21 ../mastering_plone/views_3.rst:23
msgid "plone.api"
msgstr "plone.api"

#: ../mastering_plone/api.rst:23
msgid ""
"The most important tool nowadays for plone developers is the add-on "
"`plone.api <http://docs.plone.org/develop/plone.api/docs/index.html>`_ that "
"covers 20% of the tasks any Plone developer does 80% of the time. If you are"
" not sure how to handle a certain task be sure to first check if plone.api "
"has a solution for you."
msgstr ""

#: ../mastering_plone/api.rst:25
msgid "The api is divided in five sections. Here is one example from each:"
msgstr "El API esta divido en 5 secciones. Este es un ejemplo de cada uno:"

#: ../mastering_plone/api.rst:27
msgid ""
"`Content:` `Create content "
"<http://docs.plone.org/develop/plone.api/docs/content.html#create-content>`_"
msgstr ""

#: ../mastering_plone/api.rst:28
msgid ""
"`Portal:` `Send E-Mail "
"<http://docs.plone.org/develop/plone.api/docs/portal.html#send-e-mail>`_"
msgstr ""

#: ../mastering_plone/api.rst:29
msgid ""
"`Groups:` `Grant roles to group "
"<http://docs.plone.org/develop/plone.api/docs/group.html#grant-roles-to-"
"group>`_"
msgstr ""

#: ../mastering_plone/api.rst:30
msgid ""
"`Users:` `Get user roles "
"<http://docs.plone.org/develop/plone.api/docs/user.html#get-user-roles>`_"
msgstr ""

#: ../mastering_plone/api.rst:31
msgid ""
"`Environment:` `Switch roles inside a block "
"<http://docs.plone.org/develop/plone.api/docs/env.html#switch-roles-"
"inside-a-block>`_"
msgstr ""

#: ../mastering_plone/api.rst:33
msgid ""
"plone.api is not yet part of the Plone core. Therefore you will not see any "
"use of plone.api in Plone itself. It will be part of Plone 5."
msgstr ""

#: ../mastering_plone/api.rst:35
msgid ""
"In existing code you'll often encounter methods that don't mean anything to "
"you. You'll have to use the source to find out  what they do."
msgstr ""

#: ../mastering_plone/api.rst:37
msgid "Some of these methods will be replaced by plone.api in the future:"
msgstr ""
"Algunos de estos métodos serán reemplazados por ``plone.api`` en el futuro:"

#: ../mastering_plone/api.rst:39
msgid ""
":py:meth:`Products.CMFCore.utils.getToolByName` -> "
":py:meth:`api.portal.get_tool`"
msgstr ""

#: ../mastering_plone/api.rst:40
msgid ""
":py:meth:`zope.component.getMultiAdapter` -> :py:meth:`api.content.get_view`"
msgstr ""

#: ../mastering_plone/api.rst:46
msgid "portal-tools"
msgstr "Herramientas del portal"

#: ../mastering_plone/api.rst:48
msgid ""
"Some parts of Plone are very complex modules in themselves (e.g. the "
"versioning machinery of :py:mod:`Products.CMFEditions`). Some of them have "
"an API that you will have to learn sooner or later."
msgstr ""

#: ../mastering_plone/api.rst:51
msgid "Here are a few examples:"
msgstr "Aquí tienes unos ejemplos:"

#: ../mastering_plone/api.rst:56 ../mastering_plone/views_3.rst:24
msgid "portal_catalog"
msgstr "portal_catalog"

#: ../mastering_plone/api.rst:54
msgid ""
":py:meth:`unrestrictedSearchResults()` returns search results without "
"checking if the current user has the permission to access the objects."
msgstr ""

#: ../mastering_plone/api.rst:56
msgid ":py:meth:`uniqueValuesFor()` returns all entries in an index"
msgstr ""

#: ../mastering_plone/api.rst:59
msgid "portal_setup"
msgstr "portal_setup"

#: ../mastering_plone/api.rst:59
msgid ""
":py:meth:`runAllExportSteps()` generates a tarball containing artifacts from"
" all export steps."
msgstr ""

#: ../mastering_plone/api.rst:62
msgid "portal_quickinstaller"
msgstr "portal_quickinstaller"

#: ../mastering_plone/api.rst:62
msgid ":py:meth:`isProductInstalled()` checks if a product is installed."
msgstr ""

#: ../mastering_plone/api.rst:64
msgid ""
"Usually the best way to learn about the api of a tool is to look in the "
":file:`interfaces.py` in the respective package and read the docstrings."
msgstr ""

#: ../mastering_plone/api.rst:72
msgid ""
"Here are some tools and techniques we often use when developing and "
"debugging. We use some of them in various situations during the training."
msgstr ""
"Aquí hay algunas herramientas y técnicas que usamos frecuentemente cuando "
"desarrollamos y depuramos. Usamos algunas de ellas en varias situaciones "
"durante el entrenamiento."

#: ../mastering_plone/api.rst:75
msgid "tracebacks and the log"
msgstr "Rastreos y el registro"

#: ../mastering_plone/api.rst:75
msgid ""
"The log (and the console when running in foreground) collects all log "
"messages Plone prints. When an exception occurs Plone throws a traceback. "
"Most of the time the traceback is everything you need to find out what is "
"going wrong. Also adding your own information to the log is very simple."
msgstr ""

#: ../mastering_plone/api.rst:80
msgid "pdb"
msgstr "pdb"

#: ../mastering_plone/api.rst:78
msgid ""
"The python debugger pdb is the single most important tool for us when "
"programming. Just add ``import pdb; pdb.set_trace()`` in your code and debug"
" away!"
msgstr ""
"El depurador de Python pdb, es la herramienta simple más importante para "
"nosotros cuando programemos. ¡Solo agrega ``import pdb; pdb.set_trace()`` en"
" tu código y empieza a depurar!"

#: ../mastering_plone/api.rst:80
msgid ""
"Since Plone 5 you can even add it to templates: add ``<?python import pdb; "
"pdb.set_trace() ?>`` to a template and you end up in a pdb shell on calling "
"the template. Look at the variable :py:obj:`econtext` to see what might have"
" gone wrong."
msgstr ""

#: ../mastering_plone/api.rst:83
msgid "ipdb"
msgstr "ipdb"

#: ../mastering_plone/api.rst:83
msgid ""
"Enhanced pdb with the power of IPython, e.g. tab completion, syntax "
"highlighting, better tracebacks and introspection. It also works nicely with"
" :py:mod:`Products.PDBDebugMode`."
msgstr ""

#: ../mastering_plone/api.rst:90
msgid "Products.PDBDebugMode"
msgstr "Products.PDBDebugMode"

#: ../mastering_plone/api.rst:86
msgid "An add-on that has two killer features."
msgstr ""

#: ../mastering_plone/api.rst:88
msgid ""
"**Post-mortem debugging**: throws you in a pdb whenever an exception occurs."
" This way you can find out what is going wrong."
msgstr ""

#: ../mastering_plone/api.rst:90
msgid ""
"**pdb view**: simply adding ``/pdb`` to a url drops you in a pdb session "
"with the current context as :py:obj:`self.context`. From there you can do "
"just about anything."
msgstr ""

#: ../mastering_plone/api.rst:93
msgid "Debug mode"
msgstr ""

#: ../mastering_plone/api.rst:93
msgid ""
"When starting Plone using :command:`./bin/instance debug` you'll end up in "
"an interactive debugger."
msgstr ""

#: ../mastering_plone/api.rst:96
msgid "plone.app.debugtoolbar"
msgstr "plone.app.debugtoolbar"

#: ../mastering_plone/api.rst:96
msgid ""
"An add-on that allows you to inspect nearly everything. It even has an "
"interactive console, a tester for TALES-expressions and includs a reload-"
"feature like :py:mod:`plone.reload`."
msgstr ""

#: ../mastering_plone/api.rst:99
msgid "plone.reload"
msgstr "plone.reload"

#: ../mastering_plone/api.rst:99
msgid ""
"An add-on that allows to reload code that you changed without restarting the"
" site. It is also used by :py:mod:`plone.app.debugtoolbar`."
msgstr ""

#: ../mastering_plone/api.rst:102
msgid "Products.PrintingMailHost"
msgstr "Products.PrintingMailHost"

#: ../mastering_plone/api.rst:102
msgid ""
"An add-on that prevents Plone from sending mails. Instead, they are logged."
msgstr ""

#: ../mastering_plone/api.rst:105
msgid "Products.enablesettrace or Products.Ienablesettrace"
msgstr ""

#: ../mastering_plone/api.rst:105
msgid ""
"Add-on that allows to use pdb and ipdb in Python skin scripts. Very useful "
"when debugging legacy code."
msgstr ""

#: ../mastering_plone/api.rst:108
msgid "``verbose-security = on``"
msgstr "``verbose-security = on``"

#: ../mastering_plone/api.rst:108
msgid ""
"An option for the recipe :py:mod:`plone.recipe.zope2instance` that logs the "
"detailed reasons why a user might not be authorized to see something."
msgstr ""

#: ../mastering_plone/api.rst:111
msgid ":command:`./bin/buildout annotate`"
msgstr ""

#: ../mastering_plone/api.rst:111
msgid ""
"An option when running buildout that logs all the pulled packages and "
"versions."
msgstr ""

#: ../mastering_plone/api.rst:115
msgid "Sentry"
msgstr "Sentry"

#: ../mastering_plone/api.rst:114
msgid ""
"`Sentry <https://github.com/getsentry/sentry>`_ is an error logging "
"application you can host yourself. It aggregates tracebacks from many "
"sources and (here comes the killer feature) even the values of variables in "
"the traceback. We use it in all our production sites."
msgstr ""

#: ../mastering_plone/api.rst:122
msgid "zopepy"
msgstr "zopepy"

#: ../mastering_plone/api.rst:118
msgid ""
"Buildout can create a python shell for you that has all the packages from "
"your Plone site in its python path. Add the part like this::"
msgstr ""

#: ../mastering_plone/behaviors_1.rst:4 ../mastering_plone/behaviors_1.rst:20
msgid "Behaviors"
msgstr "Comportamientos"

#: ../mastering_plone/behaviors_1.rst:0 ../mastering_plone/dexterity_2.rst:0
#: ../mastering_plone/dexterity_3.rst:0 ../mastering_plone/eggs1.rst:0
#: ../mastering_plone/embed.rst:0 ../mastering_plone/events.rst:0
#: ../mastering_plone/export_code.rst:0 ../mastering_plone/frontpage.rst:0
#: ../mastering_plone/registry.rst:0 ../mastering_plone/resources.rst:0
#: ../mastering_plone/restapi.rst:0 ../mastering_plone/testing.rst:0
#: ../mastering_plone/user_generated_content.rst:0
#: ../mastering_plone/viewlets_1.rst:0 ../mastering_plone/views_1.rst:0
#: ../mastering_plone/views_2.rst:0 ../mastering_plone/views_3.rst:0
#: ../mastering_plone/zpt.rst:0 ../mastering_plone/zpt_2.rst:0
msgid "Get the code!"
msgstr "¡Obtén el código!"

#: ../mastering_plone/behaviors_1.rst:8 ../mastering_plone/dexterity_2.rst:8
#: ../mastering_plone/dexterity_3.rst:8 ../mastering_plone/eggs1.rst:8
#: ../mastering_plone/events.rst:8 ../mastering_plone/export_code.rst:9
#: ../mastering_plone/frontpage.rst:8 ../mastering_plone/registry.rst:8
#: ../mastering_plone/resources.rst:8 ../mastering_plone/restapi.rst:6
#: ../mastering_plone/testing.rst:8
#: ../mastering_plone/user_generated_content.rst:8
#: ../mastering_plone/viewlets_1.rst:8 ../mastering_plone/views_1.rst:8
#: ../mastering_plone/views_2.rst:8 ../mastering_plone/views_3.rst:8
#: ../mastering_plone/zpt.rst:8 ../mastering_plone/zpt_2.rst:8
msgid "Get the code for this chapter (:doc:`More info <code>`):"
msgstr ""

#: ../mastering_plone/behaviors_1.rst:16
msgid "Add another field to talks by using a behavior"
msgstr ""

#: ../mastering_plone/behaviors_1.rst:25
msgid ""
"You can extend the functionality of your dexterity object by writing an "
"adapter that adapts your dexterity object to add another feature or aspect."
msgstr ""
"Usted puede extender la funcionalidad de su objeto Dexterity solo creando un"
" adaptador que se adapte a su objeto Dexterity para agregar otra "
"característica o aspecto."

#: ../mastering_plone/behaviors_1.rst:27
msgid ""
"But if you want to use this adapter, you must somehow know that an object "
"implements that. Also, adding more fields to an object would not be easy "
"with such an approach."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:32
msgid "Dexterity Approach"
msgstr "Enfoque Dexterity"

#: ../mastering_plone/behaviors_1.rst:36
msgid ""
"Dexterity has a solution for it, with special adapters that are called and "
"registered by the name behavior."
msgstr ""
"Dexterity tiene una solución para ello, con adaptadores especiales los "
"cuales se llaman y registran por el nombre del comportamiento."

#: ../mastering_plone/behaviors_1.rst:38
msgid ""
"A behavior can be added to any content type through the web and at runtime."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:40
msgid ""
"All default views (e.g. the add- and edit-forms) know about the concept of "
"behaviors and when rendering forms, the views also check whether there are "
"behaviors referenced with the current context and if these behaviors have a "
"schema of their own, these fields get shown in addition."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:45
msgid "Names and Theory"
msgstr "Nombres y Teoria"

#: ../mastering_plone/behaviors_1.rst:49
msgid ""
"The name behavior is not a standard term in software development. But it is "
"a good idea to think of a behavior as an aspect. You are adding an aspect to"
" your content type and you want to write your aspect in such a way that it "
"works independently of the content type on which the aspect is applied. You "
"should not have dependencies to specific fields of your object or to other "
"behaviors."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:51
msgid ""
"Such an object allows you to apply the `Open/closed principle`_ to your "
"dexterity objects."
msgstr ""
"Como un objeto le permite aplicar el `principio Abierto/cerrado`_ a los "
"objetos de Dexterity."

#: ../mastering_plone/behaviors_1.rst:62
msgid "Practical example"
msgstr "Ejemplo práctico"

#: ../mastering_plone/behaviors_1.rst:66
msgid "So, let us write our own small behavior."
msgstr "Así que, vamos a escribir nuestro propio pequeño comportamiento."

#: ../mastering_plone/behaviors_1.rst:68
msgid ""
"In the future, we want our presentation to be represented in Lanyrd (a "
"Social Conference Directory - Lanyrd.com) too. For now we will just provide "
"a link so that visitors can collaborate easily with the Lanyrd site."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:70
msgid ""
"So for now, our behavior just adds a new field for storing the url to "
"Lanyrd."
msgstr ""
"Así que por ahora, nuestro comportamiento sólo añade un nuevo campo para "
"almacenar la dirección URL del servicio Lanyrd."

#: ../mastering_plone/behaviors_1.rst:72
msgid ""
"We want to keep a clean structure, so we create a :file:`behaviors` "
"directory first, and include it into the zcml declarations of our "
":file:`configure.zcml`."
msgstr ""
"Queremos mantener una estructura limpia, así que creamos primero un "
"directorio :file:`behaviors`, y luego lo incluimos dentro de las "
"declaraciones ZCML de nuestro archivo :file:`configure.zcml`."

#: ../mastering_plone/behaviors_1.rst:78
msgid ""
"Then, we add an empty :file:`behaviors/__init__.py` and a "
":file:`behaviors/configure.zcml` containing"
msgstr ""
"Entonces, agregamos un archivo vacio :file:`behaviors/__init__.py` y un "
"archivo  :file:`behaviors/configure.zcml` conteniendo el siguiente código:"

#: ../mastering_plone/behaviors_1.rst:0
msgid "Advanced reference"
msgstr "Referencia avanzada"

#: ../mastering_plone/behaviors_1.rst:84
msgid ""
"It can be a bit confusing when to use factories or marker interfaces and "
"when not to."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:86
msgid ""
"If you do not define a factory, your attributes will be stored directly on "
"the object. This can result in clashes with other behaviors."
msgstr ""
"Si usted no define un factory, sus atributos se almacenan directamente en el"
" objeto. Esto puede dar lugar a resultar en comportamientos no deseados."

#: ../mastering_plone/behaviors_1.rst:88
msgid ""
"You can avoid this by using the :py:class:`plone.behavior.AnnotationStorage`"
" factory. This stores your attributes in an :ref:`Annotation "
"<plone:annotations>`. But then you *must* use a marker interface if you want"
" to have custom viewlets, browser views or portlets."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:91
msgid ""
"Without it, you would have no interface against which you could register "
"your views."
msgstr ""
"Sin ella, no tendrías interfaz contra el cual podría registrar sus vistas."

#: ../mastering_plone/behaviors_1.rst:112
msgid "And a :file:`behaviors/social.py` containing:"
msgstr ""
"Y un archivo :file:`behaviors/social.py` conteniendo el siguiente código:"

#: ../mastering_plone/behaviors_1.rst:145
msgid "Let's go through this step by step."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:147
msgid ""
"We register a behavior in :ref:`behaviors/configure.zcml <social-behavior-"
"zcml-label>`. We do not say for which content type this behavior is valid. "
"You do this through the web or in the GenericSetup profile."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:148
msgid ""
"We create a marker interface in :ref:`behaviors/social.py <social-behavior-"
"python-label>` for our behavior and make it also a schema containing the "
"fields we want to declare. We could just define schema fields on a "
"zope.interface class, but we use an extended form from `plone.supermodel`_, "
"else we could not use the fieldset features."
msgstr ""

#: ../mastering_plone/behaviors_1.rst:150
msgid ""
"We also add a `fieldset`_ so that our fields are not mixed with the normal "
"fields of the object."
msgstr ""
"También añadimos un `fieldset`_ para que nuestros campos no se mezclen con "
"los campos normales del objeto."

#: ../mastering_plone/behaviors_1.rst:151
msgid "We add a normal `URI`_ schema field to store the URI to lanyrd."
msgstr ""
"Añadimos un campo de esquema `URI`_ normal para almacenar la dirección URI "
"del servicio Lanyrd."

#: ../mastering_plone/behaviors_1.rst:152
msgid ""
"We mark our schema as a class that also implements the `IFormFieldProvider`_"
" interface. This is a marker interface, we do not need to implement anything"
" to provide the interface."
msgstr ""
"Nosotros marcamos nuestro esquema como una clase que también implementa la "
"interfaz `IFormFieldProvider`_. Se trata de una interfaz marcador, nosotros "
"no necesitamos implementar nada para proporcionar la interfaz."

#: ../mastering_plone/behaviors_1.rst:157
msgid "Adding it to our talk"
msgstr "Agregandolo a nuestra charla"

#: ../mastering_plone/behaviors_1.rst:161
msgid ""
"We could add this behavior now via the plone control panel. But instead, we "
"will do it directly and properly in our GenericSetup profile"
msgstr ""

#: ../mastering_plone/behaviors_1.rst:163
msgid "We must add the behavior to :file:`profiles/default/types/talk.xml`:"
msgstr ""
"Debemos agregar el comportamiento al archivo "
":file:`profiles/default/types/talk.xml`:"

#: ../mastering_plone/behaviors_2.rst:4
msgid "More Complex Behaviors"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:8
msgid "Write an annotation"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:12
msgid "Annotation Marker Interfaces"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:17
msgid "Using Annotations"
msgstr "Usando Anotaciones"

#: ../mastering_plone/behaviors_2.rst:20
msgid ""
"We are going to store the information in an annotation. Not because it is "
"needed but because you will find code that uses annotations and need to "
"understand the implications."
msgstr ""
"Vamos a almacenar la información en una anotación. No porque se necesita, "
"sino porque se encuentra el código que utiliza anotaciones y la necesidad de"
" entender las implicaciones."

#: ../mastering_plone/behaviors_2.rst:22
msgid ""
"`Annotations`_ in Zope/Plone mean that data won't be stored directly on an "
"object but in an indirect way and with namespaces so that multiple packages "
"can store information under the same attribute, without colliding."
msgstr ""
"`Annotations`_ en Zope / Plone significa que los datos no serán almacenados "
"directamente en un objeto, sino de una manera indirecta y con multiple "
"espacios de nombres para que varios paquetes pueden almacenar información "
"bajo el mismo atributo, sin colisionar."

#: ../mastering_plone/behaviors_2.rst:24
msgid ""
"So using annotations avoids namespace conflicts. The cost is an indirection."
" The dictionary is persistent so it has to be stored separately. Also, one "
"could give attributes a name containing a namespace prefix to avoid naming "
"collisions."
msgstr ""
"Así que usando anotaciones evita los conflictos de nombres. El costo es una "
"indirección. El diccionario es persistente por lo que tiene que ser "
"almacenado por separado. Además, se podría dar atributos un nombre que "
"contiene un prefijo de espacio de nombres para evitar colisiones de nombres."

#: ../mastering_plone/behaviors_2.rst:36
msgid "Using Schema"
msgstr "Usando Esquema"

#: ../mastering_plone/behaviors_2.rst:40
msgid ""
"The attribute where we store our data will be declared as a schema field. We"
" mark the field as an omitted field (using schema directive similar to "
"``read_permission`` or ``widget``), because we are not going to create "
":py:mod:`z3c.form` widgets for entering or displaying them. We do provide a "
"schema, because many other packages use the schema information to get "
"knowledge of the relevant fields."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:42
msgid ""
"For example, when files were migrated to blobs, new objects had to be "
"created and every schema field was copied. The code can't know about our "
"field, except if we provide schema information."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:51
msgid "Writing Code"
msgstr "Escribiendo código"

#: ../mastering_plone/behaviors_2.rst:53
msgid ""
"To start, we create a directory :file:`behavior` with an empty "
":file:`behavior/__init__.py` file."
msgstr ""
"Para iniciar, creamos un directorio :file:`behavior` con un archivo vació "
":file:`behavior/__init__.py`."

#: ../mastering_plone/behaviors_2.rst:55
msgid "Next we must, as always, register our ZCML."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:57
msgid ""
"First, add the information that there will be another ZCML file in "
":file:`configure.zcml`"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:71
msgid "Next, create :file:`behavior/configure.zcml`"
msgstr "Luego, cree el archivo :file:`behavior/configure.zcml`"

#: ../mastering_plone/behaviors_2.rst:90
msgid "There are some important differences to our first behavior:"
msgstr "Hay algunas diferencias importantes de nuestro primer comportamiento:"

#: ../mastering_plone/behaviors_2.rst:92
msgid "There is a marker interface"
msgstr "Hay una interfaz marcador"

#: ../mastering_plone/behaviors_2.rst:93
msgid "There is a factory"
msgstr "Hay una fabrica"

#: ../mastering_plone/behaviors_2.rst:97
msgid ""
"The factory is a class that provides the behavior logic and gives access to "
"the attributes we provide. Factories in Plone/Zope land are retrieved by "
"adapting an object to an interface. If you want your behavior, you would "
"write :samp:`IVoting(object)`"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:101
msgid ""
"But in order for this to work, your object may *not* be implementing the "
"IVoting interface, because if it did, :samp:`IVoting(object)` would return "
"the object itself! If I need a marker interface for objects providing my "
"behavior, I must provide one, for this we use the marker attribute. My "
"object implements :samp:`IVotable` and because of this, we can write views "
"and viewlets just for this content type."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:104
msgid ""
"The interfaces need to be written, in our case into a file "
":file:`interfaces.py`:"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:180
msgid ""
"This is a lot of code. The IVotableLayer we will need later for viewlets and"
" browser views. Let's add it right here. The IVotable interface is the "
"simple marker interface. It will only be used to bind browser views and "
"viewlets to contenttypes that provide our behavior, so no code needed."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:183
msgid ""
"The IVoting class is more complex, as you can see. While IVoting is just an "
"interface, we use :samp:`plone.supermodel.model.Schema` for advanced "
"dexterity features. Zope.schema provides no means for hiding fields. The "
"directives :samp:`form.omitted` from :samp:`plone.autoform` allow us to "
"annotate this additional information so that the autoform renderers for "
"forms can use the additional information."
msgstr ""
"La clase IVoting es más compleja, como se puede ver. Mientras IVoting es "
"sólo una interfaz, utilizamos :samp:`plone.supermodel.model.Schema` para las"
" características avanzadas Dexterity. El paquete zope.schema no proporciona "
"medios para ocultar campos. La directivas :samp:`form.omitted`  de "
":samp:`plone.autoform` nos permite nosotros anotar esta información "
"adicional para que los auto-formularios renderizados pueden utilizar la "
"información adicional."

#: ../mastering_plone/behaviors_2.rst:186
msgid ""
"We make this omit conditional. If we run Plone in debug mode, we will be "
"able to see the internal data in the edit form."
msgstr ""
"Hacemos esta omitir condicional. Si ejecutamos Plone en modo de depuración, "
"seremos capaces de ver los datos internos en el formulario de edición."

#: ../mastering_plone/behaviors_2.rst:188
msgid ""
"We create minimal schema fields for our internal data structures. For a "
"small test, I removed the form omitted directives and opened the edit view "
"of a talk that uses the behavior. After seeing the ugliness, I decided that "
"I should provide at least  minimum of information. Titles and required are "
"purely optional, but very helpful if the fields won't be omitted, something "
"that can be helpful when debugging the behavior. Later, when we implement "
"the behavior, the :samp:`votes` and :samp:`voted` attributes are implemented"
" in such a way that you can't just modify these fields, they are read only."
msgstr ""
"Creamos los campos mínimos esquema para nuestras estructuras de datos "
"internas. Por una pequeña prueba, yo le quité las directivas omitida de "
"formulario y abrí la vista de edición de un tipo de contenido charla que "
"utiliza el comportamiento. Después de ver la fealdad, yo decidí que debía "
"proporcionar al menos mínimo de información. Los títulos y requerido son "
"puramente opcional, pero muy útil si no se omitirán los campos, algo que "
"puede ser útil al depurar el comportamiento. Más tarde, cuando ponemos en "
"práctica el comportamiento, los atributos :samp:`votes` y :samp:`voted` se "
"apliquen de tal manera que no se puede simplemente modificar estos campos, "
"que son de sólo lectura."

#: ../mastering_plone/behaviors_2.rst:191
msgid ""
"Then we define the API that we are going to use in browser views and "
"viewlets."
msgstr ""
"Luego definimos la API que vamos a usar en los browser views y viewlets."

#: ../mastering_plone/behaviors_2.rst:193
msgid ""
"The last line ensures that the schema fields are known to other packages. "
"Whenever some code wants all schemas from an object, it receives the schema "
"defined directly on the object and the additional schemata. Additional "
"schemata are compiled by looking for behaviors and whether they provide the "
":samp:`IFormFieldProvider` functionality. Only then the fields are known as "
"schema fields."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:195
msgid ""
"Now the only thing that is missing is the behavior, which we must put into "
":file:`behavior/voting.py`"
msgstr ""
"Ahora la única cosa que falta es el comportamiento, la cual debemos colocar "
"en el archivo :file:`behavior/voting.py`"

#: ../mastering_plone/behaviors_2.rst:230
msgid ""
"In our :samp:`__init__` method we get *annotations* from the object. We look"
" for data with a specific key."
msgstr ""
"En nuestro método :samp:`__init__` obtenemos las *anotaciones* del objeto. "
"Buscamos los datos con una clave específica."

#: ../mastering_plone/behaviors_2.rst:233
msgid ""
"The key in this example is the same as what I would get with "
":samp:`__name__+Vote.__name__`. But we won't create a dynamic name, this "
"would be very clever and clever is bad."
msgstr ""
"La clave en este ejemplo es el mismo que lo que obtendría con "
":samp:`__name__+Vote.__name__`. Pero no vamos a crear un nombre dinámico, "
"esto sería muy inteligente y hábil, es malo."

#: ../mastering_plone/behaviors_2.rst:235
msgid ""
"By declaring a static name, we won't run into problems if we restructure the"
" code."
msgstr ""
"Al declarar un nombre estático, no vamos a tener problemas si "
"reestructuramos el código."

#: ../mastering_plone/behaviors_2.rst:237
msgid ""
"You can see that we initialize the data if it doesn't exist. We work with "
"PersistentDict and PersistentList. To understand why we do this, it is "
"important to understand how the ZODB works."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:241
msgid ""
"The ZODB can store objects. It has a special root object that you will never"
" touch. Whatever you store there, will be part of the root object, except if"
" it is an object subclassing :samp:`persistent.Persistent` Then it will be "
"stored independently."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:243
msgid ""
"Zope/ZODB Persistent objects note when you change an attribute on it and "
"mark itself as changed. Changed objects will be saved to the database. This "
"happens automatically. Each request begins a transaction and after our code "
"runs and the Zope Server is preparing to send back the response we "
"generated, the transaction will be committed and everything we changed will "
"be saved."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:245
msgid ""
"Now, if have a normal dictionary on a persistent object, and you will only "
"change the dictionary, the persistent object has no way to know if the "
"dictionary has been changed. This `happens`_ from time to time."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:247
msgid ""
"So one solution is to change the special attribute :samp:`_p_changed` to "
":samp:`True` on the persistent object, or to use a PersistentDict. That is "
"what we are doing here."
msgstr ""
"Así que una solución es cambiar el atributo especial :samp:`_p_changed` a "
":samp:`True`  en el objeto persistente, o utilizar un PersistentDict. Eso es"
" lo que estamos haciendo aquí."

#: ../mastering_plone/behaviors_2.rst:249
msgid ""
"An important thing to note about PersistentDict and PersistentList is that "
"they cannot handle write conflicts. What happens if two users rate the same "
"content independently at the same time? In this case, a database conflict "
"will occur because there is no way for Plone to know how to handle the "
"concurrent write access. Although this is rather unlikely during this "
"training, it is a very common problem on high traffic websites."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:253
msgid ""
"You can find more information in the documentation of the ZODB, in "
"particular `Rules for Persistent Classes "
"<http://www.zodb.org/en/latest/guide/writing-persistent-objects.html>`_"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:256
msgid ""
"Next we provide the internal fields via properties. Using this form of "
"property makes them read only properties, as we did not define write "
"handlers. We don't need them so we won't add them."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:258
msgid ""
"As you have seen in the Schema declaration, if you run your site in debug "
"mode, you will see an edit field for these fields. But trying to change "
"these fields will throw an exception."
msgstr ""
"Como se ha visto en la declaración de esquema, si ejecuta su sitio en modo "
"de depuración, verá un campo de edición para estos campos. Pero si tratar de"
" cambiar estos campos abra una excepción."

#: ../mastering_plone/behaviors_2.rst:266
msgid "Let's continue with this file:"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:316
msgid ""
"We start with a little helper method which is not exposed via the interface."
" We don't want people to vote twice. There are many ways to ensure this and "
"each one has flaws."
msgstr ""
"Empezamos con un poco del método helper que no está expuesta a través de la "
"interfaz. No queremos que la gente vote dos veces. Hay muchas formas para "
"asegurar esto y cada uno tiene defectos."

#: ../mastering_plone/behaviors_2.rst:318
msgid ""
"We chose this way to show you how to access information from the request the"
" browser of the user sent to us. First, we get the ip of the user, then we "
"access a small set of headers from the user's browser and generate an md5 "
"checksum of this."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:320
msgid ""
"The vote method wants a vote and a request. We check the preconditions, then"
" we convert the vote to an integer, store the request to :samp:`voted` and "
"the votes into the :samp:`votes` dictionary. We just count there how often "
"any vote has been given."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:322
msgid "Everything else is just python."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:330
msgid ""
"Refactor the voting behavior so that it uses `BTrees` instead of "
"`PersistentDict` and `PersistentList`. Use `OOBTree` to replace "
"`PersistentDict` and `OIBTree` to replace `PersistentList`."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:335
msgid "change :file:`behavior/voting.py`"
msgstr ""

#: ../mastering_plone/behaviors_2.rst:385 ../mastering_plone/dexterity.rst:255
#: ../mastering_plone/dexterity_3.rst:445 ../mastering_plone/events.rst:170
#: ../mastering_plone/export_code.rst:417 ../mastering_plone/features.rst:103
#: ../mastering_plone/viewlets_1.rst:221 ../mastering_plone/views_3.rst:257
msgid "Exercise 2"
msgstr "Ejercicio 2"

#: ../mastering_plone/behaviors_2.rst:387
msgid ""
"Write a unit test that simulates concurrent voting. The test should raise a "
"`ConflictError` on the original voting behavior implementation. The solution"
" from the first exercise should pass. Look at the file "
"`ZODB/ConflictResolution.txt` in the `ZODB3` egg for how to create a "
"suitable test fixture for conflict testing. Look at the test code in "
"`zope.annotation` for how to create annotatable dummy content. You will also"
" have to write a 'request' dummy that mocks the `getClientAddr` and "
"`getHeader` methods of Zope's HTTP request object to make the `_hash` method"
" of the voting behavior work."
msgstr ""

#: ../mastering_plone/behaviors_2.rst:395
msgid ""
"There are no tests for `starzel.votablebehavior` at all at the moment. But "
"you can refer to chapter 22 for how to setup unit testing for a package. Put"
" the particular test for this exercise into a file named "
":file:`starzel.votable_behavior/starzel/votable_behavior/tests/test_voting`."
" Remember you need an empty :file:`__init__.py` file in the :file:`tests` "
"directory to make testing work. You also need to add "
"`starzel.votable_behavior` to `test-eggs` in :file:`buildout.cfg` and re-run"
" buildout."
msgstr ""

#: ../mastering_plone/buildout_1.rst:4
msgid "Buildout I"
msgstr "Buildout - Parte I"

#: ../mastering_plone/buildout_1.rst:8
msgid "Learn about Buildout"
msgstr ""

#: ../mastering_plone/buildout_1.rst:12
msgid "Buildout"
msgstr "Buildout"

#: ../mastering_plone/buildout_1.rst:13 ../mastering_plone/buildout_1.rst:48
msgid "Recipes"
msgstr "Recetas"

#: ../mastering_plone/buildout_1.rst:14
msgid "Buildout Configuration"
msgstr ""

#: ../mastering_plone/buildout_1.rst:15 ../mastering_plone/buildout_1.rst:346
msgid "mr.developer"
msgstr "mr.developer"

#: ../mastering_plone/buildout_1.rst:19
msgid ""
"`Buildout <https://pypi.python.org/pypi/zc.buildout>`_ composes your "
"application for you, according to your rules."
msgstr ""
"`Buildout <https://pypi.python.org/pypi/zc.buildout>`_ compone su aplicación"
" por usted, de acuerdo a sus reglas."

#: ../mastering_plone/buildout_1.rst:21
msgid ""
"To compose your application you must define the eggs you need, which "
"version, what configuration files Buildout has to generate for you, what to "
"download and compile, and so on. Buildout downloads the eggs you requested "
"and resolves all dependencies. You might need five different eggs, but in "
"the end, Buildout has to install 300 eggs, all with the correct version in "
"order to resolve all the dependencies."
msgstr ""
"Para componer su aplicación es necesario definir los paquetes eggs que usted"
" necesita, ¿qué versión?, ¿qué archivos de configuración Buildout tiene que "
"generar para usted?, para descargar y compilar, así sucesivamente. Buildout "
"descarga los paquetes eggs requeridos y resuelve todas las dependencias. Es "
"posible que necesite cinco paquetes eggs diferentes, pero al final, Buildout"
" tiene que instalar 300 paquetes eggs, todos con la versión correcta."

#: ../mastering_plone/buildout_1.rst:24
msgid ""
"Buildout does this without touching your system Python or affecting any "
"other package. The commands created by buildout bring all the required "
"packages into the Python environment. Each command it creates may use "
"different libraries or even different versions of the same library."
msgstr ""

#: ../mastering_plone/buildout_1.rst:26
msgid ""
"Plone needs folders for logfiles, databases and configuration files. "
"Buildout assembles all of this for you."
msgstr ""
"Plone necesita carpetas para los archivos de registro, bases de datos y "
"archivos de configuración. Buildout ensambla todo esto para usted."

#: ../mastering_plone/buildout_1.rst:28
msgid ""
"You will need a lot of functionality that Buildout does not provide out of "
"the box, so you'll need several extensions. Some extensions provide new "
"functionality, like mr.developer, the best way to manage your checked out "
"sources."
msgstr ""
"Usted necesitará una gran cantidad de funcionalidades que Buildout no "
"proporciona fuera de la caja, así usted necesitará varias extensiones. "
"Algunas extensiones proporcionan una funcionalidad totalmente nueva, como "
"mr.developer, la mejor manera de manejar sus repositorios de código fuente."

#: ../mastering_plone/buildout_1.rst:35
msgid "Syntax"
msgstr "Sintaxis"

#: ../mastering_plone/buildout_1.rst:39
msgid ""
"The syntax of Buildout configuration files is similar to classic ini files. "
"You write a parameter name, an equals sign and the value. If you enter "
"another value in the next line and indent it, Buildout understands that both"
" values belong to the parameter name, and the parameter stores all values as"
" a list."
msgstr ""
"La sintaxis de los archivos de configuración de despliegue es similar a los "
"archivos clásicos ini. Usted escribe un nombre de parámetro, un signo igual "
"y el valor. Si introduce otro valor en la siguiente línea y indentada, "
"Buildout entiende que ambos valores pertenecen al nombre del parámetro y el "
"parámetro almacena todos los valores en forma de lista."

#: ../mastering_plone/buildout_1.rst:41
msgid ""
"A Buildout consists of multiple sections. Sections start with the section "
"name in square brackets. Each section declares a different part of your "
"application. As a rough analogy, your Buildout file is a cookbook with "
"multiple recipes."
msgstr ""
"Un Buildout consta de múltiples secciones. Las secciones comienzan con el "
"nombre de la sección entre corchetes. Cada sección declara una parte "
"diferente de su aplicación. Como analogía aproximada, su archivo Buildout es"
" un libro de cocina con múltiples recetas."

#: ../mastering_plone/buildout_1.rst:43
msgid ""
"There is a special section, called `[buildout]`. This section can change the"
" behavior of Buildout itself. The variable :samp:`parts` defines which of "
"the existing sections should actually be used."
msgstr ""

#: ../mastering_plone/buildout_1.rst:50
msgid ""
"Buildout itself has no idea how to install Zope. Buildout is a plugin based "
"system, it comes with a small set of plugins to create configuration files "
"and download eggs with their dependencies and the proper version. To install"
" a Zope site, you need a third-party plugin. The plugins provide new recipes"
" that you have to declare and configure in their own respective sections."
msgstr ""

#: ../mastering_plone/buildout_1.rst:52
msgid "One example is the section"
msgstr "Un ejemplo es esta sección."

#: ../mastering_plone/buildout_1.rst:60
msgid ""
"This uses the python package `plone.recipe.zope2instance "
"<https://pypi.python.org/pypi/plone.recipe.zope2instance>`_ to create and "
"configure the Zope 2 instance which we use to run Plone. All the lines after"
" :samp:`recipe = xyz` are the configuration of the specified recipe."
msgstr ""

#: ../mastering_plone/buildout_1.rst:64
msgid "http://www.buildout.org/en/latest/docs/recipelist.html"
msgstr "http://www.buildout.org/en/latest/docs/recipelist.html"

#: ../mastering_plone/buildout_1.rst:69
msgid "References"
msgstr "Referencias"

#: ../mastering_plone/buildout_1.rst:73
msgid ""
"Buildout allows you to use references in the configuration. A variable "
"declaration may not only hold the variable value, but also a reference to "
"where to look for the variable value."
msgstr ""
"Buildout le permite usar referencias en la configuración. Una declaración de"
" variable no sólo puede mantener el valor de variable, pero también una "
"referencia al lugar donde buscar el valor de la variable."

#: ../mastering_plone/buildout_1.rst:75
msgid ""
"If you have a big setup with many Plone sites with minor changes between "
"each configuration, you can generate a template configuration, and each site"
" references everything from the template and overrides just what needs to be"
" changed."
msgstr ""
"Si usted tiene una gran instalación con muchos sitios Plone con pequeños "
"cambios entre cada configuración, se puede generar una plantilla de "
"configuración, y cada sitio hace referencia a todo, desde la plantilla y "
"sobrescribe justo en lo que necesita ser cambiado."

#: ../mastering_plone/buildout_1.rst:77
msgid ""
"Even in smaller buildouts this is a useful feature. We are using "
"`collective.recipe.omelette "
"<https://pypi.python.org/pypi/collective.recipe.omelette>`_. A very "
"practical recipe that creates a virtual directory that eases the navigation "
"to the source code of each egg."
msgstr ""
"Incluso en los buildouts más pequeños esta es una característica útil. "
"Estamos utilizando `collective.recipe.omelette "
"<https://pypi.python.org/pypi/collective.recipe.omelette>`_. Una receta muy "
"práctica el cual crea un directorio virtual para facilitar la navegación al "
"código fuente de cada paquete egg."

#: ../mastering_plone/buildout_1.rst:79
msgid ""
"The omelette recipe needs to know which eggs to reference. We want the same "
"eggs that our instance uses, so we reference the eggs of the instance "
"instead of repeating the whole list."
msgstr ""

#: ../mastering_plone/buildout_1.rst:81
msgid ""
"Another example: Say you create configuration files for a webserver like "
"nginx, you can define the target port for the reverse proxy by looking it up"
" from the zope2instance recipe."
msgstr ""
"Otro ejemplo: Digamos que usted crea archivos de configuración para un "
"servidor web como Nginx, puede definir el puerto de destino para el proxy "
"inverso al mirar hacia arriba a partir de la receta zope2instance."

#: ../mastering_plone/buildout_1.rst:83
msgid ""
"Configuring complex systems always involves a lot of duplication of "
"information. Using references in the buildout configuration allows you to "
"minimize these duplications."
msgstr ""
"La configuración de sistemas complejos siempre implica una gran cantidad de "
"duplicación de la información. El uso de referencias en la configuración "
"buildout le permite minimizar estas duplicaciones."

#: ../mastering_plone/buildout_1.rst:88
msgid "A real life example"
msgstr "Un ejemplo de la vida real"

#: ../mastering_plone/buildout_1.rst:90
msgid ""
"Let us walk through the :file:`buildout.cfg` for the training and look at "
"some important variables:"
msgstr ""

#: ../mastering_plone/buildout_1.rst:205
msgid ""
"When you run :command:`./bin/buildout` without any arguments, Buildout will "
"look for this file."
msgstr ""

#: ../mastering_plone/buildout_1.rst:209
msgid "Let us look closer at some variables."
msgstr "Echemos un vistazo más de cerca a algunas variables."

#: ../mastering_plone/buildout_1.rst:218
msgid ""
"This line tells Buildout to read another configuration file. You can refer "
"to configuration files on your computer or to configuration files on the "
"Internet, reachable via http. You can use multiple configuration files to "
"share configurations between multiple Buildouts, or to separate different "
"aspects of your configuration into different files. Typical examples are "
"version specifications, or configurations that differ between different "
"environments."
msgstr ""

#: ../mastering_plone/buildout_1.rst:247
msgid ""
"This is the list of eggs that we configure to be available for Zope. These "
"eggs are put in the python path of the script :command:`bin/instance` with "
"which we start and stop Plone."
msgstr ""

#: ../mastering_plone/buildout_1.rst:249
msgid ""
"The egg ``Plone`` is a wrapper without code. Among its dependencies is "
":py:mod:`Products.CMFPlone`  which is the egg that is at the center of "
"Plone."
msgstr ""

#: ../mastering_plone/buildout_1.rst:251
msgid ""
"The rest are add-ons we already used or will use later. The last eggs are "
"commented out so they will not be installed by Buildout."
msgstr ""

#: ../mastering_plone/buildout_1.rst:253
msgid ""
"The file :file:`versions.cfg` that is included by the :samp:`extends = ...` "
"statement holds the version pins:"
msgstr ""

#: ../mastering_plone/buildout_1.rst:271
msgid ""
"This is another special section. By default buildout will look for version "
"pins in a section called ``[versions]``. This is why we included the file "
":file:`versions.cfg`."
msgstr ""

#: ../mastering_plone/buildout_1.rst:276
msgid "Hello mr.developer!"
msgstr "¡Hola mr.developer!"

#: ../mastering_plone/buildout_1.rst:280
msgid ""
"There are many more important things to know, and we can't go through them "
"all in detail but I want to focus on one specific feature: "
":py:mod:`mr.developer`"
msgstr ""

#: ../mastering_plone/buildout_1.rst:282
msgid ""
"With :py:mod:`mr.developer` you can declare which packages you want to check"
" out from which version control system and which repository URL. You can "
"check out sources from git, svn, bzr, hg and maybe more. Also, you can say "
"that some sources are in your local file system."
msgstr ""

#: ../mastering_plone/buildout_1.rst:284
msgid ""
":py:mod:`mr.developer` comes with a command, :command:`./bin/develop`. You "
"can use it to update your code, to check for changes and so on. You can "
"activate and deactivate your source checkouts. If you develop your "
"extensions in eggs with separate checkouts, which is a good practice, you "
"can plan releases by having all source checkouts deactivated, and only "
"activate them when you write changes that require a new release. You can "
"activate and deactivate eggs via the :command:`develop` command or the "
"Buildout configuration. You should always use the Buildout way. Your commit "
"serves as documentation."
msgstr ""

#: ../mastering_plone/buildout_1.rst:289
msgid "Extensible"
msgstr "Extensible"

#: ../mastering_plone/buildout_1.rst:293
msgid ""
"You might have noticed that most if not all functionality is only available "
"via plugins. One of the things that Buildout excels at without any plugin is"
" the dependency resolution. You can help Plone in dependency resolution by "
"declaring exactly which version of an egg you want. This is only one use "
"case. Another one is much more important: If you want to have a repeatable "
"Buildout, one that works two months from now also, you *must* declare all "
"your egg versions. Else Buildout might install newer versions."
msgstr ""

#: ../mastering_plone/buildout_1.rst:298
msgid "Be McGuyver"
msgstr "Sea un McGuyver"

#: ../mastering_plone/buildout_1.rst:302
msgid ""
"As you can see, you can build very complex systems with Buildout. It is time"
" for some warnings. Be selective in your recipes. Supervisor is a program to"
" manage running servers, and it's pretty good. There is a recipe for it."
msgstr ""

#: ../mastering_plone/buildout_1.rst:304
msgid ""
"The configuration for this recipe is more complicated than the supervisor "
"configuration itself! By using this recipe, you force others to understand "
"the recipe's specific configuration syntax *and* the supervisor syntax. For "
"such cases, `collective.recipe.template "
"<https://pypi.python.org/pypi/collective.recipe.template>`_ is a better "
"match."
msgstr ""

#: ../mastering_plone/buildout_1.rst:306
msgid ""
"Another problem is error handling. Buildout tries to install a weird "
"dependency you do not actually want? Buildout will not tell you where it is "
"coming from."
msgstr ""

#: ../mastering_plone/buildout_1.rst:308
msgid ""
"If there is a problem, you can always run Buildout with :option:`-v` to get "
"more verbose output, sometimes it helps."
msgstr ""

#: ../mastering_plone/buildout_1.rst:314
msgid ""
"If strange egg versions are requested, check the dependencies declaration of"
" your eggs and your version pinnings. Here is an invaluable shell command "
"that allows you to find all packages that depend on a particular egg and "
"version:"
msgstr ""

#: ../mastering_plone/buildout_1.rst:321
msgid ""
"Put the name of the egg with a version conflict as the first argument.  "
"Also, change the path to the buildout cache folder according to your "
"installation (the vagrant buildout is assumed in the example)."
msgstr ""

#: ../mastering_plone/buildout_1.rst:323
msgid ""
"Some parts of Buildout interpret egg names case sensitively, others don't. "
"This can result in funny problems."
msgstr ""

#: ../mastering_plone/buildout_1.rst:325
msgid ""
"Always check out the ordering of your extends, always use the "
":samp:`annotate` command of Buildout to see if it interprets your "
"configuration differently than you. Restrict yourself to simple Buildout "
"files. You can reference variables from other sections, you can even use a "
"whole section as a template. We learned that this does not work well with "
"complex hierarchies and had to abandon that feature."
msgstr ""
"Verifique siempre el orden de su configuraciones extendidas, utilice siempre"
" el comando :samp:`annotate` de Buildout para ver si se interpreta la "
"configuración diferente a la que usted definió. Restringirse a los archivos "
"de despliegue simples. Puede hacer referencia a variables de otras "
"secciones, incluso se puede utilizar toda una sección como plantilla. Hemos "
"aprendido que esto no funciona bien con jerarquías complejas y se tuvo que "
"abandonar esa característica."

#: ../mastering_plone/buildout_1.rst:327
msgid ""
"In the chapter :doc:`deployment_sites` we will have a look at a production-"
"ready buildout for Plone that has many useful features."
msgstr ""

#: ../mastering_plone/buildout_1.rst:333
msgid "Buildout-Documentation"
msgstr "Documentación de Buildout"

#: ../mastering_plone/buildout_1.rst:332
msgid "http://docs.plone.org/4/en/old-reference-manuals/buildout/index.html"
msgstr "http://docs.plone.org/4/en/old-reference-manuals/buildout/index.html"

#: ../mastering_plone/buildout_1.rst:333
msgid "http://www.buildout.org/en/latest/docs/index.html"
msgstr "http://www.buildout.org/en/latest/docs/index.html"

#: ../mastering_plone/buildout_1.rst:336
msgid "Troubleshooting"
msgstr "Solución de problemas"

#: ../mastering_plone/buildout_1.rst:336
msgid "http://docs.plone.org/manage/troubleshooting/buildout.html"
msgstr "http://docs.plone.org/manage/troubleshooting/buildout.html"

#: ../mastering_plone/buildout_1.rst:339
msgid "A minimal buildout for Plone 4"
msgstr "Un buildout mínimo para Plone 4"

#: ../mastering_plone/buildout_1.rst:339
msgid "https://github.com/collective/minimalplone4"
msgstr "https://github.com/collective/minimalplone4"

#: ../mastering_plone/buildout_1.rst:344
msgid ""
"The buildout of the unified installer has some valuable documentation as "
"inline-comment"
msgstr ""
"El archivo Buildout del instalador unificado tiene documentación valiosa "
"como comentarios entre linea"

#: ../mastering_plone/buildout_1.rst:342
msgid ""
"https://github.com/plone/Installers-"
"UnifiedInstaller/blob/master/buildout_templates/buildout.cfg"
msgstr ""
"https://github.com/plone/Installers-"
"UnifiedInstaller/blob/master/buildout_templates/buildout.cfg"

#: ../mastering_plone/buildout_1.rst:343
msgid ""
"https://github.com/plone/Installers-"
"UnifiedInstaller/blob/master/base_skeleton/base.cfg"
msgstr ""
"https://github.com/plone/Installers-"
"UnifiedInstaller/blob/master/base_skeleton/base.cfg"

#: ../mastering_plone/buildout_1.rst:344
msgid ""
"https://github.com/plone/Installers-"
"UnifiedInstaller/blob/master/base_skeleton/develop.cfg"
msgstr ""
"https://github.com/plone/Installers-"
"UnifiedInstaller/blob/master/base_skeleton/develop.cfg"

#: ../mastering_plone/buildout_1.rst:347
msgid "https://pypi.python.org/pypi/mr.developer/"
msgstr "https://pypi.python.org/pypi/mr.developer/"

#: ../mastering_plone/case.rst:4
msgid "The Case Study"
msgstr ""

#: ../mastering_plone/case.rst:6
msgid ""
"For this training we will build a website for a fictional Plone conference."
msgstr ""
"Para este entrenamiento construiremos un Sitio Web para una conferencia "
"ficticia de Plone."

#: ../mastering_plone/case.rst:11
msgid "Background"
msgstr "Detalle"

#: ../mastering_plone/case.rst:13
msgid ""
"The Plone conference takes place every year and all Plone developers at "
"least try to go there."
msgstr ""
"La conferencia de Plone toma lugar cada año y todos los desarrolladores al "
"menos intentan ir."

#: ../mastering_plone/case.rst:18
msgid "Requirements"
msgstr "Requerimientos"

#: ../mastering_plone/case.rst:20
msgid "Here are some requirements that we want to meet when the site is done:"
msgstr ""

#: ../mastering_plone/case.rst:22
msgid "As a visitor I want to find current information on the conference."
msgstr ""

#: ../mastering_plone/case.rst:23
msgid "As a visitor I want to register for the conference."
msgstr ""

#: ../mastering_plone/case.rst:24
msgid "As a visitor I want to see the talks and sort them by my preferences."
msgstr ""

#: ../mastering_plone/case.rst:25
msgid "As a speaker I want to be able to submit talks."
msgstr ""

#: ../mastering_plone/case.rst:26
msgid "As a speaker I want to see and edit my submitted talks."
msgstr ""

#: ../mastering_plone/case.rst:27
msgid "As an organizer I want to see a list of all proposed talks."
msgstr ""

#: ../mastering_plone/case.rst:28
msgid ""
"As an organizer I want to have an overview about how many people registered."
msgstr ""

#: ../mastering_plone/case.rst:29
msgid "As a jury member I want to vote on talks."
msgstr ""

#: ../mastering_plone/case.rst:30
msgid ""
"As a jury member I want to decide which talks to accept, and which not."
msgstr ""

#: ../mastering_plone/case.rst:32
msgid ""
"Note that all of our requirements connect roles with capabilities. This is "
"important because we'll want to limit the capabilities to those to whom we "
"assign particular roles."
msgstr ""
"Tenga en cuenta que todos nuestros requisitos conectar roles con sus "
"capacidades. Esto es importante porque vamos a querer limitar las "
"capacidades de aquellos a los que asignamos roles particulares."

#: ../mastering_plone/code.rst:2
msgid "Using the code for the training"
msgstr ""

#: ../mastering_plone/code.rst:4
msgid ""
"You can get the complete code for this training in "
"https://github.com/collective/ploneconf.site"
msgstr ""

#: ../mastering_plone/code.rst:7
msgid "The code-package"
msgstr ""

#: ../mastering_plone/code.rst:9
msgid "The package"
msgstr ""

#: ../mastering_plone/code.rst:13
msgid "If you want to do it by hand do the following:"
msgstr ""

#: ../mastering_plone/code.rst:22
msgid "Getting the code for a certain chapter"
msgstr ""

#: ../mastering_plone/code.rst:24
msgid ""
"To use the code for a certain chapter you need to checkout the appropriate "
"tag for the chapter. The package will then contain the complete code for "
"that chapter (excluding exercises). If you want to add the code for the "
"chapter yourself you have to checkout the tag for the previous chapter."
msgstr ""

#: ../mastering_plone/code.rst:29
msgid "Here is a example:"
msgstr ""

#: ../mastering_plone/code.rst:35
msgid ""
"The names of the tags are the same as the url of the chapter. So the tag for"
" the chapter https://training.plone.org/5/mastering_plone/registry.html is "
"``registry`` and you can get it with :command:`git checkout registry`."
msgstr ""

#: ../mastering_plone/code.rst:40
msgid "Moving from chapter to chapter"
msgstr ""

#: ../mastering_plone/code.rst:42
msgid ""
"To change the code to the state of the next chapter simply checkout the tag "
"for the next chapter:"
msgstr ""

#: ../mastering_plone/code.rst:49
msgid ""
"If you made any changes to the code you have to get them out of the way "
"first:"
msgstr ""

#: ../mastering_plone/code.rst:55
msgid ""
"This will stash away your changes but not delete them. You can get them back"
" later. You should learn about the command :command:`git stash` before you "
"try reapply stashed changes."
msgstr ""

#: ../mastering_plone/code.rst:58
msgid ""
"If you want to remove any changes you made locally you can delete them with "
"this command:"
msgstr ""

#: ../mastering_plone/code.rst:69
msgid "Telling Plone about ploneconf.site"
msgstr ""

#: ../mastering_plone/code.rst:71
msgid ""
"If you did not yet do this (it is covered in chapter :ref:`eggs1-label`) you"
" will have to modify :file:`buildout.cfg` to have Plone expect the egg "
":py:mod:`ploneconf.site` to be in :file:`src`."
msgstr ""

#: ../mastering_plone/code.rst:93
msgid "These are the tags for which there is code:"
msgstr ""

#: ../mastering_plone/code.rst:96
msgid "Chapter"
msgstr "Capítulo"

#: ../mastering_plone/code.rst:96
msgid "Tag-Name"
msgstr ""

#: ../mastering_plone/code.rst:98
msgid ":doc:`about_mastering`"
msgstr ""

#: ../mastering_plone/code.rst:99
msgid ":doc:`intro`"
msgstr ""

#: ../mastering_plone/code.rst:100
msgid ":doc:`installation`"
msgstr ""

#: ../mastering_plone/code.rst:101
msgid ":doc:`case`"
msgstr ""

#: ../mastering_plone/code.rst:102
msgid ":doc:`features`"
msgstr ""

#: ../mastering_plone/code.rst:103
msgid ":doc:`anatomy`"
msgstr ""

#: ../mastering_plone/code.rst:104
msgid ":doc:`plone5`"
msgstr ""

#: ../mastering_plone/code.rst:105
msgid ":doc:`configuring_customizing`"
msgstr ""

#: ../mastering_plone/code.rst:106
msgid ":doc:`theming`"
msgstr ""

#: ../mastering_plone/code.rst:107
msgid ":doc:`extending`"
msgstr ""

#: ../mastering_plone/code.rst:108
msgid ":doc:`add-ons`"
msgstr ""

#: ../mastering_plone/code.rst:109
msgid ":doc:`dexterity`"
msgstr ""

#: ../mastering_plone/code.rst:110
msgid ":doc:`buildout_1`"
msgstr ""

#: ../mastering_plone/code.rst:110
msgid "``buildout_1``"
msgstr ""

#: ../mastering_plone/code.rst:111
msgid ":doc:`eggs1`"
msgstr ""

#: ../mastering_plone/code.rst:111
msgid "``eggs1``"
msgstr ""

#: ../mastering_plone/code.rst:112
msgid ":doc:`export_code`"
msgstr ""

#: ../mastering_plone/code.rst:112
msgid "``export_code``"
msgstr ""

#: ../mastering_plone/code.rst:113
msgid ":doc:`views_1`"
msgstr ""

#: ../mastering_plone/code.rst:113
msgid "``views_1``"
msgstr ""

#: ../mastering_plone/code.rst:114
msgid ":doc:`zpt`"
msgstr ""

#: ../mastering_plone/code.rst:114
msgid "``zpt``"
msgstr ""

#: ../mastering_plone/code.rst:115
msgid ":doc:`zpt_2`"
msgstr ""

#: ../mastering_plone/code.rst:115
msgid "``zpt_2``"
msgstr ""

#: ../mastering_plone/code.rst:116
msgid ":doc:`views_2`"
msgstr ""

#: ../mastering_plone/code.rst:116
msgid "``views_2``"
msgstr ""

#: ../mastering_plone/code.rst:117
msgid ":doc:`views_3`"
msgstr ""

#: ../mastering_plone/code.rst:117
msgid "``views_3``"
msgstr ""

#: ../mastering_plone/code.rst:118
msgid ":doc:`testing`"
msgstr ""

#: ../mastering_plone/code.rst:118
msgid "``testing``"
msgstr ""

#: ../mastering_plone/code.rst:119
msgid ":doc:`behaviors_1`"
msgstr ""

#: ../mastering_plone/code.rst:119
msgid "``behaviors_1``"
msgstr ""

#: ../mastering_plone/code.rst:120
msgid ":doc:`viewlets_1`"
msgstr ""

#: ../mastering_plone/code.rst:120
msgid "``viewlets_1``"
msgstr ""

#: ../mastering_plone/code.rst:121
msgid ":doc:`api`"
msgstr ""

#: ../mastering_plone/code.rst:122
msgid ":doc:`ide`"
msgstr ""

#: ../mastering_plone/code.rst:123
msgid ":doc:`dexterity_2`"
msgstr ""

#: ../mastering_plone/code.rst:123
msgid "``dexterity_2``"
msgstr ""

#: ../mastering_plone/code.rst:124
msgid ":doc:`custom_search`"
msgstr ""

#: ../mastering_plone/code.rst:125
msgid ":doc:`events`"
msgstr ""

#: ../mastering_plone/code.rst:125
msgid "``events``"
msgstr ""

#: ../mastering_plone/code.rst:126
msgid ":doc:`user_generated_content`"
msgstr ""

#: ../mastering_plone/code.rst:126
msgid "``user_generated_content``"
msgstr ""

#: ../mastering_plone/code.rst:127
msgid ":doc:`resources`"
msgstr ""

#: ../mastering_plone/code.rst:127
msgid "``resources``"
msgstr ""

#: ../mastering_plone/code.rst:128
msgid ":doc:`thirdparty_behaviors`"
msgstr ""

#: ../mastering_plone/code.rst:128
msgid "``thirdparty_behaviors``"
msgstr ""

#: ../mastering_plone/code.rst:129
msgid ":doc:`dexterity_3`"
msgstr ""

#: ../mastering_plone/code.rst:129
msgid "``dexterity_3``"
msgstr ""

#: ../mastering_plone/code.rst:130
msgid ":doc:`relations`"
msgstr ""

#: ../mastering_plone/code.rst:130
msgid "``relations``"
msgstr ""

#: ../mastering_plone/code.rst:131
msgid ":doc:`registry`"
msgstr ""

#: ../mastering_plone/code.rst:131
msgid "``registry``"
msgstr ""

#: ../mastering_plone/code.rst:132
msgid ":doc:`frontpage`"
msgstr ""

#: ../mastering_plone/code.rst:132
msgid "``frontpage``"
msgstr ""

#: ../mastering_plone/code.rst:133
msgid ":doc:`eggs2`"
msgstr ""

#: ../mastering_plone/code.rst:134
msgid ":doc:`behaviors_2`"
msgstr ""

#: ../mastering_plone/code.rst:135
msgid ":doc:`viewlets_2`"
msgstr ""

#: ../mastering_plone/code.rst:136
msgid ":doc:`reusable`"
msgstr ""

#: ../mastering_plone/code.rst:137
msgid ":doc:`embed`"
msgstr ""

#: ../mastering_plone/code.rst:138 ../mastering_plone/optional.rst:18
msgid ":doc:`deployment_code`"
msgstr ":doc:`deployment_code`"

#: ../mastering_plone/code.rst:139
msgid ":doc:`deployment_sites`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:4
msgid "Configuring and Customizing Plone \"Through The Web\""
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:8
msgid "This chapter has not yet been updated for Plone 5!"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:15
msgid "The Control Panel"
msgstr "El panel de control"

#: ../mastering_plone/configuring_customizing.rst:17
msgid ""
"The most important parts of Plone can be configured in the control panel."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:19
msgid "Click on the portrait/username in the toolbar"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:20
msgid "Click :guilabel:`Site Setup`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:22
msgid ""
"We'll explain every page and mention some of the actions you can perform "
"here."
msgstr ""
"Nosotros explicaremos cada página y mencionaremos algunas cosas que puedes "
"hacer aquí."

#: ../mastering_plone/configuring_customizing.rst:26
msgid "General"
msgstr "General"

#: ../mastering_plone/configuring_customizing.rst:28
msgid "Date and Time"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:29
msgid "Language"
msgstr "Idioma"

#: ../mastering_plone/configuring_customizing.rst:30
msgid "Mail"
msgstr "Correo"

#: ../mastering_plone/configuring_customizing.rst:31
msgid "Navigation"
msgstr "Navegación"

#: ../mastering_plone/configuring_customizing.rst:32
msgid "Site"
msgstr "Sitio"

#: ../mastering_plone/configuring_customizing.rst:33
msgid "Add-ons"
msgstr "Complementos"

#: ../mastering_plone/configuring_customizing.rst:34
msgid "Search"
msgstr "Buscar"

#: ../mastering_plone/configuring_customizing.rst:35
msgid "Discussion"
msgstr "Discusión"

#: ../mastering_plone/configuring_customizing.rst:36
#: ../mastering_plone/theming.rst:4
msgid "Theming"
msgstr "Temas"

#: ../mastering_plone/configuring_customizing.rst:37
msgid "Social Media"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:38
msgid "Syndication"
msgstr "Sindicación"

#: ../mastering_plone/configuring_customizing.rst:39
msgid "TinyMCE"
msgstr "TinyMCE"

#: ../mastering_plone/configuring_customizing.rst:43
msgid "Content"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:45
#: ../mastering_plone/features.rst:348
msgid "Content Rules"
msgstr "Reglas de Contenido"

#: ../mastering_plone/configuring_customizing.rst:46
msgid "Editing"
msgstr "Edición"

#: ../mastering_plone/configuring_customizing.rst:47
msgid "Image Handling"
msgstr "Manejo de Imágenes"

#: ../mastering_plone/configuring_customizing.rst:48
msgid "Markup"
msgstr "Etiquetado"

#: ../mastering_plone/configuring_customizing.rst:49
msgid "Content Settings"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:50
msgid "Dexterity Content Types"
msgstr "Tipos de contenido Dexterity"

#: ../mastering_plone/configuring_customizing.rst:53
#: ../mastering_plone/features.rst:189
msgid "Users"
msgstr "Usuarios"

#: ../mastering_plone/configuring_customizing.rst:55
msgid "Users and Groups"
msgstr "Usuarios y Grupos"

#: ../mastering_plone/configuring_customizing.rst:58
#: ../mastering_plone/configuring_customizing.rst:61
msgid "Security"
msgstr "Seguridad"

#: ../mastering_plone/configuring_customizing.rst:60
msgid "HTML Filtering"
msgstr "Filtrado HTML"

#: ../mastering_plone/configuring_customizing.rst:62
msgid "Errors"
msgstr "Errores"

#: ../mastering_plone/configuring_customizing.rst:65
msgid "Advanced"
msgstr "Avanzado"

#: ../mastering_plone/configuring_customizing.rst:67
msgid "Maintenance"
msgstr "Mantenimiento"

#: ../mastering_plone/configuring_customizing.rst:68
msgid "Management Interface"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:69
msgid "Caching"
msgstr "Caché"

#: ../mastering_plone/configuring_customizing.rst:70
msgid "Configuration Registry"
msgstr "Registro de Configuración"

#: ../mastering_plone/configuring_customizing.rst:71
msgid "Resource Registries"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:74
msgid ""
"Below the links you will find information on your Plone, Zope and Python "
"Versions and an indicator as to whether you're running in production or "
"development mode."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:77
msgid "Change the logo"
msgstr "Cambia el logotipo"

#: ../mastering_plone/configuring_customizing.rst:79
msgid "Let's change the logo."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:81
msgid ""
"Download a ploneconf logo: https://www.starzel.de/plone-tutorial/ploneconf-"
"logo-2014"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:82
msgid "Go to http://localhost:8080/Plone/@@site-controlpanel"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:83
msgid "Upload the Logo."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:87
msgid "http://docs.plone.org/adapt-and-extend/change-the-logo.html"
msgstr "http://docs.plone.org/adapt-and-extend/change-the-logo.html"

#: ../mastering_plone/configuring_customizing.rst:93
#: ../mastering_plone/optional.rst:7
msgid "Portlets"
msgstr "Portlets"

#: ../mastering_plone/configuring_customizing.rst:95
msgid ""
"In the toolbar under :guilabel:`More options` you can open the configuration"
" for the different places where you can have portlets."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:97
msgid "UI fit for smart content editors"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:98
msgid "Various types"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:99
msgid "Portlet configuration is inherited"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:100
msgid "Managing"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:101
msgid "Ordering/weighting"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:102
msgid "The future: may be replaced by tiles"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:103
msgid "``@@manage-portlets``"
msgstr "``@@manage-portlets``"

#: ../mastering_plone/configuring_customizing.rst:105
#: ../mastering_plone/zpt.rst:351
msgid "Example:"
msgstr "Ejemplo:"

#: ../mastering_plone/configuring_customizing.rst:107
msgid "Go to http://localhost:8080/Plone/@@manage-portlets"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:108
msgid "Add a static portlet \"Sponsors\" on the right side."
msgstr "Agregue un portlet \"Patrocinadores\" en el lado derecho."

#: ../mastering_plone/configuring_customizing.rst:109
msgid "Remove the news portlet and add a new one on the left side."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:110
msgid ""
"Go to the training folder: http://localhost:8080/Plone/the-event/training "
"and click ``Manage portlets``"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:111
msgid ""
"Add a static portlet. \"Featured training: Become a Plone-Rockstar at "
"Mastering Plone!\""
msgstr ""
"Agregue un portlet estático. \"Entrenamiento destacada: Conviértete en un "
"Rockstar de Plone en la ¡Maestría en Plone!\""

#: ../mastering_plone/configuring_customizing.rst:112
msgid "Use the toolbar to configure the portlets of the footer:"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:114
msgid "Hide the portlets \"Footer\" and \"Colophon\"."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:115
msgid "Add a \"Static text portlet\" enter \"Copyright 2015 by Plone Community\"."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:116
msgid "Use \"Insert > Special Character\" to add a real © sign."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:117
msgid "You could turn that into a link to a copyright page later."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:123
#: ../mastering_plone/intro.rst:69 ../mastering_plone/viewlets_1.rst:21
#: ../mastering_plone/viewlets_2.rst:20
msgid "Viewlets"
msgstr "Viewlets"

#: ../mastering_plone/configuring_customizing.rst:125
msgid ""
"Portlets save data, Viewlets usually don't. Viewlets are often used for UI-"
"Elements and have no nice UI to customize them."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:127
msgid "``@@manage-viewlets``"
msgstr "``@@manage-viewlets``"

#: ../mastering_plone/configuring_customizing.rst:128
msgid "Viewlets have no nice UI"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:129
msgid "Not aimed at content editors"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:130
msgid "Not locally addable, no configurable inheritance."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:131
msgid "Usually global (depends on code)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:132
msgid "Will be replaced by tiles?"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:133
msgid "The code is much simpler (we'll create one tomorrow)."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:134
msgid ""
"Live in viewlet managers, can be nested (by adding a viewlet that contains a"
" viewlet manager)."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:135
msgid "TTW reordering only within the same viewlet manager."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:136
msgid "The code decides when it is shown and what it shows."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:142
msgid "ZMI (Zope Management Interface)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:144
msgid "Go to http://localhost:8080/Plone/manage"
msgstr "Valla a dirección URL http://localhost:8080/Plone/manage"

#: ../mastering_plone/configuring_customizing.rst:146
msgid ""
"Zope is the foundation of Plone. Here you can access the inner workings of "
"Zope and Plone alike."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:150
msgid ""
"Here you can easily break your site so you should know what you are doing!"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:154
msgid ""
"We only cover three parts of customization in the ZMI now. Later on when we "
"added our own code we'll come back to the ZMI and will look for it."
msgstr ""
"Nosotros sólo cubrimos las tres partes de la personalización en el ZMI "
"ahora. Más tarde, cuando agreguemos nuestro propio código fuente vamos a "
"volver a la ZMI y lo buscaremos."

#: ../mastering_plone/configuring_customizing.rst:157
msgid ""
"At some point you'll have to learn what all those objects are about. But not"
" today."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:161
msgid "Actions (portal_actions)"
msgstr "Acciones (portal_actions)"

#: ../mastering_plone/configuring_customizing.rst:163
msgid "Actions are mostly links. But **really flexible** links."
msgstr ""
"Las acciones son principalmente enlaces. Pero enlaces **realmente "
"flexibles**."

#: ../mastering_plone/configuring_customizing.rst:164
msgid "Actions are configurable ttw and through code."
msgstr ""
"Las acciones son configurable a través de la Web y a través de código "
"fuente."

#: ../mastering_plone/configuring_customizing.rst:165
msgid "These actions are usually iterated over in viewlets and displayed."
msgstr "Estas acciones son usualmente iteradas sobre viewlets y mostradas."

#: ../mastering_plone/configuring_customizing.rst:167
#: ../mastering_plone/custom_search.rst:27 ../mastering_plone/zpt.rst:328
msgid "Examples:"
msgstr "Ejemplos:"

#: ../mastering_plone/configuring_customizing.rst:169
msgid "Links in the Footer (``site_actions``)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:170
msgid "Actions Dropdown (``folder_buttons``)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:172
msgid "Actions have properties like:"
msgstr "Las acciones tienen propiedades como:"

#: ../mastering_plone/configuring_customizing.rst:174
msgid "description"
msgstr "descripción"

#: ../mastering_plone/configuring_customizing.rst:175
msgid "url"
msgstr "url"

#: ../mastering_plone/configuring_customizing.rst:176
msgid "i18n-domain"
msgstr "i18n-domain"

#: ../mastering_plone/configuring_customizing.rst:177
#: ../mastering_plone/zpt.rst:420
msgid "condition"
msgstr "condition"

#: ../mastering_plone/configuring_customizing.rst:178
msgid "permissions"
msgstr "permissions"

#: ../mastering_plone/configuring_customizing.rst:183
msgid "``site_actions``"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:185
msgid "These are the links at the bottom of the page:"
msgstr "Estos son los enlaces al fondo de la página:"

#: ../mastering_plone/configuring_customizing.rst:187
msgid "Site Map"
msgstr "Mapa del Sitio"

#: ../mastering_plone/configuring_customizing.rst:188
msgid "Accessibility"
msgstr "Accesibilidad"

#: ../mastering_plone/configuring_customizing.rst:189
msgid "Contact"
msgstr "Contacto"

#: ../mastering_plone/configuring_customizing.rst:190
msgid "Site Setup"
msgstr "Configuración del Sitio"

#: ../mastering_plone/configuring_customizing.rst:192
msgid "We want a new link to legal information, called \"Imprint\"."
msgstr "Queremos un nuevo enlace a la información legal, llamado \"Aviso Legal\"."

#: ../mastering_plone/configuring_customizing.rst:194
msgid ""
"Go to ``site_actions`` (we know that because we checked in ``@@manage-"
"viewlets``)"
msgstr ""
"Ir a ``site_actions`` (lo sabemos porque lo chequeamos en ``@@manage-"
"viewlets``)"

#: ../mastering_plone/configuring_customizing.rst:195
msgid "Add a CMF Action ``imprint``"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:196
msgid "Set URL to ``string:${portal_url}/imprint``"
msgstr "Asigna dirección URL a ``string:${portal_url}/imprint``"

#: ../mastering_plone/configuring_customizing.rst:197
msgid "Leave *condition* empty"
msgstr "Deje *condition* en blanco"

#: ../mastering_plone/configuring_customizing.rst:198
msgid "Set permission to ``View``"
msgstr "Asigne el permiso a ``View``"

#: ../mastering_plone/configuring_customizing.rst:199
msgid "Save"
msgstr "Guardar"

#: ../mastering_plone/configuring_customizing.rst:203
msgid "explain"
msgstr "Explicar"

#: ../mastering_plone/configuring_customizing.rst:205
msgid "Check if the link is on the page"
msgstr "Verifique si el enlace de esta en la página funciona"

#: ../mastering_plone/configuring_customizing.rst:206
msgid "Create new Document `Imprint` and publish"
msgstr "Cree un nuevo Documento llamado `Aviso legal` y publíquelo"

#: ../mastering_plone/configuring_customizing.rst:210
msgid "http://docs.plone.org/develop/plone/functionality/actions.html"
msgstr "http://docs.plone.org/develop/plone/functionality/actions.html"

#: ../mastering_plone/configuring_customizing.rst:214
msgid "Global navigation"
msgstr "Navegación global"

#: ../mastering_plone/configuring_customizing.rst:216
msgid "The horizontal navigation is called ``portal_tabs``"
msgstr "La navegación horizontal es llamada ``portal_tabs``"

#: ../mastering_plone/configuring_customizing.rst:217
msgid ""
"Go to :menuselection:`portal_actions --> portal_tabs` `Link "
"<http://localhost:8080/Plone/portal_actions/portal_tabs/manage_main>`_"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:218
msgid "Edit ``index_html``"
msgstr "Edite ``index_html``"

#: ../mastering_plone/configuring_customizing.rst:220
msgid "Where is the navigation?"
msgstr "¿Donde esta la navegación?"

#: ../mastering_plone/configuring_customizing.rst:222
msgid ""
"The navigation shows content-objects, which are in Plone's root. Plus all "
"actions in ``portal_tabs``."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:224
msgid "Explain & edit ``index_html``"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:226
msgid ""
"Configuring the navigation itself is done elsewhere: "
"http://localhost:8080/Plone/@@navigation-controlpanel"
msgstr ""
"Configurando la navegación por si mismo es hecho en cualquier parte: "
"http://localhost:8080/Plone/@@navigation-controlpanel"

#: ../mastering_plone/configuring_customizing.rst:228
msgid "If time explain:"
msgstr "Si hay tiempo explique:"

#: ../mastering_plone/configuring_customizing.rst:230
msgid "user > undo (cool!)"
msgstr "user > undo (¡chevere!)"

#: ../mastering_plone/configuring_customizing.rst:231
msgid "user > login/logout"
msgstr "user > login/logout"

#: ../mastering_plone/configuring_customizing.rst:235
msgid "Skins (``portal_skins``)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:237
msgid ""
"In ``portal_skins`` we can change certain images, CSS-files and templates."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:239
msgid "``portal_skins`` is deprecated technology"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:240
msgid "Plone 5 got rid of most files that lived in ``portal_skins``."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:244
msgid "Change some CSS"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:246
msgid "Go to ZMI"
msgstr "Ir a ZMI"

#: ../mastering_plone/configuring_customizing.rst:247
msgid "Go to ``portal_skins``"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:248
msgid "Go to ``plone_styles``"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:249
msgid "Go to :file:`ploneCustom.css`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:250
msgid "Click :guilabel:`customize`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:252
msgid "The CSS you add to this file is instantly active on the site."
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:256
msgid "portal_view_customizations"
msgstr "portal_view_customizations"

#: ../mastering_plone/configuring_customizing.rst:259
msgid "Change the footer"
msgstr "Cambiar el pie de página"

#: ../mastering_plone/configuring_customizing.rst:261
msgid "Go to ``portal_view_customizations``"
msgstr "Ir a ``portal_view_customizations``"

#: ../mastering_plone/configuring_customizing.rst:262
msgid "Search ``plone.footer``, click and customize"
msgstr "Busque ``plone.footer``, haga clic y personalice"

#: ../mastering_plone/configuring_customizing.rst:263
msgid "Replace the content with the following"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:279
msgid ""
"http://docs.plone.org/adapt-and-"
"extend/theming/templates_css/skin_layers.html"
msgstr ""
"http://docs.plone.org/adapt-and-"
"extend/theming/templates_css/skin_layers.html"

#: ../mastering_plone/configuring_customizing.rst:283
msgid "CSS Registry (``portal_css``)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:285
msgid "*deprecated* (See the chapter on theming)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:289
msgid "Further tools in the ZMI"
msgstr "Más herramientas en el ZMI"

#: ../mastering_plone/configuring_customizing.rst:291
msgid ""
"There are many more notable items in the ZMI. We'll visit some of them "
"later."
msgstr ""
"Hay muchos más elementos notables en el ZMI, los visitaremos más tarde."

#: ../mastering_plone/configuring_customizing.rst:293
msgid ":guilabel:`acl_users`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:294
msgid ":guilabel:`error_log`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:295
msgid ":guilabel:`portal_properties` (deprecated)"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:296
msgid ":guilabel:`portal_setup`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:297
msgid ":guilabel:`portal_workflow`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:298
msgid ":guilabel:`portal_catalog`"
msgstr ""

#: ../mastering_plone/configuring_customizing.rst:306
msgid ""
"You can configure and customize a lot in Plone through the web. The most "
"important options are accessible in the `Plone control panel "
"<http://localhost:8080/Plone/@@overview-controlpanel>`_ but some are hidden "
"away in the `ZMI <http://localhost:8080/Plone/manage>`_. The amount and "
"presentation of information is overwhelming but you'll get the hang of it "
"through a lot of practice."
msgstr ""

#: ../mastering_plone/custom_search.rst:4
msgid "Custom Search"
msgstr "Busqueda Personalizada"

#: ../mastering_plone/custom_search.rst:6
msgid ""
"If the chapters about views seem complex, the custom search add-ons shown "
"below might be a great alternative until you feel comfortable writing views "
"and templates. Here are two addons that allow you to add custom searches and"
" content listings through the web in Plone."
msgstr ""

#: ../mastering_plone/custom_search.rst:12
msgid "eea.facetednavigation"
msgstr "eea.facetednavigation"

#: ../mastering_plone/custom_search.rst:14
msgid ""
"eea.facetednavigation is a full-featured and a very powerful addon to "
"improve search within large collections of items. No programming skills are "
"required to configure it since the configuration is done TTW. It lets you "
"gradually select and explore different facets (metadata/properties) of the "
"site content and narrow down you search quickly and dynamically."
msgstr ""

#: ../mastering_plone/custom_search.rst:18
msgid ""
"Install `eea.facetednavigation "
"<https://pypi.python.org/pypi/eea.facetednavigation/>`_"
msgstr ""

#: ../mastering_plone/custom_search.rst:19
msgid ""
"Enable it on a new folder \"Discover talks\" by clicking on "
":guilabel:`Actions > Enable faceted navigation`."
msgstr ""

#: ../mastering_plone/custom_search.rst:20
msgid ""
"Click on the :guilabel:`Faceted > Configure` to configure it through the "
"web."
msgstr ""

#: ../mastering_plone/custom_search.rst:22
msgid "Select 'Talk' for *Portal type*, hide *Results per page*"
msgstr "Selecciona \"Talk\" para *Portal type*, oculta  *Results per page*."

#: ../mastering_plone/custom_search.rst:23
msgid ""
"Add a checkboxes widget to the left and use the catalog index *Audience* for"
" it."
msgstr ""

#: ../mastering_plone/custom_search.rst:24
msgid "Add a select widget for speaker"
msgstr ""

#: ../mastering_plone/custom_search.rst:25
msgid "Add a radio widget for type_of_talk"
msgstr ""

#: ../mastering_plone/custom_search.rst:29
msgid "http://www.dipf.de/en/research/projects"
msgstr "http://www.dipf.de/en/research/projects"

#: ../mastering_plone/custom_search.rst:30
msgid "https://www.mountaineers.org/learn/courses-clinics-seminars"
msgstr ""

#: ../mastering_plone/custom_search.rst:31
msgid "https://www.dyna-jet.com/hochdruckreiniger"
msgstr ""

#: ../mastering_plone/custom_search.rst:35
msgid ""
"We use the new catalog indexes to provide the data for the widgets and "
"search the results. For other use cases we could also use either the built-"
"in vocabularies (https://pypi.python.org/pypi/plone.app.vocabularies) or "
"create custom vocabularies for this."
msgstr ""

#: ../mastering_plone/custom_search.rst:37
msgid ""
"Custom vocabularies ttw using `Products.ATVocabularyManager "
"<https://pypi.python.org/pypi/Products.ATVocabularyManager>`_"
msgstr ""
"Vocabularios personalizados a través de la Web usando "
"`Products.ATVocabularyManager "
"<https://pypi.python.org/pypi/Products.ATVocabularyManager>`_"

#: ../mastering_plone/custom_search.rst:38
msgid ""
"Programming using Vocabularies: "
"http://docs.plone.org/external/plone.app.dexterity/docs/advanced/vocabularies.html"
msgstr ""
"Programando usando vocabularios: "
"http://docs.plone.org/external/plone.app.dexterity/docs/advanced/vocabularies.html"

#: ../mastering_plone/custom_search.rst:42
msgid "collective.portlet.collectionfilter"
msgstr ""

#: ../mastering_plone/custom_search.rst:44
msgid ""
"A more light-weight solution for custom searches and faceted navigation is "
"`collective.portlet.collectionfilter "
"<https://pypi.python.org/pypi/collective.portlet.collectionfilter>`_. By "
"default it allows you to search among the results of a collection and/or "
"filter the results by keywords, author or type. It can also be extended "
"quite easily to allow additional filters (like `audience`)."
msgstr ""

#: ../mastering_plone/deployment_code.rst:2
msgid "Releasing Your Code"
msgstr ""

#: ../mastering_plone/deployment_code.rst:4
msgid "zest.releaser"
msgstr "zest.releaser"

#: ../mastering_plone/deployment_code.rst:5
msgid "pypi-test egg deployment"
msgstr "Despliegue de prueba en pypi del paquete egg"

#: ../mastering_plone/deployment_code.rst:7
msgid ""
"We finally have some working code! Depending on your policies, you need "
"repeatable deployments and definitive versions of software. That means you "
"don't just run your production site with your latest source code from your "
"source repository. You want to work with eggs."
msgstr ""
"¡Finalmente tenemos algo de código funcionando! dependiendo de sus "
"políticas, usted necesitaras despliegues repetitivos y versiones definitivas"
" de software. Lo que significa que no corres tu sitio en producción con tu "
"ultimo fuente de tu repositorio de fuentes. Quieres trabajar con paquetes "
"eggs."

#: ../mastering_plone/deployment_code.rst:9
msgid ""
"Making eggs is easy, making them properly not so much. There are a number of"
" good practices that you should ensure. Let's see. You want to have a "
"sensible version number. By looking at the version number alone one should "
"get a good idea how many changes there are (semantic version number scheme)."
" Of course you always document everything, but for upgrades it is even more "
"important to have complete changelogs."
msgstr ""

#: ../mastering_plone/deployment_code.rst:12
msgid ""
"Sometimes, you cannot upgrade to a newer version, but you need a hotfix or "
"whatever. It is crucial that you are able to checkout the exact version you "
"use for your egg."
msgstr ""
"Algunas veces no puedes actualizar a una nueva versión, pero necesitas un "
"parche o algo. Es crucial que seas capaz de chequear la versión exacta que "
"usas de su paquete egg."

#: ../mastering_plone/deployment_code.rst:14
msgid ""
"These are a lot of steps, and there are a lot of actions that can go wrong. "
"Luckily, there is a way to automate it. zest.releaser provides scripts to "
"release an egg, to check what has changed since the release and to check if "
"the documentation has errors."
msgstr ""

#: ../mastering_plone/deployment_code.rst:16
msgid ""
"There once was a book on python. Among other things, it had a chapter on "
"releasing an egg with sample code. The sample code was about a printer of "
"nested lists. This resulted in a lot of packages to print out nested lists "
"on pypi."
msgstr ""

#: ../mastering_plone/deployment_code.rst:18
msgid ""
"We will avoid this. Everybody, go to `testpypi.python.org "
"<https://testpypi.python.org/pypi>`_ and create an account now."
msgstr ""

#: ../mastering_plone/deployment_code.rst:20
msgid ""
"Next, copy the pypirc_sample file to ~/.pypirc, modify it to contain your "
"real username and password."
msgstr ""
"Siguiente, copia el archivo pypirc_sample a ~/.pypirc, modifiquelo para "
"contener tu usuario y contraseña real."

#: ../mastering_plone/deployment_code.rst:22
msgid "Now that we are prepared, let's install zest.releaser."
msgstr "Ahora que estamos preparados, Instale el paquete zest.releaser."

#: ../mastering_plone/deployment_code.rst:24
msgid "lasttagdiff"
msgstr "lasttagdiff"

#: ../mastering_plone/deployment_code.rst:25
msgid "longtest"
msgstr "longtest"

#: ../mastering_plone/deployment_code.rst:26
msgid "prerelease"
msgstr "prerelease"

#: ../mastering_plone/deployment_code.rst:27
msgid "release"
msgstr "release"

#: ../mastering_plone/deployment_code.rst:28
msgid "postrelease"
msgstr "postrelease"

#: ../mastering_plone/deployment_sites.rst:4
msgid "Buildout II: Getting Ready for Deployment"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:10
msgid "The Starzel buildout"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:12
msgid ""
"Have a look at the buildout some of the trainers use for their projects: "
"https://github.com/starzel/buildout"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:14
msgid "It has some notable features:"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:16
msgid ""
"It extends to config- and version-files on github shared by all projects "
"that use the same version of Plone:"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:24
msgid ""
"It allows to update a project simply by changing the version it extends."
msgstr ""

#: ../mastering_plone/deployment_sites.rst:25
msgid ""
"It allows to update all projects of one version by changing remote files "
"(very useful for HotFixes)."
msgstr ""

#: ../mastering_plone/deployment_sites.rst:26
msgid "It is minimal work to setup a new project."
msgstr ""

#: ../mastering_plone/deployment_sites.rst:27
msgid "It has presets for development, testing, staging and production."
msgstr ""

#: ../mastering_plone/deployment_sites.rst:28
msgid "It has all the nice development-helpers we use."
msgstr ""

#: ../mastering_plone/deployment_sites.rst:30
msgid "Another noteable buildout to look for inspiration:"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:32
msgid "https://github.com/4teamwork/ftw-buildouts"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:37
msgid "A deployment setup"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:39
msgid ""
"Deploying Plone and production-setups are outside the scope for this "
"training. Please see http://docs.plone.org/manage/deploying/index.html"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:44
msgid "Other tools we use"
msgstr "Otras herramientas a usar"

#: ../mastering_plone/deployment_sites.rst:46
msgid ""
"There are plenty of tools that make developing and managing sites much "
"easier. Here are only some of the ones you might want to check out:"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:48
msgid "Fabric (managing sites)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:49
msgid "Sentry (error monitoring)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:50
msgid "Ansible (managing and provisioning machines)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:51
msgid "Greylog, ELK (logging)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:52
msgid "Nagios, Zabbix (server monitoring)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:53
msgid "jenkins, gitlab-ci, travis, drone.io (Continuous Integration)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:54
msgid "piwik (statistics)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:55
msgid "gitlab (code repo and code review)"
msgstr ""

#: ../mastering_plone/deployment_sites.rst:56
msgid "redmine, taiga, assembla (project-management and ticket-system)"
msgstr ""

#: ../mastering_plone/development_bucarest.rst:2
msgid "Mastering Plone 5: Development"
msgstr ""

#: ../mastering_plone/development_bucarest.rst:5
#: ../mastering_plone/index.rst:21
msgid "Contents:"
msgstr "Contenidos:"

#: ../mastering_plone/dexterity.rst:4
msgid "Dexterity I: \"Through The Web\""
msgstr ""

#: ../mastering_plone/dexterity.rst:8
msgid "Create a new content type called *Talk*."
msgstr ""

#: ../mastering_plone/dexterity.rst:13
msgid "Content types"
msgstr "Tipos de contenidos"

#: ../mastering_plone/dexterity.rst:14
msgid "Archetypes and Dexterity"
msgstr ""

#: ../mastering_plone/dexterity.rst:15
msgid "Fields"
msgstr "Campos"

#: ../mastering_plone/dexterity.rst:16
msgid "Widgets"
msgstr ""

#: ../mastering_plone/dexterity.rst:22
msgid "What is a content type?"
msgstr "¿Qué es un tipo de contenido?"

#: ../mastering_plone/dexterity.rst:24
msgid ""
"A content type is a kind of object that can store information and is "
"editable by users. We have different content types to reflect the different "
"kinds of information about which we need to collect and display information."
" Pages, folders, events, news items, files (binary) and images are all "
"content types."
msgstr ""

#: ../mastering_plone/dexterity.rst:28
msgid ""
"It is common in developing a web site that you'll need customized versions "
"of common content types, or perhaps even entirely new types."
msgstr ""
"Es común en el desarrollo de un sitio Web usted necesitará versiones "
"personalizadas de los tipos de contenido comunes, o tal vez incluso "
"totalmente nuevos tipos."

#: ../mastering_plone/dexterity.rst:30
msgid ""
"Remember the requirements for our project? We wanted to be able to solicit "
"and edit conference talks. We *could* use the **Page** content type for that"
" purpose. But we need to make sure we collect certain bits of information "
"about a talk and we couldn't be sure to get that information if we just "
"asked potential presenters to create a page. Also, we'll want to be able to "
"display talks featuring that special information, and we'll want to be able "
"to show collections of talks. A custom content type will be ideal."
msgstr ""

#: ../mastering_plone/dexterity.rst:39
msgid "The makings of a Plone content type"
msgstr "Los elementos de un tipo de contenido Plone"

#: ../mastering_plone/dexterity.rst:41
msgid "Every Plone content type has the following parts:"
msgstr "Cada tipo de contenido Plone tiene las siguientes partes:"

#: ../mastering_plone/dexterity.rst:45
msgid "Schema"
msgstr "Esquema"

#: ../mastering_plone/dexterity.rst:44
msgid ""
"A definition of fields that comprise a content type; properties of an "
"object."
msgstr ""
"Una definición de campos que comprenden un tipo de contenido; propiedades de"
" un objeto."

#: ../mastering_plone/dexterity.rst:48 ../mastering_plone/export_code.rst:24
msgid "FTI"
msgstr "FTI"

#: ../mastering_plone/dexterity.rst:48
msgid ""
"The \"Factory Type Information\" configures the content type in Plone, "
"assigns it a name, an icon, additional features and possible views to it."
msgstr ""
"La \"Factory Type Information\" configura el tipo de contenido en Plone, "
"asigna un nombre, un icono, características adicionales y posibles vistas."

#: ../mastering_plone/dexterity.rst:54
msgid "Views"
msgstr "Vistas"

#: ../mastering_plone/dexterity.rst:51
msgid ""
"A view is a representation of the object and the content of its fields that "
"may be rendered in response to a request. You may have *one or more* views "
"for an object. Some may be *visual* — intended for display as web pages — "
"others may be intended to satisfy AJAX requests and render content in "
"formats like JSON or XML."
msgstr ""

#: ../mastering_plone/dexterity.rst:59
msgid "Dexterity and Archetypes - A Comparison"
msgstr "Dexterity y Archetypes - Una comparación"

#: ../mastering_plone/dexterity.rst:61
msgid "There are two content frameworks in Plone:"
msgstr ""

#: ../mastering_plone/dexterity.rst:63
msgid "*Dexterity*: new and the coming default."
msgstr ""

#: ../mastering_plone/dexterity.rst:64
msgid "*Archetypes*: old, tried and tested. Widespread, used in many add-ons."
msgstr ""

#: ../mastering_plone/dexterity.rst:65
msgid "Plone 4.x: Archetypes is the default, with Dexterity available."
msgstr ""

#: ../mastering_plone/dexterity.rst:66
msgid "Plone 5.x: Dexterity is the default, with Archetypes available."
msgstr ""

#: ../mastering_plone/dexterity.rst:67
msgid "For both, add and edit forms are created automatically from a schema."
msgstr ""

#: ../mastering_plone/dexterity.rst:69
msgid "What are the differences?"
msgstr "¿Cuales son las diferencias?"

#: ../mastering_plone/dexterity.rst:71
msgid ""
"Dexterity: New, faster, modular, no dark magic for getters and setters."
msgstr ""

#: ../mastering_plone/dexterity.rst:72
msgid ""
"Archetypes had magic setter/getter - use :py:meth:`talk.getAudience()` for "
"the field :py:attr:`audience`."
msgstr ""

#: ../mastering_plone/dexterity.rst:73
msgid ""
"Dexterity: fields are attributes: :py:attr:`talk.audience` instead of "
":py:meth:`talk.getAudience()`."
msgstr ""

#: ../mastering_plone/dexterity.rst:75
msgid "\"Through The Web\" or TTW, i.e. in the browser, without programming:"
msgstr ""

#: ../mastering_plone/dexterity.rst:77
msgid "Dexterity has a good TTW story."
msgstr "Dexterity tiene una buena historia a través de la Web."

#: ../mastering_plone/dexterity.rst:78
msgid "Archetypes has no TTW story."
msgstr "Archetypes no tiene historia a través de la Web."

#: ../mastering_plone/dexterity.rst:79
msgid ""
"UML-modeling: `ArchGenXML <http://docs.plone.org/4/en/old-reference-"
"manuals/archgenxml/index.html>`_ for Archetypes, `agx <http://agx.me>`_ for "
"Dexterity"
msgstr ""
"Modelado UML: `ArchGenXML <http://docs.plone.org/4/en/old-reference-"
"manuals/archgenxml/index.html>`_ para Archetypes, `agx <http://agx.me>`_ "
"para Dexterity"

#: ../mastering_plone/dexterity.rst:81
msgid "Approaches for Developers:"
msgstr "Enfoques para Desarrolladores:"

#: ../mastering_plone/dexterity.rst:83
msgid ""
"Schema in Dexterity: TTW, XML, Python. Interface = schema, often no class "
"needed."
msgstr ""

#: ../mastering_plone/dexterity.rst:84
msgid "Schema in Archetypes: Schema only in Python."
msgstr ""

#: ../mastering_plone/dexterity.rst:86
msgid "Dexterity: Easy permissions per field, easy custom forms."
msgstr ""
"Dexterity: Permisos fácil por cada campo. fácil personalización de "
"formularios."

#: ../mastering_plone/dexterity.rst:87
msgid "Archetypes: Permissions per field are hard, custom forms even harder."
msgstr ""

#: ../mastering_plone/dexterity.rst:88
msgid "If you have to program for old sites you need to know Archetypes!"
msgstr ""
"Si tiene que programar para los sitios antiguos ¡usted necesita saber "
"Archetypes!"

#: ../mastering_plone/dexterity.rst:89
msgid "If starting fresh, go with Dexterity."
msgstr "Si empezar desde cero en nuevo sitios, use Dexterity."

#: ../mastering_plone/dexterity.rst:91
msgid "Extending:"
msgstr "Extendiendo:"

#: ../mastering_plone/dexterity.rst:93
msgid ""
"Dexterity has Behaviors: easily extendable. Just activate a behavior TTW and"
" your content type is e.g. translatable (:py:mod:`plone.app.multilingual`)."
msgstr ""

#: ../mastering_plone/dexterity.rst:94
msgid ""
"Archetypes has :py:mod:`archetypes.schemaextender`. Powerful but not as "
"flexible."
msgstr ""

#: ../mastering_plone/dexterity.rst:96
msgid ""
"We have only used Dexterity for the last few years. We teach Dexterity and "
"not Archetypes because it's more accessible to beginners, has a great TTW "
"story and is the future."
msgstr ""

#: ../mastering_plone/dexterity.rst:99
msgid "Views:"
msgstr "Vistas:"

#: ../mastering_plone/dexterity.rst:101
msgid "Both Dexterity and Archetypes have a default view for content types."
msgstr ""

#: ../mastering_plone/dexterity.rst:102
msgid "Browser Views provide custom views."
msgstr "Browser Views proveen vistas personalizadas."

#: ../mastering_plone/dexterity.rst:103
msgid ""
"You can generate views for content types in the browser without programming "
"(using the :py:mod:`plone.app.mosaic` Add-on)."
msgstr ""

#: ../mastering_plone/dexterity.rst:104
msgid "Display Forms."
msgstr ""

#: ../mastering_plone/dexterity.rst:110
msgid "Modifying existing types"
msgstr "Modificando tipos existentes"

#: ../mastering_plone/dexterity.rst:112
msgid "Go to the control panel http://localhost:8080/Plone/@@dexterity-types"
msgstr "Ir a panel de control http://localhost:8080/Plone/@@dexterity-types"

#: ../mastering_plone/dexterity.rst:113
msgid "Inspect some of the existing default types."
msgstr ""

#: ../mastering_plone/dexterity.rst:114
msgid ""
"Select the type :guilabel:`News Item` and add a new field ``Hot News`` of "
"type :guilabel:`Yes/No`"
msgstr ""

#: ../mastering_plone/dexterity.rst:115
msgid "In another tab, add a *News Item* and you'll see the new field."
msgstr ""

#: ../mastering_plone/dexterity.rst:116
msgid ""
"Go back to the schema-editor and click on `Edit XML Field Model "
"<http://localhost:8080/Plone/dexterity-types/News%20Item/@@modeleditor>`_."
msgstr ""
"Valla al editor de esquema y haga clic en `Editar el modelo de campo XML "
"<http://localhost:8080/Plone/dexterity-types/News%20Item/@@modeleditor>`_."

#: ../mastering_plone/dexterity.rst:117
msgid ""
"Note that the only field in the XML schema of the News Item is the one we "
"just added. All others are provided by behaviors."
msgstr ""

#: ../mastering_plone/dexterity.rst:118
msgid "Edit the form-widget-type so it says:"
msgstr "Editar el de tipo widget del formulario por lo que dice:"

#: ../mastering_plone/dexterity.rst:124
msgid ""
"Edit the News Item again. The widget changed from a radio field to a check "
"box."
msgstr ""

#: ../mastering_plone/dexterity.rst:125
msgid ""
"The new field ``Hot News`` is not displayed when rendering the News Item. "
"We'll take care of this later."
msgstr ""
"El nuevo campo ``Hot News`` no se visualiza cuando se representa la Noticia."
" Nosotros nos ocuparemos de esto más adelante."

#: ../mastering_plone/dexterity.rst:130
msgid ""
"http://docs.plone.org/external/plone.app.contenttypes/docs/README.html"
"#extending-the-types"
msgstr ""
"http://docs.plone.org/external/plone.app.contenttypes/docs/README.html"
"#extending-the-types"

#: ../mastering_plone/dexterity.rst:135
msgid "Creating content types TTW"
msgstr "Creando tipos de contenidos a través de la Web"

#: ../mastering_plone/dexterity.rst:137
msgid ""
"In this step we will create a content type called *Talk* and try it out. "
"When it's ready we will move the code from the web to the file system and "
"into our own add-on. Later we will extend that type, add behaviors and a "
"viewlet for Talks."
msgstr ""
"En este paso vamos a crear un tipo de contenido llamado *Talk* (para las "
"charlas) y probarlo. Cuando esté listo vamos a mover el código fuente de la "
"Web para el sistema de archivos y en nuestro propio complemento. Más tarde "
"vamos a ampliar ese tipo, los comportamientos y añadir un viewlet de las "
"Charlas."

#: ../mastering_plone/dexterity.rst:139
msgid "Add new content type \"Talk\" and some fields for it:"
msgstr ""
"Agregar un nuevo tipo de contenido llamado \"Talk\" y algunos campos para "
"el:"

#: ../mastering_plone/dexterity.rst:141
msgid ""
":guilabel:`Add new field` \"Type of talk\", type \"Choice\". Add options: "
"talk, keynote, training."
msgstr ""

#: ../mastering_plone/dexterity.rst:142
msgid ""
":guilabel:`Add new field` \"Details\", type \"Rich Text\" with a maximal "
"length of 2000."
msgstr ""

#: ../mastering_plone/dexterity.rst:143
msgid ""
":guilabel:`Add new field` \"Audience\", type \"Multiple Choice\". Add "
"options: beginner, advanced, pro."
msgstr ""

#: ../mastering_plone/dexterity.rst:144
msgid ""
"Check the behaviors that are enabled:  *Dublin Core metadata*, *Name from "
"title*. Do we need them all?"
msgstr ""

#: ../mastering_plone/dexterity.rst:146
msgid "Test the content type."
msgstr ""

#: ../mastering_plone/dexterity.rst:147
msgid ""
"Return to the control panel http://localhost:8080/Plone/@@dexterity-types"
msgstr ""
"Regrese al panel de control http://localhost:8080/Plone/@@dexterity-types"

#: ../mastering_plone/dexterity.rst:148
msgid "Extend the new type: add the following fields:"
msgstr ""

#: ../mastering_plone/dexterity.rst:150
msgid "\"Speaker\", type: \"Text line\""
msgstr "\"Speaker\", tipo: \"Línea de texto (cadena de caracteres)\""

#: ../mastering_plone/dexterity.rst:151
msgid "\"Email\", type: \"Email\""
msgstr ""

#: ../mastering_plone/dexterity.rst:152
msgid "\"Image\", type: \"Image\", not required"
msgstr "\"Image\", tipo: \"Image\", no requerido"

#: ../mastering_plone/dexterity.rst:153
msgid "\"Speaker Biography\", type: \"Rich Text\""
msgstr "\"Speaker Biography\", tipo: \"Rich Text\""

#: ../mastering_plone/dexterity.rst:155
msgid "Test again."
msgstr ""

#: ../mastering_plone/dexterity.rst:157
msgid "Here is the complete XML schema created by our actions:"
msgstr ""

#: ../mastering_plone/dexterity.rst:220
msgid "Moving contenttypes into code"
msgstr ""

#: ../mastering_plone/dexterity.rst:222
msgid ""
"It's awesome that we can do so much through the web. But it's also a dead "
"end if we want to reuse this content type in other sites."
msgstr ""
"Es impresionante que podemos hacer tanto a través de la Web. Pero también es"
" un callejón sin salida si queremos volver a utilizar este tipo de contenido"
" en otros sitios."

#: ../mastering_plone/dexterity.rst:224
msgid ""
"Also, for professional development, we want to be able to use version "
"control for our work, and we'll want to be able to add the kind of business "
"logic that will require programming."
msgstr ""
"También, para el desarrollo profesional, queremos ser capaces de utilizar el"
" control de versiones para nuestro trabajo, y vamos a querer ser capaz de "
"añadir la clase de lógica de negocio que requerirá de programación."

#: ../mastering_plone/dexterity.rst:226
msgid ""
"So, we'll ultimately want to move our new content type into a Python "
"package. We're missing some skills to do that, and we'll cover those in the "
"next couple of chapters."
msgstr ""
"Por lo tanto, vamos a última instancia querer mover nuestro nuevo tipo de "
"contenido en un paquete Python. Nos faltan algunas habilidades para hacer "
"eso, y vamos a cubrir aquellos en los próximos dos capítulos."

#: ../mastering_plone/dexterity.rst:230
msgid ""
"`Dexterity Developer Manual "
"<http://docs.plone.org/external/plone.app.dexterity/docs/index.html>`_"
msgstr ""
"`Dexterity Developer Manual "
"<http://docs.plone.org/external/plone.app.dexterity/docs/index.html>`_"

#: ../mastering_plone/dexterity.rst:231
msgid ""
"`The standard behaviors "
"<http://docs.plone.org/external/plone.app.dexterity/docs/reference/standard-"
"behaviours.html>`_"
msgstr ""

#: ../mastering_plone/dexterity.rst:242
msgid ""
"Modify Pages to allow uploading an image as decoration (like News Items do)."
msgstr ""

#: ../mastering_plone/dexterity.rst:247
msgid ""
"Go to the dexterity control panel (http://localhost:8080/Plone/@@dexterity-"
"types)"
msgstr ""

#: ../mastering_plone/dexterity.rst:248
msgid "Click on *Page* (http://127.0.0.1:8080/Plone/dexterity-types/Document)"
msgstr ""
"Haga clic en *Página* (http://127.0.0.1:8080/Plone/dexterity-types/Document)"

#: ../mastering_plone/dexterity.rst:249
msgid ""
"Select the tab *Behaviors* (http://127.0.0.1:8080/Plone/dexterity-"
"types/Document/@@behaviors)"
msgstr ""
"Seleccione la pestaña *Comportamientos* (http://127.0.0.1:8080/Plone"
"/dexterity-types/Document/@@behaviors)"

#: ../mastering_plone/dexterity.rst:250
msgid "Check the box next to :guilabel:`Lead Image` and save."
msgstr ""

#: ../mastering_plone/dexterity.rst:252
msgid "The images are displayed above the title."
msgstr "Las imágenes se muestran por encima del título."

#: ../mastering_plone/dexterity.rst:257
msgid ""
"Create a new content type called *Speaker* and export the schema to a XML "
"File. It should contain the following fields:"
msgstr ""

#: ../mastering_plone/dexterity.rst:260
msgid "Title, type: \"Text Line\""
msgstr ""

#: ../mastering_plone/dexterity.rst:261
msgid "Email, type: \"Email\""
msgstr ""

#: ../mastering_plone/dexterity.rst:262
msgid "Homepage, type: \"URL\" (optional)"
msgstr ""

#: ../mastering_plone/dexterity.rst:263
msgid "Biography, type: \"Rich Text\" (optional)"
msgstr ""

#: ../mastering_plone/dexterity.rst:264
msgid "Company, type: \"Text Line\" (optional)"
msgstr ""

#: ../mastering_plone/dexterity.rst:265
msgid "Twitter Handle, type: \"Text Line\" (optional)"
msgstr ""

#: ../mastering_plone/dexterity.rst:266
msgid "IRC Handle, type: \"Text Line\" (optional)"
msgstr ""

#: ../mastering_plone/dexterity.rst:267
msgid "Image, type: \"Image\" (optional)"
msgstr ""

#: ../mastering_plone/dexterity.rst:269
msgid ""
"Do not use the DublinCore or the Basic behavior since a speaker should not "
"have a description (unselect it in the Behaviors tab)."
msgstr ""

#: ../mastering_plone/dexterity.rst:271
msgid ""
"We could use this content type later to convert speakers into Plone users. "
"We could then link them to their talks."
msgstr ""
"Podríamos utilizar este tipo de contenido después de convertir los ponentes "
"en los usuarios de Plone. Podríamos luego enlazar a sus charlas."

#: ../mastering_plone/dexterity.rst:276
msgid "The schema should look like this:"
msgstr "El esquema debería lucir así:"

#: ../mastering_plone/dexterity.rst:322
msgid ""
"`Dexterity XML "
"<http://docs.plone.org/external/plone.app.dexterity/docs/reference"
"/dexterity-xml.html>`_"
msgstr ""

#: ../mastering_plone/dexterity.rst:323
msgid ""
"`Model-driven types <http://docs.plone.org/external/plone.app.dexterity/docs"
"/model-driven-types.html#model-driven-types>`_"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:4
msgid "Dexterity Types II: Growing Up"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:15
msgid ""
"The existing talks are still lacking some functionality we want to use."
msgstr ""
"Las charlas existentes todavía faltan algunas funciones que queremos "
"utilizar."

#: ../mastering_plone/dexterity_2.rst:17 ../mastering_plone/dexterity_3.rst:18
msgid "In this part we will:"
msgstr "En esta parte vamos a tratar:"

#: ../mastering_plone/dexterity_2.rst:19
msgid "add a marker interface to our talk type,"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:20
msgid "create custom catalog indexes,"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:21
msgid "query the catalog for them,"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:22
msgid "enable some more default features for our type."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:28
msgid "Add a marker interface to the talk type"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:31
msgid "Marker Interfaces"
msgstr "Interfaces Marcador"

#: ../mastering_plone/dexterity_2.rst:33
msgid ""
"The content type `Talk` is not yet a *first class citizen* because it does "
"not implement its own interface. Interfaces are like nametags, telling other"
" elements who and what you are and what you can do. A marker interface is "
"like such a nametag. The talks actually have an auto-generated marker "
"interface ``plone.dexterity.schema.generated.Plone_0_talk``."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:36
msgid ""
"One problem is that the name of the Plone instance ``Plone`` is part of that"
" interface name. If you now moved these types to a site with another name "
"the code that uses these interfaces would no longer find the objects in "
"question."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:38
msgid ""
"To create a real name-tag we add a new :py:class:`Interface` to "
":file:`interfaces.py`:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:58
msgid ""
":py:class:`ITalk` is a marker interface. We can bind Views and Viewlets to "
"content that provide these interfaces. Lets see how we can provide this "
"Interface. There are two solutions for this."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:60
msgid "Let them be instances of a class that implements this Interface."
msgstr ""
"Dejemos que sean las instancias de una clase que implementa esta interfaz."

#: ../mastering_plone/dexterity_2.rst:61
msgid "Register this interface as a behavior and enable it on talks."
msgstr ""
"Registra esta interfaz como un comportamiento y habilite este en el tipo de "
"contenido Talk."

#: ../mastering_plone/dexterity_2.rst:63
msgid ""
"The first option has an important drawback: only *new* talks would be "
"instances of the new class. We would either have to migrate the existing "
"talks or delete them."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:65
msgid ""
"So let's register the interface as a behavior in "
":file:`behaviors/configure.zcml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:75
msgid "And enable it on the type in :file:`profiles/default/types/talk.xml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:88
msgid ""
"Either reinstall the add-on, apply the behavior by hand or run an upgrade "
"step (see below) and the interface will be there."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:90
msgid "Then we can safely bind the ``talkview`` to the new marker interface."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:104
msgid ""
"Now the ``/talkview`` can only be used on objects that implement said "
"interface. We can now also query the catalog for objects providing this "
"interface "
":py:meth:`catalog(object_provides=\"ploneconf.site.interfaces.ITalk\")`. The"
" ``talklistview`` and the ``demoview`` do not get this constraint since they"
" are not only used on talks."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:108
msgid ""
"Just for completeness sake, this is what would have to happen for the first "
"option (associating the :py:class:`ITalk` interface with a :py:class:`Talk` "
"class):"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:110
msgid ""
"Create a new class that inherits from "
":py:class:`plone.dexterity.content.Container` and implements the marker "
"interface."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:122
msgid ""
"Modify the class for new talks in :file:`profiles/default/types/talk.xml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:134
msgid ""
"Create an upgrade step that changes the class of the existing talks. A "
"reuseable method to do such a thing is in "
"`plone.app.contenttypes.migration.dxmigration.migrate_base_class_to_new_class"
" "
"<https://github.com/plone/plone.app.contenttypes/blob/master/plone/app/contenttypes/migration/dxmigration.py#L130>`_."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:139
msgid "Upgrade steps"
msgstr "Pasos de actualización"

#: ../mastering_plone/dexterity_2.rst:141
msgid ""
"When projects evolve you sometimes want to modify various things while the "
"site is already up and brimming with content and users. Upgrade steps are "
"pieces of code that run when upgrading from one version of an add-on to a "
"newer one. They can do just about anything. We will use an upgrade-step to "
"enable the new behavior instead of reinstalling the addon."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:144
msgid "We will create an upgrade step that:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:146
msgid ""
"runs the typeinfo step (i.e. loads the GenericSetup configuration stored in "
"``profiles/default/types.xml`` and ``profiles/default/types/...`` so we "
"don't have to reinstall the add-on to have our changes from above take "
"effect) and"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:147
msgid ""
"cleans up the talks that might be scattered around the site in the early "
"stages of creating it. We will move all talks to a folder ``talks`` (unless "
"they already are there)."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:149
msgid ""
"Upgrade steps can be registered in their own ZCML file to prevent cluttering"
" the main :file:`configure.zcml`. Include a new :file:`upgrades.zcml` in our"
" :file:`configure.zcml` by adding:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:155
msgid "Create :file:`upgrades.zcml`:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:178
msgid ""
"The upgrade step bumps the version number of the GenericSetup profile of "
":py:mod:`ploneconf.site` from 1000 to 1001. The version is stored in "
":file:`profiles/default/metadata.xml`. Change it to"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:184
msgid ""
"GenericSetup now expects the code as a method :py:meth:`upgrade_site` in the"
" file :file:`upgrades.py`. Let's create it."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:237 ../mastering_plone/registry.rst:240
msgid "Note:"
msgstr "Nota:"

#: ../mastering_plone/dexterity_2.rst:239
msgid "Upgrade-steps get the tool ``portal_setup`` passed as their argument."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:240
msgid ""
"The ``portal_setup`` tool has a method :py:meth:`runImportStepFromProfile`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:241
msgid "We create the needed folder-structure if it does not exists."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:243
msgid "After restarting the site we can run the step:"
msgstr ""
"Después de iniciar de nuevo el sitio, nosotros podemos ejecutar el paso de "
"actualizacion:"

#: ../mastering_plone/dexterity_2.rst:245
msgid ""
"Go to the :guilabel:`Add-ons` control panel "
"http://localhost:8080/Plone/prefs_install_products_form. There should now be"
" a new section **Upgrades** and a button to upgrade from 1000 to 1001."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:247
msgid "Run the upgrade step by clicking on it."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:249
msgid "On the console you should see logging messages like::"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:253
msgid "Alternatively you also select which upgrade steps to run like this:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:255
msgid "In the ZMI go to *portal_setup*"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:256
msgid "Go to the tab :guilabel:`Upgrades`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:257
msgid ""
"Select :guilabel:`ploneconf.site` from the dropdown and click "
":guilabel:`Choose profile`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:258
msgid "Run the upgrade step."
msgstr "Ejecutar el paso de actualización."

#: ../mastering_plone/dexterity_2.rst:262
msgid "http://docs.plone.org/develop/addons/components/genericsetup.html#id1"
msgstr "http://docs.plone.org/develop/addons/components/genericsetup.html#id1"

#: ../mastering_plone/dexterity_2.rst:267
msgid ""
"Upgrading from an older version of Plone to a newer one also runs upgrade "
"steps from the package :py:mod:`plone.app.upgrade`. You should be able to "
"upgrade a clean site from 2.5 to 5.0 with one click."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:269
msgid ""
"For an example see the upgrade-step to Plone 5.0a1 "
"https://github.com/plone/plone.app.upgrade/blob/master/plone/app/upgrade/v50/alphas.py#L37"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:276
msgid "Add a browserlayer"
msgstr "Agregar una browserlayer"

#: ../mastering_plone/dexterity_2.rst:278
msgid ""
"A browserlayer is another such marker interface. Browserlayers allow us to "
"easily enable and disable views and other site functionality based on "
"installed add-ons and themes."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:280
msgid ""
"Since we want the features we write only to be available when "
":py:mod:`ploneconf.site` actually is installed we can bind them to a "
"browserlayer."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:282
msgid ""
"Our package already has a browserlayer (added by "
":py:mod:`bobtemplates.plone`). See :file:`interfaces.py`:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:303
msgid ""
"It is enabled by GenericSetup when installing the package since it is "
"registered in the :file:`profiles/default/browserlayer.xml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:315
msgid "We should bind all views to it. Here is an example using the talkview."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:329
msgid ""
"Note the relative Python path :py:class:`..interfaces.IPloneconfSiteLayer`. "
"It is equivalent to the absolute path "
":py:class:`ploneconf.site.interfaces.IPloneconfSiteLayer`."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:333
msgid "http://docs.plone.org/develop/plone/views/layers.html"
msgstr "http://docs.plone.org/develop/plone/views/layers.html"

#: ../mastering_plone/dexterity_2.rst:339
msgid ""
"Do you need to bind the :ref:`viewlets1-social2-label` from the chapter "
"'Writing Viewlets' to this new browser layer?"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:344
msgid ""
"No, it would make no difference since the viewlet is already bound to the "
"marker interface :py:class:`ploneconf.site.behaviors.social.ISocial`."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:349
msgid "Add catalog indexes"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:351
msgid ""
"In the ``talklistview`` we had to wake up all objects to access some of "
"their attributes. That is OK if we don't have many objects and they are "
"light dexterity objects. If we had thousands of objects this might not be a "
"good idea."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:354
msgid ""
"Instead of loading them all into memory we will use catalog indexes to get "
"the data we want to display."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:356
msgid "Add a new file :file:`profiles/default/catalog.xml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:378
msgid ""
"This adds new indexes for the three fields we want to show in the listing. "
"Note that *audience* is a :py:class:`KeywordIndex` because the field is "
"multi-valued, but we want a separate index entry for every value in an "
"object."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:380
msgid ""
"The ``column ..`` entries allow us to display the values of these indexes in"
" the tableview of collections."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:384
msgid ""
"Until Plone 4.3.2 adding indexes in :file:`catalog.xml` was harmful because "
"reinstalling the add-on purged the indexes! See https://www.starzel.de/blog/a"
"-reminder-about-catalog-indexes."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:386
msgid "Reinstall the add-on"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:387
msgid ""
"Go to http://localhost:8080/Plone/portal_catalog/manage_catalogAdvanced to "
"update the catalog"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:388
msgid ""
"Go to http://localhost:8080/Plone/portal_catalog/manage_catalogIndexes to "
"inspect and manage the new indexes"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:392
msgid ""
"http://docs.plone.org/develop/plone/searching_and_indexing/indexing.html"
msgstr ""
"http://docs.plone.org/develop/plone/searching_and_indexing/indexing.html"

#: ../mastering_plone/dexterity_2.rst:396
msgid ""
"The new indexes are still empty. We'll have to reindex them. To do so by "
"hand go to http://localhost:8080/Plone/portal_catalog/manage_catalogIndexes,"
" select the new indexes and click :guilabel:`Reindex`. We could also rebuild"
" the whole catalog by going to the :guilabel:`advanced`-tab and clicking "
":guilabel:`Clear and Rebuild`. For large sites that can take a long time."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:398
msgid ""
"We could also write an upgrade step to enable the catalog-indexes and "
"reindex all talks:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:412
msgid "Query for custom indexes"
msgstr "Consulta para índices personalizados"

#: ../mastering_plone/dexterity_2.rst:414
msgid "The new indexes behave like the ones that Plone has already built in:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:428
msgid ""
"We now can use the new indexes to improve the talklistview so we don't have "
"to *wake up* the objects any more. Instead we use the brains' new "
"attributes."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:453
msgid ""
"The template does not need to be changed and the result in the browser did "
"not change, either. But when listing a large number of objects the site will"
" now be faster since all the data you use comes from the catalog and the "
"objects do not have to be loaded into memory."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:458
msgid "Add collection criteria"
msgstr "Agregar criterio de colección"

#: ../mastering_plone/dexterity_2.rst:460
msgid ""
"To be able to search content in collections using these new indexes we would"
" have to register them as criteria for the querystring widget that "
"collections use. As with all features make sure you only do this if you "
"really need it!"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:463
msgid "Add a new file :file:`profiles/default/registry.xml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:506
msgid ""
"http://docs.plone.org/develop/plone/functionality/collections.html#add-new-"
"collection-criteria-new-style-plone-app-collection-installed"
msgstr ""
"http://docs.plone.org/develop/plone/functionality/collections.html#add-new-"
"collection-criteria-new-style-plone-app-collection-installed"

#: ../mastering_plone/dexterity_2.rst:512
msgid "Add versioning through GenericSetup"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:514
msgid ""
"Configure the versioning policy and a diff-view for talks through "
"GenericSetup."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:516
msgid "Add new file :file:`profiles/default/repositorytool.xml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:532
msgid "Add new file :file:`profiles/default/diff_tool.xml`"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:546
msgid ""
"Finally you need to activate the versioning behavior on the content type. "
"Edit :file:`profiles/default/types/talk.xml`:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:562
msgid ""
"There is currently a bug that breaks showing diffs when multiple-choice "
"fields were changed."
msgstr ""

#: ../mastering_plone/dexterity_2.rst:568
msgid "The talks are now grown up:"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:570
msgid "They provide a interface to which you can bind features like views"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:571
msgid "Some fields are indexed in the catalog making the listing faster"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:572
msgid "Talks are now versioned"
msgstr ""

#: ../mastering_plone/dexterity_2.rst:573
msgid "You wrote your first upgrade-step to move the talks around: Whopee!"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:4
msgid "Dexterity Types III: Python"
msgstr "Tipos Dexterity - Parte III: Python"

#: ../mastering_plone/dexterity_3.rst:15
msgid ""
"Without sponsors, a conference would be hard to finance! Plus it is a good "
"opportunity for Plone companies to advertise their services. But sponsors "
"want to be displayed in a nice way according to the size of their "
"sponsorship."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:20
msgid "create the content type *sponsor* that has a Python schema,"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:21
msgid ""
"create a viewlet that shows the sponsor logos sorted by sponsoring level."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:24 ../mastering_plone/frontpage.rst:22
msgid "The topics we cover are:"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:26
msgid "Python schema for Dexterity"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:27
msgid "schema hint and directives"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:28
msgid "field permissions"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:29
msgid "image scales"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:30
msgid "caching"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:34
msgid "The Python schema"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:36
msgid ""
"First we create the schema for the new type. Instead of XML, we use Python "
"this time. In chapter :ref:`export_code-label` you already created a folder "
":file:`content` with an empty :file:`__init__.py` in it. We don't need to "
"register that folder in :file:`configure.zcml` since we don't need a "
":file:`content/configure.zcml` (at least not yet)."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:40
msgid "Now add a new file :file:`content/sponsor.py`."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:105
msgid "Some things are notable here:"
msgstr "Algunas cosas son notables aquí:"

#: ../mastering_plone/dexterity_3.rst:107
msgid ""
"The fields in the schema are mostly from :py:mod:`zope.schema`. A reference "
"of available fields is at "
"http://docs.plone.org/external/plone.app.dexterity/docs/reference/fields.html"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:108
msgid ""
"In :samp:`directives.widget(level=RadioFieldWidget)` we change the default "
"widget for a Choice field from a dropdown to radio-boxes. An incomplete "
"reference of available widgets is at "
"http://docs.plone.org/external/plone.app.dexterity/docs/reference/widgets.html"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:109
msgid ""
":py:class:`LevelVocabulary` is used to create the options used in the field "
"``level``. This way we could easily translate the displayed value."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:110
msgid ""
":samp:`fieldset('Images', fields=['logo', 'advertisement'])` moves the two "
"image fields to another tab."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:111
msgid ""
":samp:`directives.read_permission(...)` sets the read and write permission "
"for the field ``notes`` to users who can add new members. Usually this "
"permission is only granted to Site Administrators and Managers. We use it to"
" store information that should not be publicly visible. Please note that "
":py:attr:`obj.notes` is still accessible in templates and Python. Only using"
" the widget (like we do in the view later) checks for the permission."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:112
msgid "We use no grok here."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:116
msgid ""
"`All available Fields "
"<http://docs.plone.org/external/plone.app.dexterity/docs/reference/fields.html"
"#field-types>`_"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:117
msgid ""
"`Schema-driven types with Dexterity "
"<http://docs.plone.org/external/plone.app.dexterity/docs/schema-driven-"
"types.html#schema-driven-types>`_"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:118
msgid ""
"`Form schema hints and directives "
"<http://docs.plone.org/external/plone.app.dexterity/docs/reference/form-"
"schema-hints.html>`_"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:121
msgid "The FTI"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:123
msgid ""
"Second we create the FTI for the new type in "
":file:`profiles/default/types/sponsor.xml`"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:174
msgid "Then we register the FTI in :file:`profiles/default/types.xml`"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:188
msgid "After reinstalling our package we can create the new type."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:194
msgid ""
"Sponsors are containers but they don't need to be. Turn them into items by "
"changing their class to :py:class:`plone.dexterity.content.Item`."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:199
msgid "Simply modify the property ``klass`` in the FTI and reinstall."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:208
msgid "The view"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:210
msgid ""
"We use the default view provided by dexterity for testing since we will only"
" display the sponsors in a viewlet and not in their own page."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:212
msgid ""
"But we could tweak the default view with some CSS to make it less ugly. Add "
"the following to :file:`resources/ploneconf.css`:"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:227
msgid "If we really want a custom view for sponsors it could look like this."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:270
msgid ""
"Note how we handle the field with special permissions: "
":samp:`tal:condition=\"python: 'notes' in view.w\"` checks if the "
"convenience-dictionary :py:data:`w` (provided by the base class "
":py:class:`DefaultView`) holds the widget for the field ``notes``. If the "
"current user does not have the permission :py:mod:`cmf.ManagePortal` it will"
" be omitted from the dictionary and get an error since ``notes`` would not "
"be a key in :py:data:`w`. By first checking if it's missing we work around "
"that."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:275
msgid "The viewlet"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:277
msgid ""
"Instead of writing a view you will have to display the sponsors at the "
"bottom of the website in a viewlet."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:279
#: ../mastering_plone/viewlets_1.rst:152
msgid "Register the viewlet in :file:`browser/configure.zcml`"
msgstr "Registrar el viewlet en el archivo :file:`browser/configure.zcml`"

#: ../mastering_plone/dexterity_3.rst:294
msgid "Add the viewlet class in :file:`browser/viewlets.py`"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:364
msgid ""
":py:meth:`_sponsors` returns a list of dictionaries containing all necessary"
" info about sponsors."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:365
msgid ""
"We create the complete img tag using a custom scale (200x80) using the view "
"``images`` from :py:mod:`plone.namedfile.` This actually scales the logos "
"and saves them as new blobs."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:366
msgid ""
"In :py:meth:`sponsors` we return an ordered dictionary of randomized lists "
"of dicts (containing the information on sponsors). The order is by sponsor-"
"level since we want the platinum-sponsors on top and the bronze-sponsors at "
"the bottom. The randomization is for fairness among equal sponsors."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:368
msgid ""
":py:meth:`_sponsors` is cached for an hour using `plone.memoize "
"<http://docs.plone.org/manage/deploying/performance/decorators.html#timeout-"
"caches>`_. This way we don't need to keep all sponsor objects in memory all "
"the time. But we'd have to wait for up to an hour until changes will be "
"visible."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:370
msgid ""
"Instead we should cache until one of the sponsors is modified by using a "
"callable :py:func:`_sponsors_cachekey` that returns a number that changes "
"when a sponsor is modified."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:387
msgid ""
"`Guide to Caching "
"<http://docs.plone.org/manage/deploying/caching/index.html>`_"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:388
msgid ""
"`Cache decorators "
"<http://docs.plone.org/manage/deploying/performance/decorators.html>`_"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:389
msgid ""
"`Image Scaling <http://docs.plone.org/develop/plone/images/content.html"
"#creating-scales>`_"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:393
msgid "The template for the viewlet"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:395
msgid "Add the template :file:`browser/templates/sponsors_viewlet.pt`"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:428
msgid ""
"You can now add some CSS in :file:`browser/static/ploneconf.css` to make it "
"look OK."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:447
msgid ""
"Turn the content type Speaker from :ref:`Exercise 2 of the first chapter on "
"dexterity <dexterity1-excercises-label>` into a Python-based type."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:449
msgid "When we're done, it should have the following fields:"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:451
msgid "title"
msgstr "título"

#: ../mastering_plone/dexterity_3.rst:452
msgid "email"
msgstr "correo electrónico"

#: ../mastering_plone/dexterity_3.rst:453
msgid "homepage"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:454
msgid "biography"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:455
msgid "company"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:456
msgid "twitter_name"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:457
msgid "irc_name"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:458
msgid "image"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:460
msgid ""
"Do *not* use the :py:class:`IBasic` or :py:class:`IDublinCore` behavior to "
"add title and description. Instead add your own field ``title`` and give it "
"the title *Name*."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:527
msgid "Register the type in :file:`profiles/default/types.xml`"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:542
msgid ""
"The FTI goes in :file:`profiles/default/types/speaker.xml`. Again we use "
":py:class:`Item` as the base-class:"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:592
msgid "After reinstalling the package the new type is usable."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:596 ../mastering_plone/features.rst:113
msgid "Exercise 3"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:598
msgid ""
"This is more of a Python exercise. The gold- and bronze sponsors should also"
" have a bigger logo than the others. Give the sponsors the following logo-"
"sizes without using CSS."
msgstr ""

#: ../mastering_plone/dexterity_3.rst:600
msgid "Platinum: 500x200"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:601
msgid "Gold: 350x150"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:602
msgid "Silver: 200x80"
msgstr ""

#: ../mastering_plone/dexterity_3.rst:603
msgid "Bronze: 150x60"
msgstr ""

#: ../mastering_plone/eggs1.rst:4
msgid "Write Your Own Add-Ons to Customize Plone"
msgstr ""

#: ../mastering_plone/eggs1.rst:19
msgid ""
"Create a custom Python package :py:mod:`ploneconf.site` to hold all the code"
msgstr ""

#: ../mastering_plone/eggs1.rst:20
msgid "Modify buildout to install that package"
msgstr ""

#: ../mastering_plone/eggs1.rst:25
msgid ":py:mod:`mr.bob` and :py:mod:`bobtemplates.plone`"
msgstr ""

#: ../mastering_plone/eggs1.rst:26
msgid "the structure of eggs"
msgstr ""

#: ../mastering_plone/eggs1.rst:30
msgid "Creating the package"
msgstr ""

#: ../mastering_plone/eggs1.rst:32
msgid ""
"Our own code has to be organized as a Python package, also called *egg*. An "
"egg is a zip file or a directory that follows certain conventions. We are "
"going to use `bobtemplates.plone "
"<https://pypi.python.org/pypi/bobtemplates.plone>`_ to create a skeleton "
"project. We only need to fill in the blanks."
msgstr ""

#: ../mastering_plone/eggs1.rst:34
msgid ""
"We create and enter the :file:`src` directory (*src* is short for *sources*)"
" and call a script called :command:`mrbob` from our buildout's :file:`bin` "
"directory:"
msgstr ""

#: ../mastering_plone/eggs1.rst:42
msgid ""
"We have to answer some questions about the add-on. We will press "
":kbd:`Enter` (i.e. choosing the default value) for all questions except 3 "
"(where you enter your github username if you have one) and 5 (Plone "
"version), where we enter :kbd:`5.0.6`::"
msgstr ""

#: ../mastering_plone/eggs1.rst:60
msgid ""
"If this is your first egg, this is a very special moment. We are going to "
"create the egg with a script that generates a lot of necessary files. They "
"all are necessary, but sometimes in a subtle way. It takes a while to "
"understand their full meaning. Only last year I learned and understood why I"
" should have a :file:`MANIFEST.in` file. You can get along without one, but "
"trust me, you get along better with a proper manifest file."
msgstr ""

#: ../mastering_plone/eggs1.rst:71
msgid "Inspecting the package"
msgstr "Inspeccione el paquete"

#: ../mastering_plone/eggs1.rst:73
msgid ""
"In :file:`src` there is now a new folder :file:`ploneconf.site` and in there"
" is the new package. Let's have a look at some of the files:"
msgstr ""

#: ../mastering_plone/eggs1.rst:76
msgid ""
":file:`bootstrap-buildout.py`, :file:`buildout.cfg`, :file:`travis.cfg`, "
":file:`.travis.yml`, :file:`.coveragerc`"
msgstr ""

#: ../mastering_plone/eggs1.rst:76
msgid ""
"You can ignore these files for now. They are here to create a buildout only "
"for this egg to make testing it easier. Once we start writing tests for this"
" package we will have another look at them."
msgstr ""

#: ../mastering_plone/eggs1.rst:79
msgid ""
":file:`README.rst`, :file:`CHANGES.rst`, :file:`CONTRIBUTORS.rst`, "
":file:`docs/`"
msgstr ""

#: ../mastering_plone/eggs1.rst:79
msgid ""
"The documentation, changelog, the list of contributors and the license of "
"your egg goes in here."
msgstr ""

#: ../mastering_plone/eggs1.rst:82
msgid ":file:`setup.py`"
msgstr ""

#: ../mastering_plone/eggs1.rst:82
msgid ""
"This file configures the package, its name, dependencies and some metadata "
"like the author's name and email address. The dependencies listed here are "
"automatically downloaded when running buildout."
msgstr ""

#: ../mastering_plone/eggs1.rst:89
msgid ":file:`src/ploneconf/site/`"
msgstr ""

#: ../mastering_plone/eggs1.rst:85
msgid ""
"The package itself lives inside a special folder structure. That seems "
"confusing but is necessary for good testability. Our package contains a "
"`namespace package <https://www.python.org/dev/peps/pep-0420/>`_ called "
"*ploneconf.site* and because of this there is a folder :file:`ploneconf` "
"with a :file:`__init__.py` and in there another folder :file:`site` and in "
"there finally is our code. From the buildout's perspective our code is in "
":file:`{your buildout directory}/src/ploneconf.site/src/ploneconf/site/{real"
" code}`"
msgstr ""

#: ../mastering_plone/eggs1.rst:93
msgid ""
"Unless discussing the buildout we will from now on silently omit these "
"folders when describing files and assume that :file:`{your buildout "
"directory}/src/ploneconf.site/src/ploneconf/site/` is the root of our "
"package!"
msgstr ""

#: ../mastering_plone/eggs1.rst:97
msgid ":file:`configure.zcml` (:file:`src/ploneconf/site/configure.zcml`)"
msgstr ""

#: ../mastering_plone/eggs1.rst:97
msgid ""
"The phone book of the distribution. By reading it you can find out which "
"functionality is registered using the component architecture."
msgstr ""

#: ../mastering_plone/eggs1.rst:100
msgid ":file:`setuphandlers.py` (:file:`src/ploneconf/site/setuphandlers.py`)"
msgstr ""

#: ../mastering_plone/eggs1.rst:100
msgid ""
"This holds code that is automatically run when installing and uninstalling "
"our add-on."
msgstr ""

#: ../mastering_plone/eggs1.rst:103
msgid ":file:`interfaces.py` (:file:`src/ploneconf/site/interfaces.py`)"
msgstr ""

#: ../mastering_plone/eggs1.rst:103
msgid ""
"Here a browserlayer is defined in a straightforward python class. We will "
"need it later."
msgstr ""

#: ../mastering_plone/eggs1.rst:106
msgid ":file:`testing.py`"
msgstr ""

#: ../mastering_plone/eggs1.rst:106
msgid "This holds the setup for running tests."
msgstr ""

#: ../mastering_plone/eggs1.rst:109
msgid ":file:`tests/`"
msgstr ""

#: ../mastering_plone/eggs1.rst:109
msgid "This holds the tests."
msgstr ""

#: ../mastering_plone/eggs1.rst:112
msgid ":file:`browser/`"
msgstr ""

#: ../mastering_plone/eggs1.rst:112
msgid ""
"This directory is a python package (because it has a :file:`__init__.py`) "
"and will by convention hold most things that are visible in the browser."
msgstr ""

#: ../mastering_plone/eggs1.rst:115
msgid ":file:`browser/configure.zcml`"
msgstr ""

#: ../mastering_plone/eggs1.rst:115
msgid ""
"The phonebook of the browser package. Here views, resources and overrides "
"are registered."
msgstr ""

#: ../mastering_plone/eggs1.rst:118
msgid ":file:`browser/overrides/`"
msgstr ""

#: ../mastering_plone/eggs1.rst:118
msgid ""
"This add-on is already configured to allow overriding existing default Plone"
" templates."
msgstr ""

#: ../mastering_plone/eggs1.rst:121
msgid ":file:`browser/static/`"
msgstr ""

#: ../mastering_plone/eggs1.rst:121
msgid ""
"A directory that holds static resources (images/css/js). The files in here "
"will be accessible through URLs like "
"``++resource++ploneconf.site/myawesome.css``"
msgstr ""

#: ../mastering_plone/eggs1.rst:124
msgid ":file:`profiles/default/`"
msgstr ""

#: ../mastering_plone/eggs1.rst:124
msgid ""
"This folder contains the GenericSetup profile. During the training we will "
"put some XML files here that hold configuration for the site."
msgstr ""

#: ../mastering_plone/eggs1.rst:127
msgid ":file:`profiles/default/metadata.xml`"
msgstr ""

#: ../mastering_plone/eggs1.rst:127
msgid ""
"Version number and dependencies that are auto-installed when installing our "
"add-on."
msgstr ""

#: ../mastering_plone/eggs1.rst:136
msgid "Including the package in Plone"
msgstr ""

#: ../mastering_plone/eggs1.rst:138
msgid ""
"Before we can use our new package we have to tell Plone about it. Look at "
":file:`buildout.cfg` and see how ``ploneconf.site`` is included in `auto-"
"checkout`, `eggs` and `test`:"
msgstr ""

#: ../mastering_plone/eggs1.rst:183
msgid ""
"This tells Buildout to add the egg :py:mod:`ploneconf.site`. The sources for"
" this eggs are defined in the section ``[sources]`` at the bottom of "
":file:`buildout.cfg`."
msgstr ""

#: ../mastering_plone/eggs1.rst:192
msgid ""
"The tells buildout not to download it from pypi but to do a cjeckout from "
"github put the code in :file:`src/ploneconf.site`."
msgstr ""

#: ../mastering_plone/eggs1.rst:196
msgid ""
"The package ``ploneconf.site`` is now downloaded from github and "
"automatically in the branch master"
msgstr ""

#: ../mastering_plone/eggs1.rst:200
msgid ""
"If you do **not** want to use the prepared package for ploneconf.site from "
"github but write it yourself (we suggest you try that) then add the "
"following instead:"
msgstr ""

#: ../mastering_plone/eggs1.rst:209
msgid ""
"This tells buildout to expect `ploneconf.site` in "
":file:`src/ploneconf.site`. The directive ``fs`` allows you to add eggs on "
"the filesystem without a version control system."
msgstr ""

#: ../mastering_plone/eggs1.rst:212
msgid "Now run buildout to reconfigure Plone with the updated configuration:"
msgstr ""
"Ahora ejecute buildout para reconfigurar Plone con la configuración "
"actualizada:"

#: ../mastering_plone/eggs1.rst:218
msgid ""
"After restarting Plone with :command:`./bin/instance fg` the new add-on "
":py:mod:`ploneconf.site` is available for install like PloneFormGen or Plone"
" True Gallery."
msgstr ""

#: ../mastering_plone/eggs1.rst:220
msgid ""
"We will not install it now since we did not add any of our own code or "
"configuration yet. Let's do that next."
msgstr ""

#: ../mastering_plone/eggs2.rst:4
msgid "Creating Reusable Packages"
msgstr ""

#: ../mastering_plone/eggs2.rst:6
msgid "We already created the package :py:mod:`ploneconf.site`  much earlier."
msgstr ""

#: ../mastering_plone/eggs2.rst:10
msgid "Build your own standalone egg."
msgstr ""

#: ../mastering_plone/eggs2.rst:14
msgid ":py:mod:`mr.bob`"
msgstr ""

#: ../mastering_plone/eggs2.rst:17
msgid ""
"Now you are going to create a feature that is completely independent of the "
"ploneconf site and can be reused in other packages."
msgstr ""

#: ../mastering_plone/eggs2.rst:19
msgid ""
"To make the distinction clear, this is not a package from the namespace "
":samp:`ploneconf` but from :samp:`starzel`."
msgstr ""
"Para hacer la distinción clara, esto no es un paquete de los nombres "
":samp:`ploneconf` pero desde :samp:`starzel`."

#: ../mastering_plone/eggs2.rst:21
msgid "We are going to add a voting behavior."
msgstr "Vamos a agregar el comportamiento voting."

#: ../mastering_plone/eggs2.rst:23
msgid "For this we need:"
msgstr "Para esto nosotros necesitamos:"

#: ../mastering_plone/eggs2.rst:25
msgid "A behavior that stores its data in annotations"
msgstr ""

#: ../mastering_plone/eggs2.rst:26
msgid "A viewlet to present the votes"
msgstr "Un viewlet para presentar los votos."

#: ../mastering_plone/eggs2.rst:27
msgid "A bit of javascript"
msgstr "Un poco de Javascript."

#: ../mastering_plone/eggs2.rst:28
msgid "A bit of css"
msgstr "Un poco de CSS."

#: ../mastering_plone/eggs2.rst:29
msgid ""
"Some helper views so that the Javascript code can communicate with Plone"
msgstr ""
"Algunos helper views para que el código Javascript puede comunicarse con "
"Plone."

#: ../mastering_plone/eggs2.rst:31
msgid ""
"We move to the :file:`src` directory and again use a script called "
":file:`mrbob` from our project's :file:`bin` directory and the template from"
" ``bobtemplates.plone`` to create the package."
msgstr ""

#: ../mastering_plone/eggs2.rst:39
msgid ""
"We press :kbd:`Enter` to all questions *except* our personal data and the "
"Plone version. Here we enter :kbd:`5.0a3`."
msgstr ""

#: ../mastering_plone/embed.rst:4
msgid "Using starzel.votable_behavior in ploneconf.site"
msgstr ""

#: ../mastering_plone/embed.rst:8
msgid "Integrate your own third party package into your site."
msgstr ""

#: ../mastering_plone/embed.rst:12 ../mastering_plone/reusable.rst:12
msgid "Permissions"
msgstr ""

#: ../mastering_plone/embed.rst:13 ../mastering_plone/features.rst:379
msgid "Workflows"
msgstr "Flujos de trabajos"

#: ../mastering_plone/embed.rst:18
msgid ""
"Get the code for this chapter (:doc:`More info <code>`) using this command "
"in the buildout directory:"
msgstr ""

#: ../mastering_plone/embed.rst:27
msgid "We want to use the votable behavior, so that our reviewers can vote."
msgstr ""

#: ../mastering_plone/embed.rst:28
msgid ""
"To show how to use events, we are going to auto-publish talks that have "
"reached a certain rating."
msgstr ""

#: ../mastering_plone/embed.rst:29
msgid "We are not going to let everybody vote everything."
msgstr ""

#: ../mastering_plone/embed.rst:31
msgid "First, we must add our package as a dependency to ploneconf.site."
msgstr ""

#: ../mastering_plone/embed.rst:35
msgid ""
"We do this in two locations. The egg description :file:`setup.py` needs "
":samp:`starzel.votable_behavior` as a dependency. Else no source code will "
"be available."
msgstr ""

#: ../mastering_plone/embed.rst:38
msgid ""
"The persistent configuration needs to be installed when we install our site."
" This is configured in GenericSetup."
msgstr ""

#: ../mastering_plone/embed.rst:40
msgid "We start by editing :file:`setup.py`"
msgstr ""

#: ../mastering_plone/embed.rst:58
msgid "Next up we modify :file:`profiles/default/metadata.xml`"
msgstr ""

#: ../mastering_plone/embed.rst:71 ../mastering_plone/embed.rst:98
msgid "... only:: not presentation"
msgstr ""

#: ../mastering_plone/embed.rst:73
msgid ""
"What a weird name. profile- is a prefix you will always need nowadays. Then "
"comes the egg name, and the part after the colon is the name of the profile."
" The name of the profile is defined in zcml. So far I've stumbled over only "
"one package where the profile directory name was different than the "
"GenericSetup Profile name."
msgstr ""

#: ../mastering_plone/embed.rst:75
msgid ""
"Now the package is there, but nothing is votable. That is because no content"
" type declares to use this behavior. We can add this behavior via the "
"control panel, export the settings and store it in our egg. Let's just add "
"it by hand now."
msgstr ""

#: ../mastering_plone/embed.rst:77
msgid ""
"To add the behavior to talks, we do this in "
":file:`profiles/default/types/talk.xml`"
msgstr ""

#: ../mastering_plone/embed.rst:81
msgid ""
"After changing the :file:`metadata.xml` you have to restart your site since "
"unlike other GenericSetup XML files that file is cached."
msgstr ""

#: ../mastering_plone/embed.rst:83
msgid ""
"Managing dependencies in :file:`metadata.xml` is good practice. We can't "
"rely on remembering what we'd have to do by hand. In Plone 4 we should also "
"have added :samp:`<dependency>profile-plone.app.contenttypes:plone-"
"content</dependency>` like the `documentation for plone.app.contenttypes "
"<http://docs.plone.org/external/plone.app.contenttypes/docs/README.html"
"#installation-as-a-dependency-from-another-product>`_ recommends."
msgstr ""

#: ../mastering_plone/embed.rst:86
msgid ""
"Read more: "
"http://docs.plone.org/develop/addons/components/genericsetup.html#dependencies"
msgstr ""

#: ../mastering_plone/embed.rst:100
msgid "Now you can reinstall your Plone site."
msgstr ""

#: ../mastering_plone/embed.rst:102
msgid ""
"Everybody can now vote on talks. That's not what we wanted. We only want "
"reviewers to vote on *pending* Talks. This means the permission has to "
"change depending on the workflow state. Luckily, workflows can be configured"
" to do just that. Since Talks already have their own workflow we also won't "
"interfere with other content."
msgstr ""

#: ../mastering_plone/embed.rst:106
msgid ""
"First, we have to tell the workflow that it will be managing more "
"permissions. Next, for each state we have to configure which role has the "
"two new permissions."
msgstr ""

#: ../mastering_plone/embed.rst:108
msgid ""
"That is a very verbose configuration, maybe you want to do it in the web "
"interface and export the settings. Whichever way you choose, it is easy to "
"make a simple mistake. I will just present the XML way here."
msgstr ""

#: ../mastering_plone/embed.rst:111
msgid ""
"The config for the Workflow is in "
":file:`profiles/default/workfows/talks_workflow.xml`"
msgstr ""

#: ../mastering_plone/embed.rst:169
msgid "We have to reinstall our product again."
msgstr ""

#: ../mastering_plone/embed.rst:171
msgid ""
"But this time, this is not enough. Permissions get updated on workflow "
"changes. As long as a workflow change didn't happen, the talks have the same"
" permissions as ever."
msgstr ""

#: ../mastering_plone/embed.rst:173
msgid ""
"Luckily, there is a button for that in the ZMI Workflow view "
":guilabel:`Update security settings`."
msgstr ""

#: ../mastering_plone/embed.rst:175
msgid ""
"After clicking on this, only managers and Reviewers can see the Voting "
"functionality."
msgstr ""

#: ../mastering_plone/embed.rst:177
msgid "Lastly, we add our silly function to auto-approve talks."
msgstr ""

#: ../mastering_plone/embed.rst:179
msgid ""
"You quickly end up writing many event handlers, so we put everything into a "
"directory for eventhandlers."
msgstr ""

#: ../mastering_plone/embed.rst:181
msgid "For the events we need an :file:`events` directory."
msgstr ""

#: ../mastering_plone/embed.rst:183
msgid ""
"Create the :file:`events` directory and add an empty "
":file:`events/__init__.py` file."
msgstr ""

#: ../mastering_plone/embed.rst:185
msgid "Next, register the events directory in :file:`configure.zcml`"
msgstr ""

#: ../mastering_plone/embed.rst:192
msgid ""
"Now write the ZCML configuration for the events into "
":file:`events/configure.zcml`"
msgstr ""

#: ../mastering_plone/embed.rst:211
msgid ""
"This looks like a MultiAdapter. We want to get notified when an IVotable "
"object gets modified. Our method will receive the votable object and the "
"event itself."
msgstr ""

#: ../mastering_plone/embed.rst:213
msgid "And finally, our event handler in :file:`events/votable.py`"
msgstr ""

#: ../mastering_plone/embed.rst:231
msgid ""
"We are using a lot of plone api here. Plone API makes the code a breeze. "
"Also, there is nothing really interesting. We will only do something if the "
"workflow state is pending and the average vote is above 0.5. As you can see,"
" the :samp:`transition` Method does not want the target state, but the "
"transition to move the state to the target state."
msgstr ""

#: ../mastering_plone/embed.rst:235
msgid "There is nothing special going on."
msgstr ""

#: ../mastering_plone/events.rst:4
msgid "Turning Talks into Events"
msgstr ""

#: ../mastering_plone/events.rst:15
msgid ""
"We forgot something: A list of talks is great especially if you can sort it "
"by your preferences. But if a visitor decides he wants to actually go to see"
" a talk he needs to know when it will take place."
msgstr ""

#: ../mastering_plone/events.rst:17
msgid ""
"We need a schedule and for this we need to store the information when a talk"
" will happen."
msgstr ""
"Necesitamos un programa y para ello necesitamos almacenar la información en "
"una charla va a suceder."

#: ../mastering_plone/events.rst:19
msgid ""
"Luckily the default type *Event* is based on reusable behaviors from the "
"package plone.app.event."
msgstr ""

#: ../mastering_plone/events.rst:21
msgid "In this chapter we will"
msgstr "En este capítulo vamos a tratar:"

#: ../mastering_plone/events.rst:23
msgid "enable this behavior for talks"
msgstr "Habilitar este comportamiento para las charlas."

#: ../mastering_plone/events.rst:24
msgid "display the date in the talkview and talklistview"
msgstr ""

#: ../mastering_plone/events.rst:26
msgid ""
"First we enable the behavior :py:class:`IEventBasic` for talks in "
":py:mod:`profiles/default/types/talk.xml`"
msgstr ""

#: ../mastering_plone/events.rst:40
msgid ""
"After we activate the behavior by hand or reinstalled the add-on we will now"
" have some additional fields for ``start`` and ``end``."
msgstr ""

#: ../mastering_plone/events.rst:42
msgid ""
"To display the new field we reuse a default event summary view as documented"
" in http://ploneappevent.readthedocs.org/en/latest/development.html#reusing-"
"the-event-summary-view-to-list-basic-event-information"
msgstr ""

#: ../mastering_plone/events.rst:44
msgid "Edit :file:`browser/templates/talkview.pt`"
msgstr ""

#: ../mastering_plone/events.rst:92
msgid ""
"Similar to the field `room` the problem now appears that speakers submitting"
" their talks should not be able to set a time and day for their talks. Sadly"
" it is not easy to modify permissions of fields provided by behaviors "
"(unless we write the bahvior ourselves). At least in this case we can take "
"the easy way out since the field does not contain secret information: We "
"will simply hide the fields from contributors using css and show them for "
"reviewers. We will do so in chapter :ref:`resources-label` when we add some "
"css-files."
msgstr ""

#: ../mastering_plone/events.rst:96
msgid "Modify :file:`browser/static/ploneconf.css` and add:"
msgstr ""

#: ../mastering_plone/events.rst:114
msgid ""
"You should also display the start-date of a talk in the talklist. Modify "
":file:`browser/templates/talklistview.pt`"
msgstr ""

#: ../mastering_plone/events.rst:140
msgid ""
"Find out where ``event_summary`` comes from and describe how you could "
"override it."
msgstr ""

#: ../mastering_plone/events.rst:145
msgid ""
"Use your editor or grep to search all zcml-files in the folder "
":file:`packages` for the string ``name=\"event_summary\"``"
msgstr ""

#: ../mastering_plone/events.rst:153
msgid "The relevant registration is:"
msgstr ""

#: ../mastering_plone/events.rst:166
msgid ""
"So there is a class "
":py:class:`plone.app.event.browser.event_summary.EventSummaryView` and a "
"template :file:`event_summary.pt` that could be overridden with "
":py:mod:`z3c.jbot` by copying it as "
":file:`plone.app.event.browser.event_summary.pt` in "
":file:`browser/overrides`."
msgstr ""

#: ../mastering_plone/events.rst:172
msgid ""
"Find out where the event behavior is defined and which fields it offers."
msgstr ""

#: ../mastering_plone/events.rst:177
msgid ""
"The id with which the behavior is registered in :file:`Talk.xml` is a Python"
" path. So :py:class:`plone.app.event.dx.behaviors.IEventBasic` can be found "
"in :file:`packages/plone.app.event/plone/app/event/dx/behaviors.py`"
msgstr ""

#: ../mastering_plone/events.rst:236
msgid "Note how it uses ``defaultFactory`` to set an initial value."
msgstr ""

#: ../mastering_plone/export_code.rst:4
msgid "Return to Dexterity: Moving contenttypes into Code"
msgstr ""

#: ../mastering_plone/export_code.rst:18
msgid "Move the *Talk* type into :py:mod:`ploneconf.site`"
msgstr ""

#: ../mastering_plone/export_code.rst:19
msgid "Improve the schema and the FTI"
msgstr ""

#: ../mastering_plone/export_code.rst:25
msgid "type definitions with generic setup"
msgstr ""

#: ../mastering_plone/export_code.rst:26
msgid "XML schema"
msgstr ""

#: ../mastering_plone/export_code.rst:27
msgid "more widgets"
msgstr ""

#: ../mastering_plone/export_code.rst:29
msgid ""
"Remember the *Talk* content type that we created through-the-web with "
"Dexterity? Let's move that new content type into our add-on package so that "
"it may be installed in other sites without TTW manipulation."
msgstr ""

#: ../mastering_plone/export_code.rst:31
msgid "Steps:"
msgstr "Pasos:"

#: ../mastering_plone/export_code.rst:33
msgid "Return to the Dexterity control panel"
msgstr "Volver al panel del control Tipos de contenido Dexterity"

#: ../mastering_plone/export_code.rst:34
msgid "Export the *Talk* Type Profile and save the file"
msgstr ""

#: ../mastering_plone/export_code.rst:35
msgid ""
"Delete the *Talk* from the site before installing it from the file system"
msgstr ""

#: ../mastering_plone/export_code.rst:36
msgid ""
"Extract the files from the exported tar file and add them to our add-on "
"package in :file:`profiles/default/`"
msgstr ""

#: ../mastering_plone/export_code.rst:40
msgid ""
"From the buildout directory perspective that is "
":file:`src/ploneconf.site/src/ploneconf/site/profiles/default/`"
msgstr ""

#: ../mastering_plone/export_code.rst:42
msgid ""
"The file :file:`profiles/default/types.xml` tells Plone that there is a new "
"content type defined in file :file:`talk.xml`."
msgstr ""

#: ../mastering_plone/export_code.rst:53
msgid ""
"Upon installing, Plone reads the file "
":file:`profiles/default/types/talk.xml` and registers a new type in "
"``portal_types`` (you can find and inspect this tool in the ZMI!) with the "
"information taken from that file."
msgstr ""

#: ../mastering_plone/export_code.rst:151
msgid ""
"Now our package has some real contents. So, we'll need to reinstall it (if "
"installed before)."
msgstr ""
"Ahora nuestro paquete tiene algunos contenidos reales. Por lo tanto, "
"tendremos que volver a instalarlo (si está instalado antes)."

#: ../mastering_plone/export_code.rst:153
msgid "Restart Plone."
msgstr "Reinicie Plone."

#: ../mastering_plone/export_code.rst:154
msgid "Re-install ploneconf.site (deactivate and activate)."
msgstr "Reinstale el paquete ploneconf.site (desactive y active)."

#: ../mastering_plone/export_code.rst:155
msgid "Test the type by adding an object or editing one of the old ones."
msgstr ""
"Pruebe el tipo de contenido agregando un objeto o la edición de una de las "
"entradas antiguas."

#: ../mastering_plone/export_code.rst:156
msgid "Look at how the talks are presented in the browser."
msgstr "Mire cómo se presentan las charlas en el navegador."

#: ../mastering_plone/export_code.rst:158
msgid ""
"The escaped inline xml is simply too ugly to look at. You should move it to "
"a separate file!"
msgstr ""

#: ../mastering_plone/export_code.rst:160
msgid ""
"Create a new folder :file:`content` in the main directory (from the buildout"
" directory perspective that is "
":file:`src/ploneconf.site/src/ploneconf/site/content/`). Inside add an empty"
" file :file:`__init__py` and a file :file:`talk.xml` that contains the real "
"XML (copied from http://localhost:8080/Plone/dexterity-"
"types/talk/@@modeleditor and beautified with some online XML formatter "
"(http://lmgtfy.com/?q=xml+formatter))"
msgstr ""

#: ../mastering_plone/export_code.rst:221
msgid ""
"Now remove the ugly model_source and instead point to the new XML file in "
"the FTI by using the property ``model_file``:"
msgstr ""

#: ../mastering_plone/export_code.rst:228
msgid ""
"``ploneconf.site.content:talk.xml`` points to a file :file:`talk.xml` to be "
"found in the Python path ``ploneconf.site.content``. The :file:`__ìnit__.py`"
" is needed to turn the folder :file:`content` into a Python package. It is "
"best-practice to add schemas in this folder, and in later chapters you will "
"add new types with pythons-schemata in the same folder."
msgstr ""

#: ../mastering_plone/export_code.rst:232
msgid ""
"The default types of Plone 5 also have an xml schema like this since that "
"allows the fields of the types to be editable trough the web! Fields for "
"types with a python schema are not editable ttw."
msgstr ""

#: ../mastering_plone/export_code.rst:235
msgid "Changing a widget"
msgstr ""

#: ../mastering_plone/export_code.rst:237
msgid ""
"`Dexterity XML "
"<http://docs.plone.org/external/plone.app.dexterity/docs/reference"
"/dexterity-xml.html>`_ is very powerful. By editing it (not all features "
"have a UI) you should be able to do everything you can do with a Python "
"schema. Sadly not every feature also is exposed in the UI of the dexterity "
"schema editor. For example you cannot yet change the widgets or permissions "
"for fields in the UI. We need to do this in the xml- or python-schema."
msgstr ""

#: ../mastering_plone/export_code.rst:240
msgid ""
"Our talks use a dropdown for :guilabel:`type_of_talk` and a multiselect for "
":guilabel:`audience`. Radio-buttons and checkboxes would be the better "
"choice here. Modify the XML to make that change happen:"
msgstr ""

#: ../mastering_plone/export_code.rst:305
msgid "Protect fields with permissions"
msgstr ""

#: ../mastering_plone/export_code.rst:307
msgid ""
"We also want to have a add a new field `room` to show where a talk will take"
" place. Our case-study says the speakers will submit the talks online. How "
"should they know in which room the talk will take place (if it got accepted "
"at all)? So we need to hide this field from them by requiring a permission "
"that they do not have."
msgstr ""

#: ../mastering_plone/export_code.rst:312
msgid ""
"Let's assume the prospective speakers will not have the permission to review"
" content (i.e. edit submitted content and publish it) but the organizing "
"commitee has. You can then protect the field using the permission `Review "
"portal content` in this case the name of the permission-utility for this "
"permission: `cmf.ReviewPortalContent`."
msgstr ""

#: ../mastering_plone/export_code.rst:315
msgid ""
"We only want to prevent writing, not reading, so we'll only manage the "
"`write-permission`:"
msgstr ""

#: ../mastering_plone/export_code.rst:396
msgid ""
"http://docs.plone.org/external/plone.app.dexterity/docs/reference/dexterity-"
"xml.html"
msgstr ""

#: ../mastering_plone/export_code.rst:397
msgid ""
"https://github.com/plone/plone.autoform/blob/master/plone/autoform/supermodel.txt"
msgstr ""

#: ../mastering_plone/export_code.rst:403
msgid ""
"Create a new package called :py:mod:`collective.behavior.myfeature`. Inspect"
" the directory structure of this package. Delete it after you are done."
msgstr ""

#: ../mastering_plone/export_code.rst:413
msgid ""
"Many packages that are part of Plone and some add-ons use a nested namespace"
" such as :py:mod:`plone.app.contenttypes`."
msgstr ""

#: ../mastering_plone/export_code.rst:419
msgid ""
"Go to the ZMI and look for the definition of the new ``Talk`` content type "
"in ``portal_types``. Now deactivate :guilabel:`Implicitly addable?` and "
"save. Go back to the site. Can you identify what this change has caused? And"
" why is that useful?"
msgstr ""

#: ../mastering_plone/export_code.rst:424
msgid ""
"Go to http://localhost:8080/Plone/portal_types/talk/manage_propertiesForm"
msgstr ""

#: ../mastering_plone/export_code.rst:426
msgid ""
"When disabling *Implicitly addable* you can no longer add Talks any more "
"unless you change some container like the type *Folder*: Enable *Filter "
"contenttypes?* for it and add *Talk* to the items that are allowed."
msgstr ""

#: ../mastering_plone/export_code.rst:428
msgid ""
"With this method you can prevent content that only makes sense inside some "
"defined structure to show up in places where they do not belong."
msgstr ""

#: ../mastering_plone/export_code.rst:430
msgid ""
"The equivalent setting for disabling :guilabel:`Implicitly addable` in "
":file:`Talk.xml` is:"
msgstr ""

#: ../mastering_plone/extending.rst:4
msgid "Extending Plone"
msgstr "Extendiendo Plone"

#: ../mastering_plone/extending.rst:8
msgid "Get an overview over the technologies used to extend Plone"
msgstr ""

#: ../mastering_plone/extending.rst:12
msgid "Skin folders"
msgstr ""

#: ../mastering_plone/extending.rst:13 ../mastering_plone/extending.rst:74
msgid "GenericSetup"
msgstr "GenericSetup"

#: ../mastering_plone/extending.rst:14 ../mastering_plone/extending.rst:98
msgid "Component Architecture"
msgstr "Arquitectura Componente"

#: ../mastering_plone/extending.rst:15 ../mastering_plone/intro.rst:66
msgid "ZCML"
msgstr "ZCML"

#: ../mastering_plone/extending.rst:18
msgid "Zope is extensible and so is Plone."
msgstr "Zope es extensible y también lo es Plone."

#: ../mastering_plone/extending.rst:22
msgid ""
"If you want to install an add-on, you are going to install an Egg — a form "
"of Python package. Eggs consist of Python files together with other needed "
"files like page templates and the like and a bit of metadata, bundled to a "
"single archive file."
msgstr ""

#: ../mastering_plone/extending.rst:24
msgid ""
"There is a huge variety of Plone-compatible packages available. See "
"`Plone.org add-on listing <https://plone.org/download/add-ons/>`_. The "
"source repository for many public Plone add-ons is `the GitHub Collective "
"<https://github.com/collective>`_. You may also create your own packages or "
"maintain custom repositories."
msgstr ""

#: ../mastering_plone/extending.rst:26
msgid ""
"Eggs are younger than Zope. Zope needed something like eggs before there "
"were eggs, and the Zope developers wrote their own system. Old, outdated "
"Plone systems contain a lot of code that is not bundled in an egg. Older "
"code did not have metadata to register things, instead you needed a special "
"setup method. We don't need this method but you might see it in other code. "
"It is usually used to register Archetypes code. Archetypes is the old "
"content type system. Instead, we use the new content type system Dexterity."
msgstr ""

#: ../mastering_plone/extending.rst:32
msgid "Extension technologies"
msgstr "Tecnologías de extensión"

#: ../mastering_plone/extending.rst:34
msgid "How do you extend Plone?"
msgstr "¿Cómo extender Plone?"

#: ../mastering_plone/extending.rst:36
msgid "This depends on what type of extension you want to create."
msgstr "Esto depende de que tipo de extensión usted quiere crear."

#: ../mastering_plone/extending.rst:41
msgid ""
"You can create extensions with new types of objects to add to your Plone "
"site. Usually these are contenttypes."
msgstr ""

#: ../mastering_plone/extending.rst:42
msgid ""
"You can create an extension that changes or extends functionality. For "
"example to change the way Plone displays search results, or to make pictures"
" searchable by adding a converter from jpg to text."
msgstr ""
"Puede crear una extensión que cambia o se extiende la funcionalidad. Por "
"ejemplo, para cambiar la forma en que Plone muestra los resultados de "
"búsqueda, o para tomar imágenes de búsqueda mediante la adición de un "
"convertidor de JPG a texto."

#: ../mastering_plone/extending.rst:46
msgid "Skin Folders"
msgstr ""

#: ../mastering_plone/extending.rst:56
msgid ""
"Do you remember Acquisition? The Skin Folders extends the concepts of "
"Acquisition. Your Plone site has a folder named ``portal_skins``. This "
"folder has a number of sub folders. The ``portal_skins`` folder has a "
"property that defines in which order Plone searches for attributes or "
"objects in each sub folder."
msgstr ""
"¿Te acuerdas del concepto Adquisición? Las Skin Folders se extiende los "
"conceptos de Adquisición. Su sitio Plone tiene una carpeta denominada "
"``portal_skins``. Esta carpeta tiene una serie de sub-carpetas. La carpeta "
"``portal_skins`` tiene una propiedad que define el orden en que las "
"búsquedas de Plone para atributos u objetos en cada sub-carpeta."

#: ../mastering_plone/extending.rst:58
msgid "The Plone logo is in a skin folder."
msgstr "El logo de Plone está en una carpeta skin."

#: ../mastering_plone/extending.rst:60
msgid ""
"By default, your site has a ``custom`` folder, and items are first searched "
"for in that folder."
msgstr ""
"Por defecto, su sitio tiene una carpeta ``custom``, y los elementos son "
"primero buscados en esa carpeta."

#: ../mastering_plone/extending.rst:62
msgid ""
"To customize the logo, you copy it into the ``custom`` folder, and change it"
" there. This way you can change templates, CSS styles, images and behavior, "
"because a container may contain Python scripts."
msgstr ""

#: ../mastering_plone/extending.rst:64
msgid ""
"Skin-folder style customization may be accomplished TTW via the ZMI, or with"
" add-on packages. Many older-style packages create their own skin folder and"
" add it to the skin layer for Plone when installed."
msgstr ""
"La personalización del estilo de la carpeta Skins se puede lograr a través "
"de la Web usando la ZMI, o con paquetes de complementos. Muchos paquetes de "
"estilo antiguo crean su propia carpeta de skin y la agregan a la capa de "
"skin para Plone cuando se instala."

#: ../mastering_plone/extending.rst:70
msgid "This is deprecated technology."
msgstr ""

#: ../mastering_plone/extending.rst:84
msgid ""
"The next thing is *GenericSetup*. As the name clearly implies, "
"*GenericSetup* is part of CMF."
msgstr ""
"El siguiente paso es *GenericSetup*. Como su nombre lo indica claramente, "
"*GenericSetup* es parte de CMF."

#: ../mastering_plone/extending.rst:86
msgid "GenericSetup is tough to master, I am afraid."
msgstr "Me temo que GenericSetup es difícil de dominar."

#: ../mastering_plone/extending.rst:88
msgid ""
"*GenericSetup* lets you define persistent configuration in XML files. "
"*GenericSetup* parses the XML files and updates the persistent configuration"
" according to the configuration. This is a step you have to run on your own!"
msgstr ""
"*GenericSetup* le permite definir la configuración persistente en archivos "
"XML. *GenericSetup* analiza los archivos XML y actualiza la configuración "
"persistente según la configuración. ¡Este es un paso que tiene que correr "
"por su cuenta!"

#: ../mastering_plone/extending.rst:90
msgid ""
"You will see many objects in Zope or the ZMI that you can customize through "
"the web. If they are well behaving, they can export their configuration via "
"*GenericSetup* and import it again."
msgstr ""
"Usted verá muchos objetos en Zope o la ZMI que se pueden personalizar a "
"través de la web. Si estás personalizaciones están listas, usted puede "
"exportar su configuración a través *GenericSetup* e importarlo de nuevo."

#: ../mastering_plone/extending.rst:92
msgid ""
"Typically you use *GenericSetup* to change workflows or add new content type"
" definitions."
msgstr ""
"Normalmente se utiliza *GenericSetup* para cambiar los flujos de trabajo o "
"añadir nuevas definiciones de tipo de contenido."

#: ../mastering_plone/extending.rst:94
msgid ""
"GenericSetup profiles may also be built into Python packages. Every package "
"that is listed on the add-on package list inside a Plone installation has a "
"GS profile that details how it fits into Plone. Packages that are part of "
"Plone itself may have GS profiles, but are excluded from the active/inactive"
" listing."
msgstr ""
"Los perfiles GenericSetup también pueden ser construidos en los paquetes de "
"Python. Cada paquete que aparece en la lista de paquetes de complemento "
"dentro de una instalación Plone tiene un perfil de GS que detalla cómo "
"encaja en Plone. Los paquetes que forman parte de la propia Plone pueden "
"tener perfiles GS, pero están excluidos de la lista activa / inactiva."

#: ../mastering_plone/extending.rst:109
msgid "The last way to extend Plone is via *Components*."
msgstr "La última manera de extender Plone es a través de los *Componentes*."

#: ../mastering_plone/extending.rst:111
msgid "A bit of history is in order."
msgstr "Un poco de historia está a la orden."

#: ../mastering_plone/extending.rst:113
msgid "When Zope started, object-oriented design was **the** silver bullet."
msgstr ""

#: ../mastering_plone/extending.rst:115
msgid ""
"Object-oriented design is good at modeling inheritance, but breaks down when"
" an object has multiple aspects that are part of multiple taxonomies."
msgstr ""
"Diseño orientado a objetos es bueno en el modelado herencia, pero se rompe "
"cuando un objeto tiene varios aspectos que forman parte de múltiples "
"taxonomías."

#: ../mastering_plone/extending.rst:117
msgid ""
"Some object-oriented programming languages like Python handle this through "
"multiple inheritance. But it's not a good way to do it. Zope objects have "
"more than 10 base classes. Too many namespaces makes code that's hard to "
"maintain. Where did that method/attribute come from?"
msgstr ""
"Algunos lenguajes de programación orientados a objetos como Python manejan "
"esto a través de la herencia múltiple. Pero no es una buena manera de "
"hacerlo. Los objetos Zope tienen más de 10 clases de base. Demasiados "
"espacios de nombres hace al código difícil de mantener. ¿De dónde vino ese "
"método / atributo?"

#: ../mastering_plone/extending.rst:119
msgid ""
"After a while, XML and Components became the next silver bullet (Does "
"anybody remember J2EE?)."
msgstr ""
"Después de un tiempo, XML y los componentes se convirtieron en la próxima "
"**bala de plata** (¿Alguien recuerda J2EE?)."

#: ../mastering_plone/extending.rst:121
msgid ""
"Based on their experiences with Zope in the past, Zope developers thought "
"that a component system configured via XML might be the way to go to keep "
"the code more maintainable."
msgstr ""

#: ../mastering_plone/extending.rst:123
msgid ""
"As the new concepts were radically different from the old Zope concepts, the"
" Zope developers renamed the new project to Zope 3. But it did not gain "
"traction, the community somehow renamed it to Bluebream and this died off."
msgstr ""
"A medida que los nuevos conceptos eran radicalmente diferentes de los viejos"
" conceptos de Zope, los desarrolladores Zope cambió el nombre del nuevo "
"proyecto de Zope 3. Pero no ganaron fuerza, la comunidad de alguna manera le"
" cambió el nombre a Bluebream y esto lo extinguió."

#: ../mastering_plone/extending.rst:125
msgid ""
"But the component architecture itself is quite successful and the Zope "
"developers extracted it into the Zope Toolkit. The Zope toolkit is part of "
"Zope, and Plone developers use it extensively."
msgstr ""

#: ../mastering_plone/extending.rst:127
msgid "This is what you want to use."
msgstr "Esto es lo que usted desea utilizar."

#: ../mastering_plone/extending.rst:133
msgid "What are components, what is ZCML"
msgstr "¿Cuáles son los componentes?, ¿Que es el ZCML?"

#: ../mastering_plone/extending.rst:137
msgid "What is the absolute simplest way to extend functionality?"
msgstr "¿Cuál es la manera más simple absoluta para ampliar la funcionalidad?"

#: ../mastering_plone/extending.rst:139
msgid "Monkey Patching."
msgstr "Monkey Patching."

#: ../mastering_plone/extending.rst:141
msgid ""
"It means that you change code in other files while my file gets loaded."
msgstr ""
"Eso significa que usted puedo cambiar el código en otros archivos mientras "
"mi archivo se carga."

#: ../mastering_plone/extending.rst:143
msgid ""
"If you want to have an extensible registry of icons for different "
"contenttypes, you could create a global dictionary, and whoever implements a"
" new icon for a different content type would add an entry to my dictionary "
"during import time."
msgstr ""

#: ../mastering_plone/extending.rst:145
msgid ""
"This approach, like subclassing via multiple inheritance, does not scale. "
"Multiple plugins might overwrite each other, you would explain to people "
"that they have to reorder the imports, and then, suddenly, you will be "
"forced to import feature A before B, B before C and C before A, or else your"
" application won't work."
msgstr ""

#: ../mastering_plone/extending.rst:147
msgid ""
"The Zope Component Architecture with its ZCML configuration is an answer to "
"these problems."
msgstr ""

#: ../mastering_plone/extending.rst:149
msgid ""
"With ZCML you declare utilities, adapters and browser views in ZCML, which "
"is an XML dialect. ZCML stands for Zope Component Markup Language."
msgstr ""

#: ../mastering_plone/extending.rst:151
msgid ""
"Components are differentiated from one another by the interfaces (formal "
"definitions of functionality) that they require or provide."
msgstr ""
"Los componentes se diferencian entre sí por las interfaces (definiciones "
"formales de funcionalidad) que requieren o proporcionan."

#: ../mastering_plone/extending.rst:153
msgid ""
"During startup, Zope reads all these ZCML statements, validates that there "
"are not two declarations trying to register the same components and only "
"then registers everything. All components are registered by interfaces "
"required and provided. Components with the same interfaces may optionally "
"also be named."
msgstr ""
"Durante el inicio, Zope lee todas estas declaraciones ZCML, valida que no "
"hay dos declaraciones que tratan de registrar los mismos componentes y sólo "
"entonces registra todo. Todos los componentes están registrados por "
"interfaces necesarias y proporcionadas. Los componentes con las mismas "
"interfaces también pueden opcionalmente ser nombrados."

#: ../mastering_plone/extending.rst:155
msgid ""
"This is a good thing. ZCML is, by the way, only *one* way to declare your "
"configuration."
msgstr ""
"Esta es una buena cosa. ZCML es por cierto sólo *una* manera de declarar su "
"configuración."

#: ../mastering_plone/extending.rst:157
msgid ""
"Grok provides another way, where some Python magic allows you to use "
"decorators to register Python classes and functions as components. You can "
"use ZCML and Grok together if you wish."
msgstr ""
"Grok proporciona otra manera, donde un poco de magia Python permite usar "
"decoradores para registrar clases Python y funciones como componentes. Usted"
" puede usar tanto ZCML y Grok juntos si usted lo desea."

#: ../mastering_plone/extending.rst:159
msgid ""
"Some like Grok because it allows you to do nearly everything in your Python "
"source files. No additional XML wiring required. If you're XML-allergic, "
"Grok is your ticket to Python nirvana."
msgstr ""
"A algunos les gusta Grok porque le permite hacer casi todo en sus archivos "
"fuentes Python. No requiere cableado adicional XML. Si usted es alérgico a "
"XML , Grok es su boleto al  nirvana Python."

#: ../mastering_plone/extending.rst:161
msgid ""
"Not everybody loves Grok. Some parts of the Plone community think that there"
" should only be one configuration language, others are against adding the "
"relative big dependency of Grok to Plone. One real problem is the fact that "
"you cannot customize components declared with grok with jbot (which we'll "
"discuss later). Grok is not allowed in the Plone core for these reasons."
msgstr ""
"Tenga en cuenta que no todo el mundo le encanta Grok. Algunas partes de la "
"comunidad Plone piensan que sólo puede haber un lenguaje de configuración, "
"otros están en contra de añadir la gran dependencia relativa de Grok para "
"Plone. Un problema real es el hecho de que no se puede personalizar "
"componentes declarados con Grok con técnicas jbot (del que hablaremos más "
"adelante). Grok no está permitido en el núcleo de Plone por estas razones."

#: ../mastering_plone/extending.rst:163
msgid ""
"The choice to Grok or not to Grok is yours to make. In any case, if you "
"start to write an extension that is reusable, convert your grok declarations"
" to ZCML to get maximum acceptance."
msgstr ""
"La elección de Grok o no Grok es suya. En cualquier caso, si usted comienza "
"a escribir una extensión que es reutilizable, convertir sus declaraciones "
"Grok a ZCML para conseguir la máxima aceptación."

#: ../mastering_plone/extending.rst:165
msgid ""
"Personally, I just find it cumbersome but even for me as a developer it "
"offers a nice advantage: thanks to ZCML, I hardly ever have a hard time to "
"find what and where extensions or customizations are defined. For me, ZCML "
"files are like a phone book."
msgstr ""

#: ../mastering_plone/features.rst:4
msgid "The Features of Plone"
msgstr "Las características de Plone"

#: ../mastering_plone/features.rst:6
msgid "In-depth user-manual: http://docs.plone.org"
msgstr ""

#: ../mastering_plone/features.rst:8
msgid "See also: http://docs.plone.org/working-with-content/index.html"
msgstr ""
"Ver también la versión original del manual (en idioma Ingles) en las "
"siguientes direcciones URL: http://plone.org/documentation/manual/plone-4"
"-user-manual y http://docs.plone.org/working-with-content/index.html"

#: ../mastering_plone/features.rst:13
msgid "Starting and Stopping Plone"
msgstr "Iniciando y Deteniendo Plone"

#: ../mastering_plone/features.rst:15
msgid "We control Plone with a small script called \"instance\"::"
msgstr "Tenemos el control de Plone con un pequeño script llamado \"instance\"::"

#: ../mastering_plone/features.rst:19
msgid ""
"This starts Plone in foreground mode so that we can see what it is doing by "
"monitoring console messages. This is an important development method. Note "
"that when Plone is started in foreground mode, it is also automatically in "
"development mode. Development mode gives better feedback, but is much "
"slower, particularly on Windows."
msgstr ""
"Esto arranca Plone en el modo foreground para que podamos ver lo que está "
"haciendo mediante el control de los mensajes de consola. Este es un método "
"de desarrollo importante. Tenga en cuenta que cuando Plone se inicia en el "
"modo foreground, es también automáticamente en el modo de desarrollo. Modo "
"de desarrollo da una mejor respuesta, pero es mucho más lento, "
"particularmente en Windows."

#: ../mastering_plone/features.rst:25
msgid "You can stop it by pressing :kbd:`ctrl + c`."
msgstr "Usted puede detener el proceso presionando :kbd:`ctrl + c`."

#: ../mastering_plone/features.rst:27
msgid ""
"Apart from the `fg` command the :program:`instance` script offers several "
"more commands. `./bin/instance help` shows the list of available commands, "
"`bin/instance help <command>` will give a short help for each command. Some "
"commands you will use rather often are::"
msgstr ""

#: ../mastering_plone/features.rst:40
msgid ""
"Depending on your computer, it might take up to a minute until Zope will "
"tell you that it's ready to serve requests. On a decent laptop it should be "
"running in under 15 seconds."
msgstr ""

#: ../mastering_plone/features.rst:43
msgid ""
"A standard installation listens on port 8080, so lets have a look at our "
"Zope site by visiting http://localhost:8080"
msgstr ""
"Una instalación estándar escucha en el puerto 8080, así que vamos a echar un"
" vistazo a nuestro sitio Zope visitando http://localhost:8080"

#: ../mastering_plone/features.rst:45
msgid "As you can see, there is no Plone yet!"
msgstr "¡Como puede ver, no hay Plone todavía!"

#: ../mastering_plone/features.rst:47
msgid ""
"We have a running Zope with a database but no content. But luckily there is "
"a button to create a Plone site. Click on that button (login: admin, "
"password: admin). This opens a form to create a Plone site. Use "
":samp:`Plone` as the site id."
msgstr ""

#: ../mastering_plone/features.rst:53
msgid ""
"You now have the option to select some add-ons before you create the site. "
"Since we will use Dexterity from the beginning we select :guilabel"
":`Dexterity-based Plone Default Types`. This way even the initial content on"
" our page will be built with dexterity by the add-on "
":py:mod:`plone.app.contenttypes` which will be the default in Plone 5."
msgstr ""

#: ../mastering_plone/features.rst:57
msgid "You will be automatically redirected to the new site."
msgstr "Usted será automáticamente redirigido al sitio nuevo."

#: ../mastering_plone/features.rst:67
msgid ""
"Plone has many message-boxes. They contain important information. Read them "
"and make sure you understand them!"
msgstr ""
"Plone tiene muchos mensajes. Contienen información importante. ¡Léalos y "
"asegúrese de entender su contenido!"

#: ../mastering_plone/features.rst:77
msgid ""
"Open the `bin/instance` script in your favorite editor. Now let's say you "
"want Plone to listen on port 9080 instead of the default 8080. Looking at "
"the script, how could you do this?"
msgstr ""

#: ../mastering_plone/features.rst:82
msgid ""
"At the end of the `bin/instance` script, you'll see the following code:"
msgstr ""

#: ../mastering_plone/features.rst:91
msgid ""
"The second to last line points to the configuration file your Plone instance"
" is using. An absolute path is used so it might differ depending on the "
"installation method. Open the `zope.conf` file in your editor and look for "
"the section:"
msgstr ""

#: ../mastering_plone/features.rst:100
msgid "Change the address to 9080 and restart your instance."
msgstr ""

#: ../mastering_plone/features.rst:105
msgid ""
"Knowing that `bin/instance debug` basically offers you a Python prompt, how "
"would you start to explore Plone?"
msgstr ""

#: ../mastering_plone/features.rst:110
msgid ""
"Use `locals()` or `locals().keys()` to see Python objects available in Plone"
msgstr ""

#: ../mastering_plone/features.rst:115
msgid ""
"The `app` object you encountered in the previous exercise can be seen as the"
" root of Plone. Once again using Python, can you find your newly created "
"Plone site?"
msgstr ""

#: ../mastering_plone/features.rst:120
msgid ""
"`app.__dict__.keys()` will show `app`'s attribute names - there is one "
"called `Plone`, this is your Plone site object. Use `app.Plone` to access "
"and further explore it."
msgstr ""

#: ../mastering_plone/features.rst:124
msgid ""
"Plone and its objects are stored in an object database, the ZODB. You can "
"use `bin/instance debug` as a database client (in the same way e.g. `psql` "
"is a client for PostgreSQL). Instead of a special query language (like SQL) "
"you simply use Python to access and manipulate ZODB objects. Don't worry if "
"you accidentally change objects in `bin/instance debug` - you would have to "
"commit your changes explicitly to make them permanent. The Python code to do"
" so is:"
msgstr ""

#: ../mastering_plone/features.rst:133
msgid "You have been warned."
msgstr ""

#: ../mastering_plone/features.rst:138
msgid "Walkthrough of the UI"
msgstr "Tutorial de la interfaz de usuario"

#: ../mastering_plone/features.rst:140
msgid "Let's see what is there..."
msgstr "Vamos a ver lo que está ahí..."

#: ../mastering_plone/features.rst:142
msgid ":guilabel:`header`:"
msgstr ""

#: ../mastering_plone/features.rst:144
msgid ":guilabel:`logo`: with a link to the front page"
msgstr ""

#: ../mastering_plone/features.rst:145
msgid ":guilabel:`searchbox`: search (with live-search)"
msgstr ""

#: ../mastering_plone/features.rst:147
msgid ":guilabel:`navigation`: The global navigation"
msgstr ""

#: ../mastering_plone/features.rst:148
msgid ":guilabel:`banner`: A banner. Only visible on the front page."
msgstr ""

#: ../mastering_plone/features.rst:150
msgid ":guilabel:`portal-columns`: a container holding:"
msgstr ":guilabel:`portal-columns`: un contenedor que contienen:"

#: ../mastering_plone/features.rst:152
msgid ""
":guilabel:`portal-column-one`: portlets (configurable boxes with tools like "
"navigation, news etc.)"
msgstr ""

#: ../mastering_plone/features.rst:153
msgid ":guilabel:`portal-column-content`: the content and the editor"
msgstr ":guilabel:`portal-column-content`: el contenido y el editor"

#: ../mastering_plone/features.rst:154
msgid ":guilabel:`portal-column-two`: portlets"
msgstr ":guilabel:`portal-column-two`: portlets"

#: ../mastering_plone/features.rst:156
msgid ""
":guilabel:`portal-footer`: portlets for the footer, site actions, and "
"colophon"
msgstr ""

#: ../mastering_plone/features.rst:158
msgid ""
":guilabel:`edit-zone`: a vertical bar on the left side of the browser window"
" with editing options for the content"
msgstr ""

#: ../mastering_plone/features.rst:162
msgid ""
"These are also the CSS classes of the respective divs. If you want to do "
"theming, you'll need them."
msgstr ""

#: ../mastering_plone/features.rst:165
msgid "On the edit bar, we find options affecting the current context..."
msgstr ""
"En la barra de edición, encontramos opciones que afectan el contexto "
"actual..."

#: ../mastering_plone/features.rst:167
msgid ":guilabel:`folder contents`"
msgstr ":guilabel:`Contenidos`"

#: ../mastering_plone/features.rst:168
msgid ":guilabel:`edit`"
msgstr ":guilabel:`Editar`"

#: ../mastering_plone/features.rst:169
msgid ":guilabel:`view`"
msgstr ":guilabel:`Visualizar`"

#: ../mastering_plone/features.rst:170
msgid ":guilabel:`add`"
msgstr ":guilabel:`Agregar nuevo...`"

#: ../mastering_plone/features.rst:171
msgid ":guilabel:`state`"
msgstr ""

#: ../mastering_plone/features.rst:172
msgid ":guilabel:`actions`"
msgstr ""

#: ../mastering_plone/features.rst:173
msgid ":guilabel:`display`"
msgstr ":guilabel:`Mostrar`"

#: ../mastering_plone/features.rst:174
msgid ":guilabel:`manage portlets`"
msgstr ""

#: ../mastering_plone/features.rst:175
msgid ":guilabel:`history`"
msgstr ""

#: ../mastering_plone/features.rst:176
msgid ":guilabel:`sharing`"
msgstr ":guilabel:`Compartir`"

#: ../mastering_plone/features.rst:177
msgid ":guilabel:`rules`"
msgstr ":guilabel:`Reglas`"

#: ../mastering_plone/features.rst:178
msgid ":guilabel:`user actions`"
msgstr ""

#: ../mastering_plone/features.rst:180
msgid ""
"Some edit bar options only show when appropriate; for example, "
":guilabel:`folder contents` and :guilabel:`add` are only shown for Folders. "
":guilabel:`rules` is currently invisible because we have no content rules "
"available."
msgstr ""

#: ../mastering_plone/features.rst:193
msgid ""
"Let's create our first users within Plone. So far we used the admin user "
"(admin:admin) configured in the buildout. This user is often called \"zope "
"root\" and is not managed in Plone but only by Zope. Therefore the user's "
"missing some features like email and full name and won't be able to use some"
" of Plone's features. But the user has all possible permissions. As with the"
" root user of a server, it's a bad practice to make unnecessary use of Zope "
"root. Use it to create Plone sites and their initial users, but not much "
"else."
msgstr ""

#: ../mastering_plone/features.rst:201
msgid "You can also add Zope users via the terminal by entering::"
msgstr ""

#: ../mastering_plone/features.rst:205 ../mastering_plone/features.rst:232
msgid ""
"That way you can access databases you get from customers where you have no "
"Plone user."
msgstr ""

#: ../mastering_plone/features.rst:207
msgid ""
"To add a new user in Plone, click on the user icon at the bottom of the left"
" vertical bar and then on :guilabel:`Site setup`. This is Plone's control "
"panel. You can also access it by browsing to http://localhost:8080/Plone"
"/@@overview-controlpanel"
msgstr ""

#: ../mastering_plone/features.rst:211
msgid ""
"Click on :guilabel:`Users and Groups` and add a user. If we had configured a"
" mail server, Plone could send you a mail with a link to a form where you "
"can choose a password. (Or, if you have Products.PrintingMailHost in your "
"buildout, you can see the email scrolling by in the console, just the way it"
" would be sent out.) We set a password here because we haven't yet "
"configured a mail server."
msgstr ""

#: ../mastering_plone/features.rst:216
msgid "Make this user with your name an administrator."
msgstr ""
"Estableciendo a este usuario con su nombre un Administrador del sitio."

#: ../mastering_plone/features.rst:218
msgid ""
"Then create another user called ``testuser``. Make this one a normal user. "
"You can use this user to see how Plone looks and behaves to users that have "
"no admin permissions."
msgstr ""

#: ../mastering_plone/features.rst:222
msgid ""
"Now let's see the site in 3 different browsers with three different roles:"
msgstr ""
"Ahora vamos a ver el sitio en tres (03) navegadores diferentes, con tres "
"roles diferentes:"

#: ../mastering_plone/features.rst:224
msgid "as anonymous"
msgstr "como anónimo."

#: ../mastering_plone/features.rst:225
msgid "as editor"
msgstr "como editor."

#: ../mastering_plone/features.rst:226
msgid "as admin"
msgstr "como administrador."

#: ../mastering_plone/features.rst:228
msgid "You can also add zope users via the terminal by entering::"
msgstr ""

#: ../mastering_plone/features.rst:253
msgid "Configure a Mailserver"
msgstr "Configurar un servidor de correo"

#: ../mastering_plone/features.rst:258
msgid ""
"We have to configure a mailserver since later we will create some content "
"rules that send emails when new content is put on our site."
msgstr ""

#: ../mastering_plone/features.rst:260
msgid "Server: :samp:`localhost`"
msgstr ""

#: ../mastering_plone/features.rst:261
msgid "Username: leave blank"
msgstr ""

#: ../mastering_plone/features.rst:262
msgid "Password: leave blank"
msgstr ""

#: ../mastering_plone/features.rst:263
msgid "Site 'From' name: Your name"
msgstr ""

#: ../mastering_plone/features.rst:264
msgid "Site 'From' address: Your email address"
msgstr ""

#: ../mastering_plone/features.rst:268
msgid ""
"Click on `Save and send test e-mail`. Since we have configured "
"PrintingMailHost, you will see the mail content in the console output of "
"your instance. Plone will not actually send the email to the receivers "
"address."
msgstr ""

#: ../mastering_plone/features.rst:275
msgid "Content-Types"
msgstr "Tipos de Contenidos"

#: ../mastering_plone/features.rst:277
msgid "Edit a page:"
msgstr "Editar una página:"

#: ../mastering_plone/features.rst:279
msgid ":guilabel:`Edit front-page`"
msgstr ":guilabel:`Edite el documento front-page`"

#: ../mastering_plone/features.rst:280
msgid ":guilabel:`Title` :samp:`Plone Conference 2015, Bucharest`"
msgstr ""

#: ../mastering_plone/features.rst:281
msgid ":guilabel:`Summary` :samp:`Tutorial`"
msgstr ""

#: ../mastering_plone/features.rst:282
msgid ":guilabel:`Text` :samp:`...`"
msgstr ":guilabel:`Texto` :samp:`...`"

#: ../mastering_plone/features.rst:284
msgid "Create a site-structure:"
msgstr "Crear un estructura del sitio:"

#: ../mastering_plone/features.rst:286
msgid "Add folder \"The Event\" and in that ..."
msgstr "Agregar carpeta \"El Evento\" y que contenga..."

#: ../mastering_plone/features.rst:288
msgid "Folder \"Talks\""
msgstr "Carpeta \"Charlas\""

#: ../mastering_plone/features.rst:289
msgid "Folder \"Training\""
msgstr "Carpeta \"Entrenamientos\""

#: ../mastering_plone/features.rst:290
msgid "Folder \"Sprint\""
msgstr "Carpeta \"Sprint\""

#: ../mastering_plone/features.rst:292
msgid "In ``/news``: Add News Item \"Conference Website online!\" with some image"
msgstr ""

#: ../mastering_plone/features.rst:293
msgid "In ``/news``: Add News Item \"Submit your talks!\""
msgstr ""

#: ../mastering_plone/features.rst:294
msgid ""
"In ``/events``: Add Event \"Deadline for talk submission\" Date: 2015/08/10"
msgstr ""

#: ../mastering_plone/features.rst:296
msgid "Add Folder \"Register\""
msgstr "Agregar carpeta llamada \"Registro\""

#: ../mastering_plone/features.rst:297
msgid "Delete Folder \"Users\""
msgstr ""

#: ../mastering_plone/features.rst:298
msgid "Add Folder \"Intranet\""
msgstr "Agregar carpeta llamada \"Intranet\""

#: ../mastering_plone/features.rst:301
msgid "The default contenttypes:"
msgstr ""

#: ../mastering_plone/features.rst:303
msgid "Collection"
msgstr "Colección"

#: ../mastering_plone/features.rst:304
msgid "Event"
msgstr "Evento"

#: ../mastering_plone/features.rst:305
msgid "File"
msgstr "Archivo"

#: ../mastering_plone/features.rst:306
msgid "Folder"
msgstr "Carpeta"

#: ../mastering_plone/features.rst:307
msgid "Image"
msgstr "Imagen"

#: ../mastering_plone/features.rst:308
msgid "Link"
msgstr "Enlace"

#: ../mastering_plone/features.rst:309
msgid "News Item"
msgstr "Noticia"

#: ../mastering_plone/features.rst:310
msgid "Page"
msgstr "Página"

#: ../mastering_plone/features.rst:314
msgid ""
"Please keep in mind that we use `plone.app.contenttypes "
"<http://docs.plone.org/external/plone.app.contenttypes/docs/README.html>`_ "
"for the training, which are the default in Plone 5. Therefore the types are "
"based on Dexterity and slightly different from the types that you will find "
"in a default Plone 4.3.x site."
msgstr ""

#: ../mastering_plone/features.rst:320
msgid "Folders"
msgstr "Carpetas"

#: ../mastering_plone/features.rst:322
msgid "Go to 'the-event'"
msgstr "Ir a 'el-evento'"

#: ../mastering_plone/features.rst:323
msgid "explain title/id/url"
msgstr "explicar title/id/url"

#: ../mastering_plone/features.rst:324
msgid "explain /folder_contents"
msgstr "explicar /folder_contents"

#: ../mastering_plone/features.rst:325
msgid "change order"
msgstr "cambiar orden"

#: ../mastering_plone/features.rst:326
msgid "bulk-actions"
msgstr "acciones masivas"

#: ../mastering_plone/features.rst:327
msgid "dropdown \"display\""
msgstr "menú desplegable \"Mostrar\""

#: ../mastering_plone/features.rst:328
msgid "default_pages"
msgstr "default_pages"

#: ../mastering_plone/features.rst:329
msgid "Add a page to 'the-event': \"The Event\" and make it the default page"
msgstr ""

#: ../mastering_plone/features.rst:335
msgid "Collections"
msgstr "Colecciones"

#: ../mastering_plone/features.rst:337
msgid "add a new collection: \"all content that has ``pending`` as wf_state\"."
msgstr ""

#: ../mastering_plone/features.rst:338
msgid ""
"explain the default collection for events at "
"http://localhost:8080/Plone/events/aggregator/edit"
msgstr ""
"explicar la colección por defecto de eventos en "
"http://localhost:8080/Plone/events/aggregator/edit"

#: ../mastering_plone/features.rst:339
msgid "explain Topics"
msgstr "explicar Tópicos"

#: ../mastering_plone/features.rst:340
msgid "mention collection portlets"
msgstr ""

#: ../mastering_plone/features.rst:341
msgid "multi-path queries"
msgstr ""

#: ../mastering_plone/features.rst:342
msgid "constraints, e.g. ``/Plone/folder::1``"
msgstr "restricciones, ej. ``/Plone/folder::1``"

#: ../mastering_plone/features.rst:350
msgid "Create new rule \"a new talk is in town\"!"
msgstr "¡Crear una nueva regla \"una nueva charla está presente\"!"

#: ../mastering_plone/features.rst:351
msgid "New content in folder \"Talks\" -> Send Mail to reviewers."
msgstr "Nuevo contenido en Carpeta \"Charlas\" -> Enviar correo a revisores."

#: ../mastering_plone/features.rst:357
msgid "History"
msgstr "Histórico"

#: ../mastering_plone/features.rst:359
msgid "Show and explain; mention versioning and its relation to types."
msgstr ""
"Mostrar y explicar; el control de versiones y su relación con los tipos."

#: ../mastering_plone/features.rst:365
msgid "Manage members and groups"
msgstr "Administrar usuarios y grupos"

#: ../mastering_plone/features.rst:367
msgid "add/edit/delete Users"
msgstr "agregar / editar / eliminar Usuarios"

#: ../mastering_plone/features.rst:368
msgid "roles"
msgstr "roles"

#: ../mastering_plone/features.rst:369
msgid "groups"
msgstr "grupos"

#: ../mastering_plone/features.rst:371
msgid "Add group \"Editors\" and add the user 'editor' to it"
msgstr "Agregar grupo \"Editores\" y agregar el usuario 'editor' a ese."

#: ../mastering_plone/features.rst:372
msgid "Add group: ``orga``"
msgstr "Agregar grupo: ``orga``"

#: ../mastering_plone/features.rst:373
msgid "add group: ``jury`` and add user 'jurymember' to it."
msgstr "agregar grupo: ``jury`` y agregue usuario 'jurymember' a ese."

#: ../mastering_plone/features.rst:381
msgid ""
"Take a look at the :guilabel:`state` drop-down on the edit bar on the "
"homepage. Now, navigate to one of the folders just added. The homepage has "
"the status ``published`` and the new content is ``private``."
msgstr ""

#: ../mastering_plone/features.rst:385
msgid ""
"Let's look at the state transitions available for each type. We can make a "
"published item private and a private item published. We can also submit an "
"item for review."
msgstr ""
"Echemos un vistazo a las transiciones de estado disponibles para cada tipo. "
"Podemos hacer un artículo publicado en privado y un artículo privado se "
"pueda publicar. También podemos enviar un artículo para su revisión."

#: ../mastering_plone/features.rst:389
msgid "Each of these states connects roles to permissions."
msgstr "Cada uno de esos estados conecta los roles a permisos."

#: ../mastering_plone/features.rst:391
msgid ""
"In ``published`` state, the content is available to anonymous visitors;"
msgstr ""
"En el estado ``Publicado``, el contenido está disponible para los visitantes"
" anónimos;"

#: ../mastering_plone/features.rst:392
msgid ""
"In ``private`` state, the content is only viewable by the author (owner) and"
" users who have the ``can view`` role for the content."
msgstr ""
"En el estado ``Privado``, el contenido es sólo visible para el autor "
"(propietario) y los usuarios que tienen el rol local ``Puede ver`` para el "
"contenido."

#: ../mastering_plone/features.rst:394
msgid ""
"A *workflow state* is an association between a role and one or more "
"permissions. Moving from one state to another is a ``transition``. "
"Transitions (like ``submit for review``) may have actions — like the "
"execution of a content rule or script — associated with them."
msgstr ""

#: ../mastering_plone/features.rst:398
msgid ""
"A complete set of workflow states and transitions make up a *workflow*. "
"Plone allows you to select among several pre-configured workflows that are "
"appropriate for different types of sites. Individual contenttypes may have "
"their own workflow. Or, and this is particularly interesting, no workflow. "
"In that case, which initially applies to file and image uploads, the content"
" object inherits the workflow state of its container."
msgstr ""

#: ../mastering_plone/features.rst:406
msgid ""
"An oddity in all of the standard Plone workflows: a content item may be "
"viewable even if its container is not. Making a container private does "
"**not** automatically make its contents private."
msgstr ""

#: ../mastering_plone/features.rst:409
msgid ""
"Read more at: http://docs.plone.org/working-with-content/collaboration-and-"
"workflow/index.html"
msgstr ""
"Lea más en: http://docs.plone.org/working-with-content/collaboration-and-"
"workflow/index.html"

#: ../mastering_plone/features.rst:414
msgid "Working copy"
msgstr "Copia de trabajo"

#: ../mastering_plone/features.rst:416
msgid ""
"Published content, even in an intranet setting, can pose a special problem "
"for editing. It may need to be reviewed before changes are made available. "
"In fact, the original author may not even have permission to change the "
"document without review. Or, you may need to make a partial edit. In either "
"case, it may be undesirable for changes to be immediately visible."
msgstr ""
"El contenido publicado, incluso en un entorno de Intranet, puede plantear un"
" problema especial para la edición. Puede ser necesario revisar antes de que"
" los cambios se hacen disponible. De hecho, el autor original puede incluso "
"podría no tener permiso para cambiar el documento sin revisión. O bien, "
"puede que tenga que hacer una edición parcial. En cualquiera de los casos, "
"puede ser deseable para que los cambios sean visibles inmediatamente."

#: ../mastering_plone/features.rst:422
msgid ""
"Plone's working copy support solves this problem by adding a check-out"
"/check-in function for content — available on the actions menu. A content "
"item may be checked out, worked on, then checked back in. Or abandoned if "
"the changes weren't acceptable. Not until check in is the content visible."
msgstr ""
"El producto *Soporte de Copia de Trabajo* resuelve este problema mediante la"
" adición una acción para *Retirar revisión* o *Guardar nueva revisión* de "
"cambios para el contenido - disponible en el menú de acciones. Un elemento "
"de contenido puede *guardar nueva revisión*, trabajado en una copia del "
"elemento y después se *guardar nueva revisión* de nuevo. O *Cancelar "
"retirada de revisión* si los cambios no eran aceptables. Hasta no guardar "
"una nueva revisión de los cambios, el contenido anterior sera visible."

#: ../mastering_plone/features.rst:427
msgid ""
"While it's shipped with Plone, working copy support is not a common need. "
"So, if you need it, you need to activate it via the add-on packages "
"configuration page. Unless activated, check-in/check-out options are not "
"visible."
msgstr ""
"Mientras este complemento viene incorporado en Plone, el soporte de copia de"
" trabajo no es una necesidad común. Así que, si usted lo necesita, usted "
"necesita para activarlo a través de la página de configuración de "
"Complementos. A menos que se active este complemento, las opciones de "
"*Retirar revisión* / *Guardar nueva revisión* no son visibles."

#: ../mastering_plone/features.rst:433
msgid ""
"Working-copy support is not yet available for contenttypes created via "
"Dexterity. This is on the way."
msgstr ""

#: ../mastering_plone/features.rst:440
msgid "Placeful workflows"
msgstr "Flujos de trabajo Placeful"

#: ../mastering_plone/features.rst:442
msgid ""
"You may need to have different workflows in different parts of a site. For "
"example, we created an intranet folder. Since this is intended for use by "
"our conference organizers — but not the public — the simple workflow we wish"
" to use for the rest of the site will not be desirable."
msgstr ""
"Usted puede necesitar tener diferentes flujos de trabajo en diferentes "
"partes de un sitio. Por ejemplo, creamos una carpeta intranet. Dado que este"
" es para uso de nuestros organizadores de la conferencia - pero no para el "
"público - el sencillo flujo de trabajo que deseamos utilizar para que el "
"resto del sitio no será deseable aquí."

#: ../mastering_plone/features.rst:446
msgid ""
"Plone's ``Workflow Policy Support`` package gives you the ability to set "
"different workflows in different sections of a site. Typically, you use it "
"to set a special workflow in a folder that will govern everything under that"
" folder. Since it has effect in a \"place\" in a site, this mechanism is "
"often called \"Placeful Workflow\"."
msgstr ""
"El paquete ``Soporte de Copia de Trabajo`` te da la posibilidad de "
"configurar diferentes flujos de trabajo en las diferentes secciones de un "
"sitio. Normalmente, se utiliza para configurar un flujo de trabajo especial "
"en una carpeta que regirá todo bajo esa carpeta. Ya que tiene efecto en un "
"\"lugar\" en un sitio, este mecanismo es a menudo llamado \"flujo de trabajo"
" Placeful\"."

#: ../mastering_plone/features.rst:450
msgid ""
"As with working-copy support, Placeful Workflow ships with Plone but needs "
"to be activated via the add-on configuration page. Once it's added, a "
":guilabel:`Policy` option will appear on the state menu to allow setting a "
"placeful workflow policy."
msgstr ""

#: ../mastering_plone/features.rst:455
msgid ""
"Workflow Policy support is not yet available for folderish contenttypes "
"created via Dexterity. This is on the way."
msgstr ""

#: ../mastering_plone/frontpage.rst:4
msgid "Creating a Dynamic Front Page"
msgstr ""

#: ../mastering_plone/frontpage.rst:15
msgid "In this chapter we will:"
msgstr ""

#: ../mastering_plone/frontpage.rst:17
msgid "Create a standalone view used for the front page"
msgstr ""

#: ../mastering_plone/frontpage.rst:18
msgid "Show dynamic content"
msgstr ""

#: ../mastering_plone/frontpage.rst:19
msgid "Use ajax to load content"
msgstr ""

#: ../mastering_plone/frontpage.rst:20
msgid "Embed tweets about ploneconf"
msgstr ""

#: ../mastering_plone/frontpage.rst:24
msgid "Standalone views"
msgstr ""

#: ../mastering_plone/frontpage.rst:25
msgid "Querying the catalog by date"
msgstr ""

#: ../mastering_plone/frontpage.rst:26
msgid "DRY"
msgstr ""

#: ../mastering_plone/frontpage.rst:27
msgid "macros"
msgstr ""

#: ../mastering_plone/frontpage.rst:28
msgid "patterns"
msgstr ""

#: ../mastering_plone/frontpage.rst:32
msgid "The Front Page"
msgstr ""

#: ../mastering_plone/frontpage.rst:34
msgid "Register the view in ``browser/configure.zcml``:"
msgstr ""

#: ../mastering_plone/frontpage.rst:48
msgid ""
"Add the view to a file ``browser/frontpage.py``. We want a list of all talks"
" that happen today."
msgstr ""

#: ../mastering_plone/frontpage.rst:88
msgid ""
"We do not constrain the search to a certain folder to also find the party "
"and the sprints."
msgstr ""

#: ../mastering_plone/frontpage.rst:89
msgid "With ``if brain.start.date() == today:`` we test if the talk is today."
msgstr ""

#: ../mastering_plone/frontpage.rst:90
msgid ""
"It would be more effective to query the catalog for events that happen in "
"the daterange between today and tomorrow:"
msgstr ""

#: ../mastering_plone/frontpage.rst:106
msgid ""
"The ``sort_on='start'`` sorts the results returned by the catalog by start-"
"date."
msgstr ""

#: ../mastering_plone/frontpage.rst:107
msgid ""
"By removing the ``portal_type='talk'`` from the query you could include "
"other events in the schedule (like the party or sightseeing-tours). But "
"you'd have to take care to not create AttributeErrors by accessing fields "
"that are specific to talk. To work around that use ``speaker = "
"getattr(brain, 'speaker', None)`` and testing with ``if speaker is not "
"None:``"
msgstr ""

#: ../mastering_plone/frontpage.rst:108
msgid "The rest is identical to what the talklistview does."
msgstr ""

#: ../mastering_plone/frontpage.rst:112 ../mastering_plone/viewlets_2.rst:141
msgid "The template"
msgstr "La plantilla"

#: ../mastering_plone/frontpage.rst:114
msgid ""
"Create the template ``browser/templates/frontpageview.pt`` (for now without "
"talks). Display the rich text field to allow the frontpage to be edited."
msgstr ""

#: ../mastering_plone/frontpage.rst:136
msgid ""
"Now you could add the whole code that we used for the talklistview again. "
"But instead we go D.R.Y. and reuse the talklistview by turning it into a "
"macro."
msgstr ""

#: ../mastering_plone/frontpage.rst:138
msgid ""
"Edit ``browser/templates/talkslistview.pt`` and wrap the list in a macro "
"definition:"
msgstr ""

#: ../mastering_plone/frontpage.rst:205
msgid "Now use that macro in ``browser/templates/frontpageview.pt``"
msgstr ""

#: ../mastering_plone/frontpage.rst:218
msgid ""
"Calling that macro in python looks like this ``metal:use-macro=\"python: "
"context.restrictedTraverse('talklistview')['talklist']\"``"
msgstr ""

#: ../mastering_plone/frontpage.rst:222
msgid ""
"In :file:`talklistview.pt` the call :samp:`view/talks\"` calls the method "
":py:meth:`talks` from the browser view :py:class:`TalkListView` to get the "
"talks. Reused as a macro on the frontpage it now uses the method "
":py:meth:`talks` by the ``frontpageView`` to get a different list! It is not"
" always smart to do that since you might want to display other data. E.g. "
"for a list of todays talks you don't want show the date but only the time "
"using ``data-pat-moment=\"format:LT\"`` Also this frontpage will probably "
"not win a beauty-contest. But that's not the task of this training."
msgstr ""

#: ../mastering_plone/frontpage.rst:229
msgid ""
"Change the link to open the talk-info in a `modal "
"<https://plone.github.io/mockup/dev/#pattern/modal>`_."
msgstr ""

#: ../mastering_plone/frontpage.rst:246
msgid "Twitter"
msgstr ""

#: ../mastering_plone/frontpage.rst:248
msgid ""
"You might also want to embed a twitter feed into the page. Luckily twitter "
"makes it easy to do that. When you browse to the `twitter docs "
"<https://dev.twitter.com/web/embedded-timelines/search>`_ and learn how to "
"create the appropriate snippet of code and paste it in the template wrapped "
"in a ``<div class=\"col-lg-6\">...</div>`` to have the talklist next to the "
"feeds:"
msgstr ""

#: ../mastering_plone/frontpage.rst:284
msgid "Activating the view"
msgstr ""

#: ../mastering_plone/frontpage.rst:286
msgid ""
"The view is meant to be used with documents (or any other type that has a "
"rich text field 'text'). The easiest way to use it is setting it as the "
"default view for the Document that is currently the default page for the "
"portal. By default that document has the id ``front-page``."
msgstr ""

#: ../mastering_plone/frontpage.rst:288
msgid ""
"You can either access it directly at http://localhost:8080/Plone/front-page "
"or by disabling the default page for the portal and it should show up in the"
" navigation. Try out the new view like this: http://localhost:8080/Plone"
"/front-page/frontpageview."
msgstr ""

#: ../mastering_plone/frontpage.rst:290
msgid ""
"To set that view by hand as the default view for ``front-page`` in the ZMI: "
"http://localhost:8080/Plone/front-page/manage_propertiesForm. Add a new "
"property ``layout`` and set it to ``frontpageview``."
msgstr ""

#: ../mastering_plone/frontpage.rst:292
msgid ""
"Done. This way you can still use the button *Edit* to edit the frontpage."
msgstr ""

#: ../mastering_plone/frontpage.rst:297
msgid ""
"Querying by date: "
"http://docs.plone.org/develop/plone/searching_and_indexing/query.html"
"#querying-by-date"
msgstr ""

#: ../mastering_plone/future_of_plone.rst:4
msgid "The Future of Plone"
msgstr "El futuro de Plone"

#: ../mastering_plone/future_of_plone.rst:6
msgid "The Plone process, the various teams and and the Plone Community"
msgstr ""

#: ../mastering_plone/future_of_plone.rst:7
msgid ""
"Plips: "
"https://github.com/plone/Products.CMFPlone/issues?q=is%3Aopen+is%3Aissue+label%3A%2203+type%3A+feature+%28plip%29%22"
msgstr ""

#: ../mastering_plone/future_of_plone.rst:8
msgid "Plone 5.x"
msgstr ""

#: ../mastering_plone/future_of_plone.rst:9
msgid "Plone 6"
msgstr ""

#: ../mastering_plone/future_of_plone.rst:10
msgid "Plone 7 and beyond..."
msgstr ""

#: ../mastering_plone/future_of_plone.rst:11
msgid "Plone Roadmap: https://plone.org/roadmap"
msgstr ""

#: ../mastering_plone/grok.rst:3
msgid "Grok"
msgstr "Grok"

#: ../mastering_plone/grok.rst:5
msgid ""
"Grok is an alternative declaration language for declaring your components. "
"It is compatible with the Zope Component Architecture, it used just an "
"alternative syntax. It is recommended to not use it! We still document it "
"here in case you have to deal with a legacy-codebase that uses it."
msgstr ""

#: ../mastering_plone/grok.rst:7
msgid ""
"Instead of writing separate zcml files, you annotate your code and you "
"create content conforming to specific file names so that they are "
"automatically found. There has been discussions whether grok should be used "
"in the plone core. The plone community decided against it, because it "
"increases the technology stack without adding functionality."
msgstr ""

#: ../mastering_plone/grok.rst:10
msgid ""
"Some people are even against using it in Add Ons, because there would not be"
" just one way to declare components, but two. Then there is only last "
"disadvantage, grok components cannot be overridden by z3c.jbot. I would not "
"be surprised if this could be fixed though."
msgstr ""

#: ../mastering_plone/grok.rst:12
msgid ""
"After all these negative things let us tell you why we still like it: We "
"like to write as few lines of code and configuration as possible."
msgstr ""

#: ../mastering_plone/grok.rst:14
msgid ""
"So, we will write our browser view as a grok view. From the component "
"architecture side, nothing changes. We still need to write a multi adapter. "
"All the details like which template to use or for which browser layer the "
"view shall be used is declared with a single line annotation or deduced from"
" file names."
msgstr ""

#: ../mastering_plone/grok.rst:18
msgid "http://docs.plone.org/develop/addons/five-grok/index.html"
msgstr "http://docs.plone.org/develop/addons/five-grok/index.html"

#: ../mastering_plone/grok.rst:20
msgid ""
"Grok is not part of plone. We have to add it as a dependency to our egg."
msgstr ""

#: ../mastering_plone/grok.rst:22
msgid ""
"Open :file:`setup.py`, and add :py:mod:`five.grok` to the list of add-ons in"
" ``install_requires``::"
msgstr ""

#: ../mastering_plone/grok.rst:31
msgid "You need to run buildout now."
msgstr ""

#: ../mastering_plone/grok.rst:33
msgid ""
"Grok nearly magically does find all its annotations. Since its not complete "
"magic, you have to tell grok where to look for grok code. This requires a "
"single line of ZCML. This line ensures that your complete package is "
"`grokked`."
msgstr ""

#: ../mastering_plone/grok.rst:53
msgid "This new grok statement takes care of finding everything grok-related."
msgstr ""

#: ../mastering_plone/grok.rst:55
msgid "Now we can add a grok view in a new file :file:`views.py`:"
msgstr ""

#: ../mastering_plone/grok.rst:69
msgid ""
"By convention the template must be in a subdirectory called "
":file:`views_templates` and it must be named :file:`talkview.pt`"
msgstr ""

#: ../mastering_plone/grok.rst:71
msgid ""
"If we used ``grok`` for viewlets we would not need to register them in the "
":file:`configure.zcml` but do that in python. We would add a file "
":file:`viewlets.py` containing the viewlet-class."
msgstr ""

#: ../mastering_plone/grok.rst:83
msgid ""
"This would do the same as the code above using grok's paradigm of convention"
" over configuration. In browser views the reference is called view; note "
"that in grok viewlets it is called viewlets (in that case "
"``viewlet/lanyrd_link``)."
msgstr ""

#: ../mastering_plone/ide.rst:4
msgid "IDEs and Editors"
msgstr ""

#: ../mastering_plone/ide.rst:8
msgid "Learn about Editors"
msgstr ""

#: ../mastering_plone/ide.rst:12
msgid "Many editors"
msgstr ""

#: ../mastering_plone/ide.rst:14
msgid ""
"Plone consists of more than 20.000 files! You need a tool to manage that. No"
" development environment is complete without a good editor."
msgstr ""
"¡Plone consiste de más de 20.000 archivos! Usted necesita una herramienta "
"para administrarlas. Ningún entorno de desarrollo esta completo sin un buen "
"editor."

#: ../mastering_plone/ide.rst:16
msgid ""
"People pick editors themselves. Use whatever you are comfortable and "
"productive with. These are the most used editors in the Plone community:"
msgstr ""
"La gente elige sus propios editores. Utilice cualquiera con el que se sienta"
" cómodo y productivo. Estos son los editores más utilizados en la comunidad "
"Plone:"

#: ../mastering_plone/ide.rst:18
msgid "`Sublime <https://www.sublimetext.com/>`_"
msgstr ""

#: ../mastering_plone/ide.rst:19
msgid "`PyCharm <http://www.jetbrains.com/pycharm/>`_"
msgstr "`PyCharm <http://www.jetbrains.com/pycharm/>`_."

#: ../mastering_plone/ide.rst:20
msgid "`Wing IDE <http://wingide.com/>`_"
msgstr "`Wing IDE <http://wingide.com/>`_."

#: ../mastering_plone/ide.rst:21
msgid ""
"`PyDev <http://www.pydev.org/>`_ for `Eclipse <http://www.eclipse.org/>`_"
msgstr ""

#: ../mastering_plone/ide.rst:22
msgid "`Aptana Studio <http://www.aptana.com/products/studio3.html>`_"
msgstr ""

#: ../mastering_plone/ide.rst:23
msgid "vim"
msgstr "vim."

#: ../mastering_plone/ide.rst:24
msgid "emacs"
msgstr "emacs."

#: ../mastering_plone/ide.rst:25
msgid "`Textmate <http://macromates.com/>`_"
msgstr "`Textmate <http://macromates.com/>`_."

#: ../mastering_plone/ide.rst:27
msgid ""
"Some features that most editors have in one form or another are essential "
"when developing with Plone."
msgstr ""
"Algunas características que la mayoría de los editores tienen de una forma u"
" otra son esenciales desarrollando en Plone."

#: ../mastering_plone/ide.rst:29
msgid "**Find in project** (SublimeText 3: ``cmd + shift + f``)"
msgstr "**Buscar en Proyecto** (SublimeText 3: ``cmd + shift + f``)"

#: ../mastering_plone/ide.rst:30
msgid "**Find files in Project** (SublimeText 3: ``cmd + t``)"
msgstr "**Buscar archivos en Proyecto** (SublimeText 3: ``cmd + t``)"

#: ../mastering_plone/ide.rst:31
msgid ""
"**Find methods and classes in Project** (SublimeText 3: ``cmd + shift + r``)"
msgstr ""
"**Buscar clases y métodos en Proyecto** (SublimeText 3: ``cmd + shift + r``)"

#: ../mastering_plone/ide.rst:32
msgid "**Goto Definition** (SublimeText3 with codeintel: ``alt + click``)"
msgstr "**Ir a Definición** (SublimeText3 con codeintel: ``alt + click``)"

#: ../mastering_plone/ide.rst:33
msgid "**Powerful search & replace**"
msgstr "**Poderoso mecanismo de búsqueda y remplazo**"

#: ../mastering_plone/ide.rst:35
msgid ""
"The capability of performing a *full text search* through the complete Plone"
" code is invaluable. Thanks to omelette, an SSD and plenty of RAM you can "
"search through the complete Plone code base in 3 seconds."
msgstr ""

#: ../mastering_plone/ide.rst:39
msgid ""
"Some Editors/IDE's have to be extend to be fully featured. Here are some "
"packages we recommend when using Sublime Text 3:"
msgstr ""

#: ../mastering_plone/ide.rst:41
msgid "SublimeCodeIntel (Goto Definition)"
msgstr "SublimeCodeIntel (Ir a Definición)"

#: ../mastering_plone/ide.rst:42
msgid "BracketHighlighter"
msgstr "BracketHighlighter"

#: ../mastering_plone/ide.rst:43
msgid "GitGutter"
msgstr "GitGutter"

#: ../mastering_plone/ide.rst:44
msgid "FileDiffs"
msgstr "FileDiffs"

#: ../mastering_plone/ide.rst:45
msgid "SublimeLinter with SublimeLinter-flake8 ..."
msgstr "SublimeLinter con SublimeLinter-flake8 ..."

#: ../mastering_plone/ide.rst:46
msgid "INI (syntax for ini-Files)"
msgstr "INI (sintaxis para archivos ini)"

#: ../mastering_plone/ide.rst:47
msgid "SideBarEnhancements"
msgstr "SideBarEnhancements"

#: ../mastering_plone/ide.rst:48
msgid "MacTerminal"
msgstr "MacTerminal"

#: ../mastering_plone/ide.rst:49
msgid "SyncedSideBar"
msgstr "SyncedSideBar"

#: ../mastering_plone/index.rst:4
msgid "Mastering Plone Development"
msgstr ""

#: ../mastering_plone/index.rst:6
msgid "This is the documentation for the \"Mastering Plone\" training."
msgstr ""

#: ../mastering_plone/index.rst:8
msgid ""
"Mastering Plone is intended as a week-long training for people who are new "
"to Plone or want to learn about the current best practices of Plone "
"development. It can be split in two trainings:"
msgstr ""

#: ../mastering_plone/index.rst:10
msgid "A beginner training (2 to 3 days) that covers chapters 1-18."
msgstr ""
"Un entrenamiento para principiante (2 a 3 días), que cubre los capítulos 1 "
"al 18."

#: ../mastering_plone/index.rst:11
msgid "An advanced training (3 to 5 days) that covers the rest."
msgstr ""

#: ../mastering_plone/index.rst:13
msgid ""
"At conferences a shortended 2-day version of the advanced training with a "
"slightly modified order is held."
msgstr ""

#: ../mastering_plone/index.rst:75
msgid ""
"Please note that this document is *not complete* without the spoken word of "
"a trainer. Even though we attempt to include the most important parts of "
"what we teach in the narrative but reading it here can in no way be "
"considered equal to attending a training."
msgstr ""

#: ../mastering_plone/installation.rst:4
msgid "Installation & Setup"
msgstr "Instalación y configuración"

#: ../mastering_plone/installation.rst:10
msgid "Installing Plone"
msgstr "Instalando Plone"

#: ../mastering_plone/installation.rst:14
msgid ""
"The following table shows the Python versions required by Plone from version"
" 3.x to 5.0.x:"
msgstr ""

#: ../mastering_plone/installation.rst:17
msgid "Plone"
msgstr ""

#: ../mastering_plone/installation.rst:17
msgid "Python"
msgstr "Python"

#: ../mastering_plone/installation.rst:19
msgid "3.x"
msgstr ""

#: ../mastering_plone/installation.rst:19
msgid "2.4"
msgstr ""

#: ../mastering_plone/installation.rst:20
msgid "4.0.x"
msgstr ""

#: ../mastering_plone/installation.rst:20
#: ../mastering_plone/installation.rst:21
msgid "2.6"
msgstr ""

#: ../mastering_plone/installation.rst:21
msgid "4.1.x"
msgstr ""

#: ../mastering_plone/installation.rst:22
msgid "4.2.x"
msgstr ""

#: ../mastering_plone/installation.rst:22
msgid "2.6 or 2.7"
msgstr ""

#: ../mastering_plone/installation.rst:23
msgid "4.3.x"
msgstr ""

#: ../mastering_plone/installation.rst:23
#: ../mastering_plone/installation.rst:24
msgid "2.7"
msgstr ""

#: ../mastering_plone/installation.rst:24
msgid "5.0.x"
msgstr ""

#: ../mastering_plone/installation.rst:27
msgid ""
"(Hopefully you won't have to deal with any Plone sites older than version "
"3.x.)"
msgstr ""

#: ../mastering_plone/installation.rst:29
msgid ""
"Plone 5.x requires a working Python 2.7 and several other system tools that "
"not every OS provides. Therefore the installation of Plone is different on "
"every system. Here are some ways that Python can be used:"
msgstr ""

#: ../mastering_plone/installation.rst:37
msgid ""
"use a Python that comes pre-installed in your operating system (most Linux "
"Distributions and Mac OS X have one)"
msgstr ""

#: ../mastering_plone/installation.rst:38
msgid ""
"use the `python buildout <https://github.com/collective/buildout.python>`_"
msgstr ""

#: ../mastering_plone/installation.rst:39
msgid "building Linux packages"
msgstr ""

#: ../mastering_plone/installation.rst:40
msgid "`homebrew <http://mxcl.github.io/homebrew/>`_ (Mac OS X)"
msgstr ""

#: ../mastering_plone/installation.rst:41
msgid "PyWin32 (Windows)"
msgstr "PyWin32 (Windows)"

#: ../mastering_plone/installation.rst:45
msgid ""
"Mac OS X 10.8 - 10.10 and Ubuntu 14.04 come with a working default Python "
"2.7 built in. These are the lucky ones."
msgstr ""

#: ../mastering_plone/installation.rst:47
msgid ""
"Most developers use their primary system to develop Plone. For complex "
"setups they often use Linux virtual machines."
msgstr ""

#: ../mastering_plone/installation.rst:49
msgid ""
"OS X: Use the python buildout to compile python and homebrew for some "
"missing Linux tools."
msgstr ""

#: ../mastering_plone/installation.rst:50
msgid ""
"Linux: Depending on your Linux flavor you might have to build python "
"yourself and install some tools."
msgstr ""

#: ../mastering_plone/installation.rst:51
msgid ""
"Windows: Alan Runyan (one of Plone's founders) uses it. A downside: Plone "
"seems to be running much slower on Windows."
msgstr ""
"Windows: Alan Runyan (uno de los fundadores Plone) lo utiliza. Un "
"inconveniente: Plone parece funcionar mucho más lento en Windows."

#: ../mastering_plone/installation.rst:53
msgid "Plone offers multiple options for being installed:"
msgstr "Plone ofrece múltiples opciones para que se instale:"

#: ../mastering_plone/installation.rst:55
msgid "Unified installers (all 'nix, including OS X)"
msgstr ""

#: ../mastering_plone/installation.rst:56
msgid "A Vagrant/VirtualBox install kit (all platforms)"
msgstr ""

#: ../mastering_plone/installation.rst:57
msgid "A VirtualBox Appliance"
msgstr ""

#: ../mastering_plone/installation.rst:58
msgid "Use your own Buildout"
msgstr "Utilice su propio Buildout"

#: ../mastering_plone/installation.rst:60
msgid "You can download all of these at https://plone.org/download"
msgstr ""

#: ../mastering_plone/installation.rst:65
msgid ""
"For the training we'll use option 2 and 4 to install and run Plone. We'll "
"create our own Buildout and extend it as we wish. But we will do so in a "
"vagrant machine. For your own first experiments we recommend option 1 or 2 "
"(if you have a Windows laptop or encounter problems). Later on you should be"
" able to use your own Buildout (we'll cover that later on)."
msgstr ""

#: ../mastering_plone/installation.rst:73
msgid "http://docs.plone.org/manage/installing/installation.html"
msgstr "http://docs.plone.org/manage/installing/installation.html"

#: ../mastering_plone/installation.rst:79
msgid "Hosting Plone"
msgstr "Alojando Plone"

#: ../mastering_plone/installation.rst:83
msgid ""
"If you want to host a real live Plone site yourself then running it from "
"your laptop is not a viable option."
msgstr ""

#: ../mastering_plone/installation.rst:85
msgid "You can host Plone..."
msgstr "Puede alojar Plone..."

#: ../mastering_plone/installation.rst:87
msgid ""
"with one of many professional `hosting providers "
"<http://plone.com/providers>`_"
msgstr ""

#: ../mastering_plone/installation.rst:88
msgid "on a virtual private server"
msgstr "en un servidor privado virtual"

#: ../mastering_plone/installation.rst:89
msgid "on dedicated servers"
msgstr "en los servidores dedicados"

#: ../mastering_plone/installation.rst:90
msgid ""
"on `heroku <https://www.heroku.com>`_ you can run Plone for *free* using the"
" `Heroku buildpack for Plone <https://github.com/plone/heroku-buildpack-"
"plone>`_"
msgstr ""

#: ../mastering_plone/installation.rst:91
msgid ""
"in the cloud (e.g. using Amazon EC2 or `Codio.com "
"<http://blog.dbain.com/2014/04/install-plone-in-under-5-minutes-on.html>`_)"
msgstr ""
"en la nube (por ejemplo, el uso de Amazon EC2 o `Codio.com "
"<http://blog.dbain.com/2014/04/install-plone-in-under-5-minutes-on.html>`_)"

#: ../mastering_plone/installation.rst:95
msgid ""
"Plone Installation Requirements: "
"http://docs.plone.org/manage/installing/requirements.html"
msgstr ""
"Requerimientos de la instalación de Plone : "
"http://docs.plone.org/manage/installing/requirements.html"

#: ../mastering_plone/installation.rst:96
msgid ""
"Run Plone on a 5$ plan: https://www.stevemcmahon.com/steves-blog/plone-"
"on-5-a-month"
msgstr ""

#: ../mastering_plone/installation.rst:97
msgid ""
"Where to host Plone: https://old.plone.org/documentation/faq/where-can-i"
"-host-my-plone-site"
msgstr ""

#: ../mastering_plone/installation.rst:103
msgid "Production Deployment"
msgstr "Despliegue en ambientes de producción"

#: ../mastering_plone/installation.rst:105
msgid ""
"The way we're setting up a Plone site during this class may be adequate for "
"a small site — or even a very large one that's not very busy — but you're "
"likely to want to do much more if you're using Plone for anything demanding."
msgstr ""
"La manera en que estamos montando un sitio Plone durante esta clase puede "
"ser adecuado para un sitio pequeño - o incluso uno muy grande que no está "
"muy ocupado - pero es muy probable que desee hacer mucho más si estás usando"
" Plone para ninguna demanda."

#: ../mastering_plone/installation.rst:107
msgid ""
"Using a production web server like Apache or Nginx for URL rewriting, SSL "
"and combining multiple, best-of-breed solutions into a single web site."
msgstr ""
"El uso de un servidor web de producción como Apache o Nginx para la "
"reescritura de URL, SSL y combinación de múltiples, las mejores soluciones "
"de su clase todo en un solo sitio web."

#: ../mastering_plone/installation.rst:109
msgid ""
"Reverse proxy caching with a tool like Varnish to improve site performance."
msgstr ""
"El almacenamiento en caché de proxy inverso con una herramienta como Varnish"
" para mejorar el rendimiento del sitio."

#: ../mastering_plone/installation.rst:111
msgid ""
"Load balancing to make best use of multiple core CPUs and even multiple "
"servers."
msgstr ""
"El balanceo de carga para hacer el mejor uso de núcleo múltiple de CPU e "
"incluso múltiples servidores."

#: ../mastering_plone/installation.rst:113
msgid ""
"Optimizing cache headers and Plone's internal caching schemes with "
"plone.app.caching."
msgstr ""
"Optimización cabeceras de caché y esquemas de caché interna de Plone con "
"plone.app.caching."

#: ../mastering_plone/installation.rst:115
msgid ""
"And, you'll need to learn strategies for efficient backup and log file "
"rotation."
msgstr ""
"Y, usted necesita aprender estrategias eficientes para la copia de seguridad"
" y rotación del archivo de los registros."

#: ../mastering_plone/installation.rst:117
msgid ""
"All these topics are introduced in `Guide to deploying and installing Plone "
"in production <http://docs.plone.org/manage/deploying/index.html>`_."
msgstr ""

#: ../mastering_plone/intro.rst:4
msgid "Introduction"
msgstr "Introducción"

#: ../mastering_plone/intro.rst:10
msgid "Who are you?"
msgstr "¿Quien eres tu?"

#: ../mastering_plone/intro.rst:12
msgid "Tell us about yourselves:"
msgstr "Cuentenos acerca de usted:"

#: ../mastering_plone/intro.rst:14
msgid "Name, company, country..."
msgstr "Nombre, compañía, país..."

#: ../mastering_plone/intro.rst:15
msgid "What is your Plone experience?"
msgstr "¿Como ha sido tu experiencia en Plone?"

#: ../mastering_plone/intro.rst:16
msgid "What is your web development experience?"
msgstr ""

#: ../mastering_plone/intro.rst:17
msgid "What are your expectations for this tutorial?"
msgstr "¿Cuales son tus expectativas con este tutorial?"

#: ../mastering_plone/intro.rst:18
msgid "What is your favorite text editor?"
msgstr "¿Cual es tu editor favorito?"

#: ../mastering_plone/intro.rst:40
msgid "If this training will include the development chapters:"
msgstr "Si este entrenamiento incluirá los capítulos de desarrollo:"

#: ../mastering_plone/intro.rst:20
msgid "Do you know the HTML of the output of this?"
msgstr ""

#: ../mastering_plone/intro.rst:33
msgid "The answer is::"
msgstr "La respuesta es:"

#: ../mastering_plone/intro.rst:37
msgid "Do you know what the following would return?::"
msgstr "¿Usted sabe lo que podría retornar el siguiente código Python?::"

#: ../mastering_plone/intro.rst:45
msgid "What will we do?"
msgstr "¿Qué haremos?"

#: ../mastering_plone/intro.rst:47
msgid "Some technologies and tools we use during the training:"
msgstr "Algunas tecnologías y herramientas que usaremos en el entrenamiento:"

#: ../mastering_plone/intro.rst:49
msgid "For the beginning training:"
msgstr "Para el entrenamiento básico o principiante: "

#: ../mastering_plone/intro.rst:51
msgid "`Virtualbox <https://www.virtualbox.org/>`_"
msgstr "`Virtualbox <https://www.virtualbox.org/>`_"

#: ../mastering_plone/intro.rst:52
msgid "`Vagrant <https://www.vagrantup.com/>`_"
msgstr ""

#: ../mastering_plone/intro.rst:53
msgid "`Ubuntu linux <https://www.ubuntu.com/>`_"
msgstr "`Ubuntu linux <https://www.ubuntu.com/>`_"

#: ../mastering_plone/intro.rst:54
msgid "Through-the-web (TTW)"
msgstr "A través de la Web (TTW)"

#: ../mastering_plone/intro.rst:55
msgid "`Buildout <http://www.buildout.org/en/latest/>`_"
msgstr "`Buildout <http://www.buildout.org/en/latest/>`_"

#: ../mastering_plone/intro.rst:56
msgid "A little XML"
msgstr "Un poco de XML"

#: ../mastering_plone/intro.rst:57
msgid "A little Python"
msgstr "Un poco de Python"

#: ../mastering_plone/intro.rst:59
msgid "For the advanced chapters:"
msgstr "Para los capítulos avanzados:"

#: ../mastering_plone/intro.rst:61
msgid "`Git <https://git-scm.com/>`_"
msgstr ""

#: ../mastering_plone/intro.rst:62
msgid "`Github <https://github.com>`_"
msgstr ""

#: ../mastering_plone/intro.rst:63
msgid ""
"`Try Git (Nice introduction to git and github) "
"<https://try.github.io/levels/1/challenges/1>`_"
msgstr ""

#: ../mastering_plone/intro.rst:64
msgid "TAL"
msgstr "TAL"

#: ../mastering_plone/intro.rst:65 ../mastering_plone/zpt.rst:23
msgid "METAL"
msgstr "METAL"

#: ../mastering_plone/intro.rst:67
msgid "`Python <https://www.python.org>`_"
msgstr ""

#: ../mastering_plone/intro.rst:68
msgid "Dexterity"
msgstr "Dexterity"

#: ../mastering_plone/intro.rst:70
msgid "`JQuery <http://jquery.com/>`_"
msgstr "`JQuery <http://jquery.com/>`_"

#: ../mastering_plone/intro.rst:71
msgid ""
"`Testing "
"<http://docs.plone.org/external/plone.app.testing/docs/source/index.html>`_"
msgstr ""
"`Testing "
"<http://docs.plone.org/external/plone.app.testing/docs/source/index.html>`_"

#: ../mastering_plone/intro.rst:72
msgid ""
"`References/Relations "
"<http://docs.plone.org/external/plone.app.dexterity/docs/advanced/references.html>`_"
msgstr ""
"`Referencias / Relaciones "
"<http://docs.plone.org/external/plone.app.dexterity/docs/advanced/references.html>`_"

#: ../mastering_plone/intro.rst:77
msgid "What will we not do?"
msgstr "¿Qué no haremos?"

#: ../mastering_plone/intro.rst:79
msgid "We will not cover the following topics:"
msgstr "Nosotros no cubriremos los siguientes tópicos:"

#: ../mastering_plone/intro.rst:81
msgid ""
"`Archetypes <http://docs.plone.org/4/en/old-reference-"
"manuals/archetypes/index.html>`_"
msgstr ""
"`Archetypes <http://docs.plone.org/4/en/old-reference-"
"manuals/archetypes/index.html>`_"

#: ../mastering_plone/intro.rst:82
msgid ""
"`Portlets <http://docs.plone.org/4/en/old-reference-"
"manuals/portlets/index.html>`_"
msgstr ""
"`Portlets <http://docs.plone.org/4/en/old-reference-"
"manuals/portlets/index.html>`_"

#: ../mastering_plone/intro.rst:83
msgid "`z3c.forms <http://docs.plone.org/develop/plone/forms/z3c.form.html>`_"
msgstr ""
"`z3c.forms <http://docs.plone.org/develop/plone/forms/z3c.form.html>`_"

#: ../mastering_plone/intro.rst:84
msgid "`Theming <http://docs.plone.org/adapt-and-extend/theming/index.html>`_"
msgstr ""
"`Theming <http://docs.plone.org/adapt-and-extend/theming/index.html>`_"

#: ../mastering_plone/intro.rst:85
msgid ""
"`i18n and locales <http://docs.plone.org/develop/plone/i18n/index.html>`_"
msgstr ""
"`i18n y locales <http://docs.plone.org/develop/plone/i18n/index.html>`_"

#: ../mastering_plone/intro.rst:86
msgid ""
"`Deployment, Hosting and Caching "
"<http://docs.plone.org/manage/deploying/index.html>`_"
msgstr ""
"`Desarrollo, hosting y cacheo de contenidos "
"<http://docs.plone.org/manage/deploying/index.html>`_"

#: ../mastering_plone/intro.rst:87 ../mastering_plone/optional.rst:19
msgid ":doc:`grok`"
msgstr ":doc:`grok`"

#: ../mastering_plone/intro.rst:89
msgid "Other topics are only covered lightly:"
msgstr "Otros tópicos están ligeramente cubiertos:"

#: ../mastering_plone/intro.rst:91
msgid ""
"`Zope Component Architecture "
"<http://docs.plone.org/develop/addons/components/index.html>`_"
msgstr ""
"`Arquitectura de componentes Zope "
"<http://docs.plone.org/develop/addons/components/index.html>`_"

#: ../mastering_plone/intro.rst:92
msgid ""
"`GenericSetup "
"<http://docs.plone.org/develop/addons/components/genericsetup.html>`_"
msgstr ""
"`GenericSetup "
"<http://docs.plone.org/develop/addons/components/genericsetup.html>`_"

#: ../mastering_plone/intro.rst:93
msgid "`ZODB <http://docs.plone.org/develop/plone/persistency/index.html>`_"
msgstr "`ZODB <http://docs.plone.org/develop/plone/persistency/index.html>`_"

#: ../mastering_plone/intro.rst:94
msgid "`Security <http://docs.plone.org/develop/plone/security/index.html>`_"
msgstr "`Security <http://docs.plone.org/develop/plone/security/index.html>`_"

#: ../mastering_plone/intro.rst:95
msgid ""
"`Permissions "
"<http://docs.plone.org/develop/plone/security/permissions.html>`_"
msgstr ""
"`Permissions "
"<http://docs.plone.org/develop/plone/security/permissions.html>`_"

#: ../mastering_plone/intro.rst:96
msgid ""
"`Performance and Caching "
"<http://docs.plone.org/manage/deploying/testing_tuning/performance/index.html>`_"
msgstr ""
"`Desempeño y Cacheo de contenidos "
"<http://docs.plone.org/manage/deploying/testing_tuning/performance/index.html>`_"

#: ../mastering_plone/intro.rst:101
msgid "What to expect"
msgstr "¿Qué esperar?"

#: ../mastering_plone/intro.rst:103
msgid ""
"At the end of the first two days of training, you'll know many of the tools "
"required for Plone installation, integration and configuration. You'll be "
"able to install add-on packages and will know something about the "
"technologies underlying Plone and their histories."
msgstr ""

#: ../mastering_plone/intro.rst:105
msgid ""
"At the end of the second two days, you won't be a complete professional "
"Plone-programmer, but you will know some of the more powerful features of "
"Plone and should be able to construct a more complex website with custom "
"themes and packages. You should also be able to find out where to look for "
"instructions to do tasks we did not cover. You will know most of the core "
"technologies involved in Plone programming."
msgstr ""

#: ../mastering_plone/intro.rst:107
msgid ""
"If you want to become a professional Plone developer or a highly "
"sophisticated Plone integrator you should definitely read `Martin Aspeli's "
"book <https://www.packtpub.com/web-development/professional-"
"plone-4-development>`_ and then re-read it again while actually doing a "
"complex project."
msgstr ""

#: ../mastering_plone/intro.rst:113
msgid "Classroom Protocol"
msgstr ""

#: ../mastering_plone/intro.rst:119
msgid "Stop us and ask questions when you have them!"
msgstr "¡Puede detenernos y pregunte cuando tenga alguna duda!"

#: ../mastering_plone/intro.rst:120
msgid "Tell us if we speak too fast, too slow or not loud enough."
msgstr ""

#: ../mastering_plone/intro.rst:121
msgid ""
"One of us is always there to help you if you are stuck. Please give us a "
"sign if you are stuck."
msgstr ""
"Uno de nosotros siempre está ahí para ayudarle si usted está atascado. Por "
"favor, danos  una señal si usted está atascado."

#: ../mastering_plone/intro.rst:122
msgid "We'll take some breaks, the first one will be at XX."
msgstr ""

#: ../mastering_plone/intro.rst:123
msgid "Where is food, restrooms"
msgstr "¿Dónde está la comida, los baños?"

#: ../mastering_plone/intro.rst:124
msgid "Someone please record the time we take for each chapter (incl. title)"
msgstr ""

#: ../mastering_plone/intro.rst:125
msgid "Someone please write down errors"
msgstr "Por favor, alguien puede indicar a errores"

#: ../mastering_plone/intro.rst:126
msgid "Contact us after the training: team@starzel.de"
msgstr "Contactanos despues del entrenamiento: team@starzel.de"

#: ../mastering_plone/intro.rst:128
msgid "**Questions to ask:**"
msgstr ""

#: ../mastering_plone/intro.rst:130
msgid "What did you just say?"
msgstr ""

#: ../mastering_plone/intro.rst:131
msgid "Please explain what we just did again?"
msgstr ""

#: ../mastering_plone/intro.rst:132
msgid "How did that work?"
msgstr ""

#: ../mastering_plone/intro.rst:133
msgid "Why didn't that work for me?"
msgstr ""

#: ../mastering_plone/intro.rst:134
msgid "Is that a typo?"
msgstr ""

#: ../mastering_plone/intro.rst:136
msgid "**Questions __not__ to ask:**"
msgstr ""

#: ../mastering_plone/intro.rst:138
msgid "**Hypotheticals**: What happens if I do X?"
msgstr ""

#: ../mastering_plone/intro.rst:139
msgid "**Research**: Can Plone do Y?"
msgstr ""

#: ../mastering_plone/intro.rst:140
msgid "**Syllabus**: Are we going to cover Z in class?"
msgstr ""

#: ../mastering_plone/intro.rst:141
msgid "**Marketing questions**: please just don't."
msgstr ""

#: ../mastering_plone/intro.rst:142
msgid "**Performance questions**: Is Plone fast enough?"
msgstr ""

#: ../mastering_plone/intro.rst:143
msgid "**Unpythonic**: Why doesn't Plone do it some other way?"
msgstr ""

#: ../mastering_plone/intro.rst:144
msgid "**Show off**: Look what I just did!"
msgstr ""

#: ../mastering_plone/intro.rst:149
msgid "Documentation"
msgstr "Documentación"

#: ../mastering_plone/intro.rst:151
msgid "Follow the training at https://training.plone.org/5"
msgstr ""

#: ../mastering_plone/intro.rst:155
msgid ""
"You can use this presentation to copy & paste the code but you will memorize"
" more if you type yourself."
msgstr ""
"Usted puede utilizar esta presentación para copiar y pegar el código, pero "
"usted memorizará más si escribe usted mismo."

#: ../mastering_plone/intro.rst:161
msgid "Further Reading"
msgstr "Lecturas recomendadas"

#: ../mastering_plone/intro.rst:162
msgid ""
"`Martin Aspeli: Professional Plone4 Development <https://www.packtpub.com"
"/web-development/professional-plone-4-development>`_"
msgstr ""

#: ../mastering_plone/intro.rst:163
msgid ""
"`Practical Plone <https://www.packtpub.com/web-development/practical-plone-3"
"-beginners-guide-building-powerful-websites>`_"
msgstr ""

#: ../mastering_plone/intro.rst:164
msgid ""
"`Zope Page Templates Reference "
"<http://docs.zope.org/zope2/zope2book/AppendixC.html>`_"
msgstr ""
"`Referencia de Zope Page Templates "
"<http://docs.zope.org/zope2/zope2book/AppendixC.html>`_"

#: ../mastering_plone/optional.rst:4
msgid "Optional"
msgstr "Opcional"

#: ../mastering_plone/optional.rst:6
msgid "zc3.form"
msgstr "zc3.form"

#: ../mastering_plone/optional.rst:8
msgid "ZCA in depth"
msgstr ""

#: ../mastering_plone/optional.rst:9
msgid "ZODB"
msgstr "ZODB"

#: ../mastering_plone/optional.rst:10
msgid "RelStorage"
msgstr ""

#: ../mastering_plone/optional.rst:11
msgid "More and more complex fields"
msgstr ""

#: ../mastering_plone/optional.rst:12
msgid "Custom edit forms"
msgstr ""

#: ../mastering_plone/optional.rst:13
msgid "Users, authentication, member profiles, LDAP"
msgstr ""

#: ../mastering_plone/optional.rst:14
msgid "Caching (plone.app.caching)"
msgstr ""

#: ../mastering_plone/optional.rst:15
msgid "Migrations"
msgstr "Migraciones"

#: ../mastering_plone/optional.rst:16
msgid "Asynchronous processing"
msgstr "Procesamiento asíncrono"

#: ../mastering_plone/optional.rst:17
msgid "Talking with external APIs"
msgstr ""

#: ../mastering_plone/optional.rst:20
msgid "Professional Deployment"
msgstr ""

#: ../mastering_plone/plone5.rst:4
msgid "What's New in Plone 5"
msgstr ""

#: ../mastering_plone/plone5.rst:6
msgid "If you are already used to Plone 5 you could skip this section."
msgstr ""

#: ../mastering_plone/plone5.rst:12
msgid "Default Theme"
msgstr ""

#: ../mastering_plone/plone5.rst:14
msgid ""
"The new default theme is called `Barceloneta "
"<https://github.com/plone/plonetheme.barceloneta/>`_"
msgstr ""

#: ../mastering_plone/plone5.rst:16
msgid ""
"It is a Diazo theme, meaning it uses :py:mod:`plone.app.theming` to insert "
"the output of Plone into static html/css."
msgstr ""

#: ../mastering_plone/plone5.rst:18
msgid ""
"It uses html5, so it uses ``<header>``, ``<nav>``, ``<aside>``, "
"``<section>``, ``<article>`` and ``<footer>`` for semantic html."
msgstr ""

#: ../mastering_plone/plone5.rst:20
msgid ""
"The theme is mostly built with `LESS <http://lesscss.org/>`_ (lots of it!) "
"and uses the same grid system as `bootstrap "
"<http://getbootstrap.com/css/#grid>`_. This means you can use css classes "
"like ``col-xs-12 col-sm-9`` to control the width of elements for different "
"screen-sizes. If you prefer a different grid-system (like `foundation "
"<http://foundation.zurb.com/sites/docs/grid.html>`_) over bootstrap you can "
"adapt the theme to use that."
msgstr ""

#: ../mastering_plone/plone5.rst:22
msgid ""
"The `index.html "
"<https://github.com/plone/plonetheme.barceloneta/blob/master/plonetheme/barceloneta/theme/index.html>`_"
" and `rules.xml "
"<https://github.com/plone/plonetheme.barceloneta/blob/master/plonetheme/barceloneta/theme/rules.xml>`_"
" are actually not that complicated. Have a look at them."
msgstr ""

#: ../mastering_plone/plone5.rst:24
msgid ""
"The following example from :file:`rules.xml` makes sure that the banner "
"saying *\"Welcome! Plone 5 rocks!\"* is only visible on the frontpage:"
msgstr ""

#: ../mastering_plone/plone5.rst:34
msgid ""
"The browser-view ``@@hero`` (you can find it by searching all ZCML-files for"
" ``name=\"hero\"``) is only included when the body-tag of the current page "
"has the css-classes ``template-document_view`` and ``section-front-page``."
msgstr ""

#: ../mastering_plone/plone5.rst:40
msgid "New UI and widgets"
msgstr ""

#: ../mastering_plone/plone5.rst:42
msgid ""
"The green edit bar is replaced by a toolbar that is located on the left or "
"top and can be expanded. The design of the toolbar is pretty isolated from "
"the theme and it should not break if you use a different theme."
msgstr ""

#: ../mastering_plone/plone5.rst:44
msgid "The widgets where you input data are also completely rewritten."
msgstr ""

#: ../mastering_plone/plone5.rst:46
msgid "We now use the newest TinyMCE"
msgstr ""

#: ../mastering_plone/plone5.rst:47
msgid ""
"The tags (keywords) widget and the widgets where you input usernames now use"
" `select2 <http://select2.github.io>`_ autocomplete to give a better user "
"experience"
msgstr ""

#: ../mastering_plone/plone5.rst:48
msgid "The related-items widget is a complete rewrite"
msgstr ""

#: ../mastering_plone/plone5.rst:54
msgid "Folder Contents"
msgstr "Contenidos de una carpeta"

#: ../mastering_plone/plone5.rst:56
msgid ""
"The view to display the content of a folder is new and offers many new "
"features:"
msgstr ""

#: ../mastering_plone/plone5.rst:58
msgid "configurable table columns"
msgstr ""

#: ../mastering_plone/plone5.rst:59
msgid "changing properties of multiple items at once"
msgstr ""

#: ../mastering_plone/plone5.rst:60
msgid "querying (useful for folders with a lot of content)"
msgstr ""

#: ../mastering_plone/plone5.rst:61
msgid "persistent selection of items"
msgstr ""

#: ../mastering_plone/plone5.rst:67
msgid "Content Types"
msgstr "Tipos de Contenido"

#: ../mastering_plone/plone5.rst:69
msgid ""
"All default types are based on Dexterity. This means you can use behaviors "
"to change their features and edit them through the web. Existing old content"
" can be migrated to these types."
msgstr ""

#: ../mastering_plone/plone5.rst:75
msgid "Resource Registry"
msgstr ""

#: ../mastering_plone/plone5.rst:77
msgid ""
"The resource registry allows you to configure and edit the static resources "
"(js, css) of Plone. It replaces the old javascript and css registries. And "
"it can be used to customize the theme by changing the variables used by LESS"
" or overriding LESS files."
msgstr ""

#: ../mastering_plone/plone5.rst:83
msgid "Chameleon template engine"
msgstr ""

#: ../mastering_plone/plone5.rst:85
msgid ""
"`Chameleon <https://chameleon.readthedocs.io/en/latest/>`_ is the new "
"rendering engine of Plone 5. It offers many improvements:"
msgstr ""

#: ../mastering_plone/plone5.rst:87
msgid "Old syntax:"
msgstr ""

#: ../mastering_plone/plone5.rst:95
msgid "New (additional) syntax:"
msgstr ""

#: ../mastering_plone/plone5.rst:103
msgid "Template debugging:"
msgstr ""

#: ../mastering_plone/plone5.rst:105
msgid "You can now put a full-grown ``pdb`` in a template."
msgstr ""

#: ../mastering_plone/plone5.rst:111
msgid ""
"For debugging check out the variable :py:obj:`econtext`, it holds all the "
"current elements."
msgstr ""

#: ../mastering_plone/plone5.rst:113
msgid "You can also add real Python blocks inside templates."
msgstr ""

#: ../mastering_plone/plone5.rst:134
msgid "Don't overdo it!"
msgstr ""

#: ../mastering_plone/plone5.rst:140
msgid "Control panel"
msgstr ""

#: ../mastering_plone/plone5.rst:142
msgid "You can finally upload a logo in ``@@site-controlpanel``."
msgstr ""

#: ../mastering_plone/plone5.rst:143
msgid "All control panels were moved to z3c.form"
msgstr ""

#: ../mastering_plone/plone5.rst:144
msgid "Many small improvements"
msgstr ""

#: ../mastering_plone/plone5.rst:150
msgid "Date formatting on the client side"
msgstr ""

#: ../mastering_plone/plone5.rst:152
msgid ""
"Using the js library moment.js the formatting of dates was moved to the "
"client."
msgstr ""

#: ../mastering_plone/plone5.rst:162
msgid "returns"
msgstr ""

#: ../mastering_plone/plone5.rst:164
msgid "Today at 3:24 PM"
msgstr ""

#: ../mastering_plone/plone5.rst:165
msgid "10/22/2015"
msgstr ""

#: ../mastering_plone/plone5.rst:171
msgid "plone.app.multilingual"
msgstr ""

#: ../mastering_plone/plone5.rst:173
msgid ""
"`plone.app.multilingual <https://github.com/plone/plone.app.multilingual>`_ "
"is the new default add-on for sites in more than one language."
msgstr ""

#: ../mastering_plone/plone5.rst:179
msgid "New portlet manager"
msgstr ""

#: ../mastering_plone/plone5.rst:181
msgid ""
"``plone.footerportlets`` is a new place to put portlets. The footer (holding"
" the footer, site_actions, colophon) is now built from portlets. This means "
"you can edit the footer TTW."
msgstr ""

#: ../mastering_plone/plone5.rst:183
msgid ""
"There is also a useful new portlet type :guilabel:`Actions` used for "
"displaying the site_actions."
msgstr ""

#: ../mastering_plone/plone5.rst:189
msgid "Remove portal_skins"
msgstr ""

#: ../mastering_plone/plone5.rst:191
msgid "Many of the old skin templates were replaced by real browser views."
msgstr ""

#: ../mastering_plone/registry.rst:4
msgid "Manage Settings with Registry, Controlpanels and Vocabularies"
msgstr ""

#: ../mastering_plone/registry.rst:17
msgid "Store a custom setting in a registry"
msgstr ""

#: ../mastering_plone/registry.rst:18
msgid "Create a controlpanel using z3c.form to allow setting that value"
msgstr ""

#: ../mastering_plone/registry.rst:23
msgid "plone.app.registry"
msgstr "plone.app.registry"

#: ../mastering_plone/registry.rst:24
msgid "controlpanels"
msgstr ""

#: ../mastering_plone/registry.rst:28
msgid "The Registry"
msgstr ""

#: ../mastering_plone/registry.rst:30
msgid ""
"The registry is used to get and set values stored in records. Each record "
"contains the actual value, as well as a field that describes the record in "
"more detail. It has a nice dict-like API."
msgstr ""

#: ../mastering_plone/registry.rst:32
msgid "All global settings in Plone 5 are stored in the registry."
msgstr ""

#: ../mastering_plone/registry.rst:34
msgid ""
"The registry itself is provided by `plone.registry "
"<https://pypi.python.org/pypi/plone.registry>`_ and the UI to interact with "
"it by `plone.app.registry "
"<https://pypi.python.org/pypi/plone.app.registry>`_"
msgstr ""

#: ../mastering_plone/registry.rst:36
msgid ""
"Almost all settings in ``/plone_control_panel`` are actually stored in the "
"registry and can be modified using its UI directly."
msgstr ""

#: ../mastering_plone/registry.rst:38
msgid ""
"Open http://localhost:8080/Plone/portal_registry and filter for "
"``displayed_types``. You see can modify the content types that should be "
"shown in the navigation and site map. The values are the same as in "
"http://localhost:8080/Plone/@@navigation-controlpanel but the later form is "
"customized for usability."
msgstr ""

#: ../mastering_plone/registry.rst:41
msgid "A setting"
msgstr ""

#: ../mastering_plone/registry.rst:43
msgid "Let's store two values in the registry:"
msgstr ""

#: ../mastering_plone/registry.rst:45
msgid "The date of the conference"
msgstr ""

#: ../mastering_plone/registry.rst:46
msgid "Is talk submission open or closed"
msgstr ""

#: ../mastering_plone/registry.rst:48
msgid ""
"You cannot create values ttw, instead they need to be registered using "
"Generic Setup."
msgstr ""

#: ../mastering_plone/registry.rst:50
msgid ""
"Open the file :file:`profiles/default/registry.xml`. You already registered "
"several new settings in there:"
msgstr ""

#: ../mastering_plone/registry.rst:52
msgid "You enabled self registration"
msgstr ""

#: ../mastering_plone/registry.rst:53
msgid "You stored a site-logo"
msgstr ""

#: ../mastering_plone/registry.rst:54
msgid "You registered additional criteria useable for Collections"
msgstr ""

#: ../mastering_plone/registry.rst:57
msgid ""
"Adding the following code to :file:`registry.xml`. This creates a new value "
"in the registry upon installation of the package."
msgstr ""

#: ../mastering_plone/registry.rst:70
msgid ""
"When creating a new site a lot of settings are created in the same way. See "
"https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/profiles/dependencies/registry.xml"
" to see how :py:mod:`Products.CMFPlone` registers values."
msgstr ""

#: ../mastering_plone/registry.rst:84
msgid "Accessing and modifying values in the registry"
msgstr ""

#: ../mastering_plone/registry.rst:86
msgid "In python you can access the registry like this:"
msgstr ""

#: ../mastering_plone/registry.rst:97
msgid ":py:mod:`plone.api` holds methods to make this even easier:"
msgstr ""

#: ../mastering_plone/registry.rst:107
msgid "Add a custom controlpanel"
msgstr ""

#: ../mastering_plone/registry.rst:109
msgid ""
"When you want to add a custom controlpanel it is usually more convenient to "
"register the fields not manually like above but as field in a schema, "
"similar to a content-types schema."
msgstr ""

#: ../mastering_plone/registry.rst:111
msgid ""
"For this you define a interface for the schema and a view that auto-"
"generates a form from the schema. In :file:`browser/configure.zcml` add:"
msgstr ""

#: ../mastering_plone/registry.rst:122
msgid "Add a file :file:`browser/controlpanel.py`:"
msgstr ""

#: ../mastering_plone/registry.rst:161
msgid ""
"With this way of using fields you don't have to register the values in "
":file:`registry.xml`, instead you have to register the interface:"
msgstr ""

#: ../mastering_plone/registry.rst:168
msgid ""
"After reinstalling the package (to load the registry-entry) you can access "
"the controlpanel at http://localhost:8080/Plone/@@ploneconf-controlpanel."
msgstr ""

#: ../mastering_plone/registry.rst:170
msgid ""
"To make it show up in the general controlpanel at "
"http://localhost:8080/Plone/@@overview-controlpanel you have to register it "
"with GenericSetup. Add a file :file:`profiles/default/controlpanel.xml`:"
msgstr ""

#: ../mastering_plone/registry.rst:190
msgid ""
"Again, after applying the profile (reinstall the package or write a upgrade-"
"step) your controlpanel shows up in http://localhost:8080/Plone/@@overview-"
"controlpanel."
msgstr ""

#: ../mastering_plone/registry.rst:194
msgid "Vocabularies"
msgstr ""

#: ../mastering_plone/registry.rst:196
msgid ""
"Do you remember the field `rooms`? We provided several options to chose "
"from. But who says that the next conference will have the same rooms? These "
"values should be configurable by the admin. The admin could go to the "
"dexterity-controlpanel and change the values but we will use a different "
"approach. We will allow the rooms to be added in the controlpanel and use "
"these values in the talk-schema by registering a vocabulary."
msgstr ""

#: ../mastering_plone/registry.rst:202
msgid "Add a new field to :py:class:`IPloneconfControlPanel`:"
msgstr ""

#: ../mastering_plone/registry.rst:215
msgid "Create a file :file:`vocabularies.py` and write the vocabulary:"
msgstr ""

#: ../mastering_plone/registry.rst:242
msgid "`RoomsVocabulary` is a instance of :py:class:`RoomsVocabularyFactory`."
msgstr ""

#: ../mastering_plone/registry.rst:243
msgid ""
"We normalize values to create a vocabulary since the value of a "
"SimpleVocabulary has to be ASCII. We use one of many useful normalizers that"
" Plone provides."
msgstr ""

#: ../mastering_plone/registry.rst:245
msgid ""
"Register a vocabulary in :file:`configure.zcml` as "
"`ploneconf.site.vocabularies.Rooms`:"
msgstr ""

#: ../mastering_plone/registry.rst:253
msgid "Use the vocabulary in the talk-schema. Edit :file:`content/talk.xml`"
msgstr ""

#: ../mastering_plone/registry.rst:268
msgid ""
"Now a admin can configure the rooms available for the conference. We could "
"use the same pattern for the fields `type_of_talk` and `audience`."
msgstr ""

#: ../mastering_plone/registry.rst:272
msgid ""
"http://docs.plone.org/external/plone.app.dexterity/docs/advanced/vocabularies.html"
msgstr ""

#: ../mastering_plone/registry.rst:276
msgid "In a python-schema that would look like this:"
msgstr ""

#: ../mastering_plone/relations.rst:2
msgid "Relations"
msgstr ""

#: ../mastering_plone/relations.rst:4
msgid ""
"You can model relationships between content items by placing them in a "
"hierarchy (a folder *speakers* containing the (folderish) speakers and "
"within each speaker the talks) or by linking them to each other in Richtext-"
"Fields. But where would you store a talk that two speakers give together "
"together?"
msgstr ""

#: ../mastering_plone/relations.rst:6
msgid ""
"Relations allow developers to model relationships between objects without a "
"links or a hierarchy. The behavior "
":py:class:`plone.app.relationfield.behavior.IRelatedItems` provides the "
"field :guilabel:`Related Items` in the tab :guilabel:`Categorization`. That "
"field simply says ``a`` is somehow related to ``b``."
msgstr ""

#: ../mastering_plone/relations.rst:8
msgid ""
"By using custom relations you can model your data in a much more meaningful "
"way."
msgstr ""

#: ../mastering_plone/relations.rst:12
msgid "Creating relations in a schema"
msgstr ""

#: ../mastering_plone/relations.rst:14
msgid "Relate to one item only."
msgstr ""

#: ../mastering_plone/relations.rst:28
msgid "Relate to multiple items."
msgstr ""

#: ../mastering_plone/relations.rst:44
msgid ""
"We can see that the `code for the behavior IRelatedItems "
"<https://github.com/plone/plone.app.relationfield/blob/master/plone/app/relationfield/behavior.py>`_"
" does exactly the same."
msgstr ""

#: ../mastering_plone/relations.rst:46
msgid "Instead of using a named vocabulary we can also use ``source``:"
msgstr ""

#: ../mastering_plone/relations.rst:62
msgid ""
"To ``CatalogSource`` you can pass the same argument that you use for "
"catalog-queries. This makes it very flexible to limit relateable items by "
"type, path, date etc."
msgstr ""

#: ../mastering_plone/relations.rst:65
msgid ""
"For even more flexibility you can create your own `dynamic vocabularies "
"<http://docs.plone.org/external/plone.app.dexterity/docs/advanced/vocabularies.html"
"#dynamic-sources>`_."
msgstr ""

#: ../mastering_plone/relations.rst:69
msgid "Accessing and displaying related items"
msgstr ""

#: ../mastering_plone/relations.rst:71
msgid ""
"One would think that it would be the easiest approach to simply use the "
"render-method of the default-widget like we did in the chapter \"Views II: A"
" Default View for “Talk”\". Sadly that is wrong. Adding the approriate code "
"to te template:"
msgstr ""

#: ../mastering_plone/relations.rst:77
msgid "would only render the UIDs of the related items:"
msgstr ""

#: ../mastering_plone/relations.rst:85
msgid ""
"This is not very useful but anyway it is very likely that you want to "
"control closely how to render these items."
msgstr ""

#: ../mastering_plone/relations.rst:87
msgid ""
"So we add a method to the view to return the related items so that we're "
"able to render anyway we like."
msgstr ""

#: ../mastering_plone/relations.rst:104
msgid ""
"We use :py:meth:`rel.to_path` and use the items path to query the catalog "
"for its catalog-entry. This is much more efficient than using "
":py:meth:`rel.to_object` since we don't have to wake up any objects. Setting"
" ``depth`` to ``0`` will only return items with exactly this path, so it "
"will always return a list with one item."
msgstr ""

#: ../mastering_plone/relations.rst:108
msgid ""
"Using the path sounds a little complicated and it would indeed be more "
"convenient if a :py:class:`RelationItem` would contain the ``UID`` (so we "
"can query the catalog for that) or if the ``portal_catalog`` would index the"
" ``IntId``. But that's the way it is for now."
msgstr ""

#: ../mastering_plone/relations.rst:110
msgid ""
"For reference look at how the default viewlet displays the information for "
"related items stored by the behavior :py:class:`IRelatedItems`. See how it "
"does exactly the same in ``related2brains``. This is the Python-path for the"
" viewlet: :py:class:`plone.app.layout.viewlets.content.ContentRelatedItems` "
"This is the file-path for the template: "
":file:`plone/app/layout/viewlets/document_relateditems.pt`"
msgstr ""

#: ../mastering_plone/relations.rst:116
msgid "Creating Relationfields through the web"
msgstr ""

#: ../mastering_plone/relations.rst:118
msgid "It is surprisingly easy to create RelationFields through the web"
msgstr ""

#: ../mastering_plone/relations.rst:120
msgid ""
"In the dexterity schema-editor add a new field and select *Relation List* or"
" *Relation Choice*, depending on wether you want to relate to multiple items"
" or not."
msgstr ""

#: ../mastering_plone/relations.rst:121
msgid ""
"When configuring the field you can even select the content-type the relation"
" should be limited to."
msgstr ""

#: ../mastering_plone/relations.rst:123
msgid ""
"When you click on ``Edit xml field model`` you will see the fields in the "
"xml-schema:"
msgstr ""

#: ../mastering_plone/relations.rst:125
msgid "RelationChoice:"
msgstr ""

#: ../mastering_plone/relations.rst:135
msgid "RelationList:"
msgstr ""

#: ../mastering_plone/relations.rst:154
msgid "The stack"
msgstr ""

#: ../mastering_plone/relations.rst:156
msgid ""
"Relations are based on `zc.relation "
"<https://pypi.python.org/pypi/zc.relation/>`_. This package allows to store "
"transitive and intransitive relationships. It allows for complex "
"relationships and searches along them. Because of this functionality, the "
"package is a bit complicated."
msgstr ""

#: ../mastering_plone/relations.rst:161
msgid ""
"The package `zc.relation` provides its own catalog, a relation catalog. This"
" is a storage optimized for the queries needed. `zc.relation` is sort of an "
"outlier with regards to zope documentation. It has extensive documentation, "
"with a good level of doctests for explaining things."
msgstr ""

#: ../mastering_plone/relations.rst:165
msgid ""
"You can use `zc.relation` to store the objects and its relations directly "
"into the catalog. But the additional packages that make up the relation "
"functionality don't use the catalog this way."
msgstr ""

#: ../mastering_plone/relations.rst:168
msgid ""
"We want to work with schemas to get auto generated forms. The logic for this"
" is provided by the package `z3c.relationfield "
"<https://pypi.python.org/pypi/z3c.relationfield/>`_. This package contains "
"the RelationValue object and everything needed to define a relation schema, "
"and all the code that is necessary to automatically update the catalog."
msgstr ""

#: ../mastering_plone/relations.rst:172
msgid ""
"A RelationValue Object does not reference all objects directly. For the "
"target, it uses an id it gets from the `IntId` Utility. This id allows "
"direct recovery of the object. The source object stores it directly."
msgstr ""

#: ../mastering_plone/relations.rst:175
msgid ""
"Widgets are provided by `plone.app.z3cform` and some converters are provided"
" by `plone.app.relationfield`. The widget that Plone uses can also store "
"objects directly. Because of this, the following happens when saving a "
"relation via a form:"
msgstr ""

#: ../mastering_plone/relations.rst:179
msgid "The html shows some nice representation of selectable objects."
msgstr ""

#: ../mastering_plone/relations.rst:180
msgid ""
"When the user submits the form, selected items are submitted by their UUIDs."
msgstr ""

#: ../mastering_plone/relations.rst:181
msgid "The Widget retrieves the original object with the UUID."
msgstr ""

#: ../mastering_plone/relations.rst:182
msgid "Some datamanager gets another unique ID from an IntID Tool."
msgstr ""

#: ../mastering_plone/relations.rst:183
msgid ""
"The same datamanager creates a RelationValue from this id, and stores this "
"relation value on the source object."
msgstr ""

#: ../mastering_plone/relations.rst:184
msgid "Some Event handlers update the catalogs."
msgstr ""

#: ../mastering_plone/relations.rst:186
msgid ""
"You could delete a Relation like this `delattr(rel.from_object, "
"rel.from_attribute)`"
msgstr ""

#: ../mastering_plone/relations.rst:188
msgid ""
"This is a terrible idea by the way, because when you define in your schema "
"that one can store multiple RelationValues, your Relation is stored in a "
"list on this attribute."
msgstr ""

#: ../mastering_plone/relations.rst:190
msgid ""
"Relations depend on a lot of infrastructure to work. This infrastructure in "
"turn depends a lot on event handlers being thrown properly. When this is not"
" the case things can break. Because of this, there is a method `isBroken` "
"which you can use to check if the target is available."
msgstr ""

#: ../mastering_plone/relations.rst:195
msgid ""
"There are alternatives to using Relations. You could instead just store the "
"UUID of an object. But using real relations and the catalog allows for very "
"powerful things. The simplest concrete advantage is the possibility to see "
"what links to your object."
msgstr ""

#: ../mastering_plone/relations.rst:199
msgid ""
"The builtin linkintegrity-feature of Plone 5 is also built using relations."
msgstr ""

#: ../mastering_plone/relations.rst:203
msgid "RelationValues"
msgstr ""

#: ../mastering_plone/relations.rst:205
msgid ""
"RelationValue objects have a fairly complete API. For both target and "
"source, you can receive the IntId, the object and the path. On a "
"RelationValue, the terms `source` and `target` aren't used. Instead, they "
"are `from` and `to`. So the API for getting the target is:"
msgstr ""

#: ../mastering_plone/relations.rst:210
msgid "`to_id`"
msgstr ""

#: ../mastering_plone/relations.rst:211
msgid "`to_path`"
msgstr ""

#: ../mastering_plone/relations.rst:212
msgid "`to_object`"
msgstr ""

#: ../mastering_plone/relations.rst:214
msgid ""
"In addition, the relation value knows under which attribute it has been "
"stored as `from_attribute`. It is usually the name of the field with which "
"the relation is created. But it can also be the name of a relation that is "
"created by code, e.g. linkintegrity-relations (`isReferencing`) or the "
"relation between a working copy and the original (`iterate-working-copy`)."
msgstr ""

#: ../mastering_plone/relations.rst:219
msgid "Accessing relations and backrelations from code"
msgstr ""

#: ../mastering_plone/relations.rst:221
msgid ""
"If you want to find out what objects are related to each other, you use the "
"relation catalog. Here is a convenience-method that allows you to find all "
"kinds of relations."
msgstr ""

#: ../mastering_plone/resources.rst:4
msgid "Resources"
msgstr "Recursos"

#: ../mastering_plone/resources.rst:15
msgid ""
"We have not yet talked about CSS and Javascript. At the moment these are "
"considered static resources."
msgstr ""
"Todavía no hemos hablado de los archivos CSS y Javascript. Por el momento "
"estos son considerados recursos estáticos."

#: ../mastering_plone/resources.rst:17
msgid ""
"You can declare and access static resources with special urls. The "
"`configure.zcml` of our package already has a declaration for a resource-"
"folder :file:`static`."
msgstr ""

#: ../mastering_plone/resources.rst:27
msgid ""
"All files we put in the :file:`static` folder can be accessed via the url "
"http://localhost:8080/Plone/++plone++ploneconf.site/the_real_filename.css"
msgstr ""

#: ../mastering_plone/resources.rst:29
msgid ""
"Another feature of this folder ist that the resouces you put in there are "
"editable and overrideable in the browser using the overrides-tab of the "
"resource registry."
msgstr ""

#: ../mastering_plone/resources.rst:31
msgid ""
"Let's create a file :file:`ploneconf.css` in the :file:`static` folder with "
"some CSS:"
msgstr ""

#: ../mastering_plone/resources.rst:54
msgid ""
"The css is not very exciting. It hides the :guilabel:`only in current "
"section` below the search-box (we could also overwrite the viewlet, but "
"...). It also hides the event-fields we added in :ref:`events-label` from "
"people submitting their talks. For exiting css you take the training :ref"
":`theming-label`."
msgstr ""

#: ../mastering_plone/resources.rst:57
msgid ""
"If we now access "
"http://localhost:8080/Plone/++plone++ploneconf.site/ploneconf.css we see our"
" css-file."
msgstr ""

#: ../mastering_plone/resources.rst:59
msgid ""
"Also add a :file:`ploneconf.js` in the same folder but leave it empty for "
"now. You could add some JavaScript to that file later."
msgstr ""

#: ../mastering_plone/resources.rst:61
msgid ""
"How do our JavaScript and CSS files get used when visiting the page? So far "
"the new files are accessible in the browser but we want Plone to use them "
"every time we access the page. Adding them directly into the HTML is not a "
"good solution, having many CSS and JS files slows down the page loading."
msgstr ""

#: ../mastering_plone/resources.rst:65
msgid ""
"For this we need to register a *bundle* that contains these files. Plone "
"will then make sure that all files that are part of this bundle are also "
"deployed. We need to register our resources with GenericSetup."
msgstr ""

#: ../mastering_plone/resources.rst:68
msgid ""
"Open the file :file:`profiles/default/registry.xml` and add the following:"
msgstr ""

#: ../mastering_plone/resources.rst:86
msgid ""
"The resources that are part of the registered bundle will now be deployed "
"with every request."
msgstr ""

#: ../mastering_plone/resources.rst:88
msgid ""
"For more infos please see http://docs.plone.org/adapt-and-"
"extend/theming/resourceregistry.html or https://training.plone.org/5/theming"
"/adv-resource-registry.html."
msgstr ""

#: ../mastering_plone/restapi.rst:2
msgid "Plone REST API"
msgstr ""

#: ../mastering_plone/restapi.rst:13
msgid ""
"In this chapter, we will have a look at the relatively new addon "
"`plone.restapi <https://plonerestapi.readthedocs.io/en/latest/index.html>`_."
" It provides a hypermedia API to access Plone content using REST "
"(Representational State Transfer)."
msgstr ""

#: ../mastering_plone/restapi.rst:15
msgid ""
"We will use :py:mod:`plone.restapi` to develop a small standalone 'single "
"page app' targeted at mobile devices. We will present our users with a "
"simple list of conference talks. We add lightning talks as a new type of "
"talk. Users will be able to submit lightning talks e.g. using their mobile "
"phone."
msgstr ""

#: ../mastering_plone/restapi.rst:17
msgid "We have the following tasks:"
msgstr ""

#: ../mastering_plone/restapi.rst:19
msgid "create a talk list view"
msgstr ""

#: ../mastering_plone/restapi.rst:20
msgid ""
"create a login screen and use JWT for authentication/authorization of "
"requests"
msgstr ""

#: ../mastering_plone/restapi.rst:21
msgid "let authenticated users submit lightning talks"
msgstr ""

#: ../mastering_plone/restapi.rst:24
msgid "Installing plone.restapi"
msgstr ""

#: ../mastering_plone/restapi.rst:26
msgid ""
"We install :py:mod:`plone.restapi` like any other add-on package by adding "
"it to :file:`buildout.cfg` and then activating it in the :guilabel:`Add-ons`"
" panel. This will automatically add and configure a new PAS plugin named "
"`jwt_auth` used for JSON web token authentication."
msgstr ""

#: ../mastering_plone/restapi.rst:30
msgid "Explore the API"
msgstr ""

#: ../mastering_plone/restapi.rst:32
msgid ""
"Make sure you add some talks to the talks folder and then start exploring "
"the API. We recommend using `Postman <https://www.getpostman.com/>`_ or a "
"similar tool, but you can also use `requests "
"<https://pypi.python.org/pypi/requests>`_ in a Python virtual env. "
":py:mod:`plone.restapi` uses 'content negotiation' to determine whether a "
"client wants a REST API response - if you set the ``Accept`` HTTP header to "
"``application/json``, Plone will provide responses in JSON format. Some "
"requests you could try:"
msgstr ""

#: ../mastering_plone/restapi.rst:55
msgid ""
"REST APIs use HTTP verbs for manipulating content. ``PATCH`` is used to "
"update an existing resource. Add a new talk in Plone and then update it's "
"title to match 'Foo 42' using the REST API (from Postman or requests)."
msgstr ""

#: ../mastering_plone/restapi.rst:60
msgid ""
"We need to login to change content. Using JWT, we do so by POSTing "
"credentials to the ``@login`` resource to obtain a JSON web token that we "
"can subsequently use to authorize requests."
msgstr ""

#: ../mastering_plone/restapi.rst:73
msgid "The response will look like this:"
msgstr ""

#: ../mastering_plone/restapi.rst:81
msgid "Using the :py:mod:`requests` library from Python, you would do:"
msgstr ""

#: ../mastering_plone/restapi.rst:95
msgid "Now we can change the talk title:"
msgstr ""

#: ../mastering_plone/restapi.rst:109
msgid "Using :py:mod:`requests` again:"
msgstr ""

#: ../mastering_plone/restapi.rst:120
msgid "Implementing the talklist"
msgstr ""

#: ../mastering_plone/restapi.rst:122
msgid ""
"We will use `Mobile Angular UI <http://mobileangularui.com/>`_ to develop "
"our app. This is a relatively lightweight JavaScript framework for "
"developing hybrid web apps built on top of `AngularJS "
"<https://angularjs.org/>`_. There are a lot of other frameworks available "
"(e.g. Ionic, OnsenUI, Sencha, ...), but most of them have more dependencies "
"than `Mobile Angular UI`. For example, most of them require NodeJS as a "
"development web server. Our focus is Plone and interacting with "
":py:mod:`plone.restapi`, and `Mobile Angular UI` perfectly suits our needs "
"because it simply lets us use Plone as our development webserver."
msgstr ""

#: ../mastering_plone/restapi.rst:128
msgid ""
"To get started, we download the current `master branch of Mobile Angular UI "
"<https://github.com/mcasimir/mobile-angular-ui/archive/master.zip>`_ from "
"Github, extract it and copy the :file:`dist` folder into a new subdirectory "
"of :file:`browser` named :file:`talklist`. So, assuming the current working "
"directory is the buildout directory:"
msgstr ""

#: ../mastering_plone/restapi.rst:138
msgid ""
"Then we add a new resource directory to :file:`browser/configure.zcml`:"
msgstr ""

#: ../mastering_plone/restapi.rst:147
msgid ""
"In the :file:`browser/talklist` directory, we add an HTML page called "
":file:`index.html`:"
msgstr ""

#: ../mastering_plone/restapi.rst:202
msgid ""
"Now you can point your browser to "
"http://localhost:8080/Plone/++resource++talklist/index.html to see the "
"result. So far, the page will simply display a list of published talks. But "
"we also need some JavaScript that we put into a file named "
":file:`talklist.js` in the same folder:"
msgstr ""

#: ../mastering_plone/restapi.rst:266
msgid "Submit lightning talks"
msgstr ""

#: ../mastering_plone/restapi.rst:268
msgid ""
"We add a new type of talk: lightning talk. A lightning talk is a short "
"presentation of up to 5 minutes duration that can cover just about any "
"topic. The information we need to provide for lightning talks is far less "
"than for the more formal types of talk. Often the information provided for "
"lightning talks is restricted to the talk subject or title and the speaker "
"name, but we allow for a short summary. Before they can submit a lightning "
"talk, potential speakers will need to login and we will use their previously"
" registered login name as the speaker's name to display in the talk list."
msgstr ""

#: ../mastering_plone/restapi.rst:273
msgid ""
"Before we can start to submit lightning talks using REST calls from our "
"single page app, we have to adapt the talk schema:"
msgstr ""

#: ../mastering_plone/restapi.rst:351
msgid ""
"Next, in our JavaScript code, we provide a method for logging in a user and "
"another one to check whether the user has a valid JSON web token. We use the"
" ``localStorage`` facility of the browser to store the token on the client."
msgstr ""

#: ../mastering_plone/restapi.rst:380
msgid ""
"We continue with changes to :file:`index.html` so that it uses the new "
"methods. We provide a login form if the user doesn't have a valid JSON web "
"token. Only authenticated users can see the rest of the page."
msgstr ""

#: ../mastering_plone/restapi.rst:419
msgid ""
"Last we have to add some code that allows authenticated users to submit a "
"lightning talk. We add another javascript method first:"
msgstr ""

#: ../mastering_plone/restapi.rst:462
msgid ""
"Rewrite the ``load_talks()`` javascript method so that it uses the portal "
"search instead of ``/Plone/talks``. Sort the list by date."
msgstr ""

#: ../mastering_plone/reusable.rst:4
msgid "Making Our Package Reusable"
msgstr ""

#: ../mastering_plone/reusable.rst:8
msgid "Add Permissions"
msgstr ""

#: ../mastering_plone/reusable.rst:15
msgid "The package contains some problems."
msgstr "Esta paquete contiene algunos problemas."

#: ../mastering_plone/reusable.rst:17
msgid ""
"No permission settings, Users can't customize who and when users can vote"
msgstr ""

#: ../mastering_plone/reusable.rst:18
msgid "We do things, but don't trigger events. Events allow others to react."
msgstr ""

#: ../mastering_plone/reusable.rst:23
msgid "Adding permissions"
msgstr "Agregando permisos"

#: ../mastering_plone/reusable.rst:32
msgid "Permissions have a long history, there are two types of permissions."
msgstr ""

#: ../mastering_plone/reusable.rst:34
msgid "In Zope2, a permission was just a string."
msgstr "En Zope2, un permiso era sólo una cadena."

#: ../mastering_plone/reusable.rst:36
msgid "In ZTK, a permission is an object that gets registered as a Utility."
msgstr ""

#: ../mastering_plone/reusable.rst:38
msgid ""
"We must support both, in some cases we have to reference the permission by "
"their Zope2 version, in some by their ZTK Version."
msgstr ""

#: ../mastering_plone/reusable.rst:40
msgid ""
"Luckily, there is a zcml statement to register a permission both ways in one"
" step."
msgstr ""

#: ../mastering_plone/reusable.rst:44
msgid ""
"The configuration registry was meant to solve a problem, but we will now "
"stumble over a problem that did not get resolved properly."
msgstr ""

#: ../mastering_plone/reusable.rst:46
msgid ""
"Our permission is a utility. Our browser views declare this permission as a "
"requirement for viewing them."
msgstr ""

#: ../mastering_plone/reusable.rst:48
msgid ""
"When our browser views get registered, the permissions must exist already. "
"If you try to register the permissions after the views, Zope won't start "
"because it doesn't know about the permissions."
msgstr ""

#: ../mastering_plone/reusable.rst:50
msgid "Let's modify the file :file:`configure.zcml`"
msgstr ""

#: ../mastering_plone/reusable.rst:77
msgid ""
"In some places we have to reference the Zope 2 permission strings. It is "
"best practice to provide a static variable for this."
msgstr ""

#: ../mastering_plone/reusable.rst:79
msgid "We provide this in :file:`__init__.py`"
msgstr ""

#: ../mastering_plone/reusable.rst:92
msgid "Using our permissions"
msgstr ""

#: ../mastering_plone/reusable.rst:96
msgid ""
"As you can see, we created two permissions, one for voting, one for viewing "
"the votes."
msgstr ""

#: ../mastering_plone/reusable.rst:98
msgid ""
"If a user is not allowed to see the votes, she does not need access to the "
"vote viewlet."
msgstr ""

#: ../mastering_plone/reusable.rst:100
msgid ""
"While we are at it, if a user can't vote, she needs no access to the helper "
"view to actually submit a vote."
msgstr ""

#: ../mastering_plone/reusable.rst:102
msgid "We can add this restriction to :file:`browser/configure.zcml`"
msgstr ""

#: ../mastering_plone/reusable.rst:139
msgid ""
"We are configuring components, so we use the component name of the "
"permission, which is the :samp:`id` part of the declaration we added "
"earlier."
msgstr ""

#: ../mastering_plone/reusable.rst:143
msgid "So, what happens if we do not protect the browser view to vote?"
msgstr ""

#: ../mastering_plone/reusable.rst:145
msgid ""
"The person could still vote, by handcrafting the URL. Browser Views run code"
" without any restriction, it is your job to take care of security."
msgstr ""

#: ../mastering_plone/reusable.rst:147
msgid ""
"But... if a person has no access to the object at all, maybe because the "
"site is configured that Anonymous users cannot access private objects, the "
"unauthorized users will not be able to submit a vote."
msgstr ""

#: ../mastering_plone/reusable.rst:149
msgid ""
"That is because Zope checks security permissions when trying to find the "
"right object. If it can't find the object due to security constraints not "
"met, no view ill ever be called, because that would have been the next step."
msgstr ""

#: ../mastering_plone/reusable.rst:151
msgid ""
"We now protect our views and viewlets. We still show the option to vote "
"though."
msgstr ""

#: ../mastering_plone/reusable.rst:153
msgid ""
"We must add a condition in our page template, and we must provide the "
"condition information in our viewlet class."
msgstr ""

#: ../mastering_plone/reusable.rst:155
msgid "Lets move on to :file:`browser/viewlets.py`"
msgstr ""

#: ../mastering_plone/reusable.rst:184
msgid "And the template in :file:`browser/templates/voting_viewlet.pt`"
msgstr ""

#: ../mastering_plone/reusable.rst:215
msgid ""
"Sometimes subtle bugs come up because of changes. In this case I noticed "
"that I should only prompt people to vote if they are allowed to vote!"
msgstr ""

#: ../mastering_plone/reusable.rst:220
msgid "Provide defaults"
msgstr ""

#: ../mastering_plone/reusable.rst:224
msgid "Are we done yet? Who may vote now?"
msgstr ""

#: ../mastering_plone/reusable.rst:226
msgid "We have to tell that someone."
msgstr ""

#: ../mastering_plone/reusable.rst:228
msgid ""
"Who has which permissions is managed in Zope. This is persistent, and "
"persistent configuration is handled by GenericSetup."
msgstr ""

#: ../mastering_plone/reusable.rst:230
msgid ""
"The persistent configuration is managed in another file: "
":file:`profiles/default/rolemap.xml`"
msgstr ""

#: ../mastering_plone/roadmap.rst:2
msgid "Roadmap"
msgstr "Mapa de ruta"

#: ../mastering_plone/roadmap.rst:5
msgid "1.3"
msgstr "1.3"

#: ../mastering_plone/roadmap.rst:7
msgid "Add new chapters:"
msgstr "Agregar nuevo capítulos:"

#: ../mastering_plone/roadmap.rst:9
msgid "z3c.forms (incl. control panels and plone.app.registry)"
msgstr ""

#: ../mastering_plone/roadmap.rst:10
msgid "testing (incl. Robot Framework test)"
msgstr ""

#: ../mastering_plone/roadmap.rst:11
msgid "relations (incl. widgets, custom indexers)"
msgstr "relaciones (incluyendo widgets, indexes personalizados)"

#: ../mastering_plone/roadmap.rst:12
msgid "security (incl. custom permissions and roles)"
msgstr ""

#: ../mastering_plone/roadmap.rst:16
msgid "Todo"
msgstr "Todo"

#: ../mastering_plone/roadmap.rst:18
msgid ""
"Todos are managed as issues in the `github-reposiory "
"<https://github.com/plone/training/issues>`_"
msgstr ""
"Todos son mantenidos como incidencias en el `repositorio github "
"<https://github.com/plone/training/issues>`_"

#: ../mastering_plone/testing.rst:4
msgid "Testing in Plone"
msgstr ""

#: ../mastering_plone/testing.rst:15
#: ../mastering_plone/user_generated_content.rst:17
msgid "In this chapter we:"
msgstr "En este capítulo vamos a:"

#: ../mastering_plone/testing.rst:17
msgid "Write tests"
msgstr ""

#: ../mastering_plone/testing.rst:21
msgid "Testing best practices"
msgstr ""

#: ../mastering_plone/testing.rst:22
msgid "Internals of Plone"
msgstr ""

#: ../mastering_plone/testing.rst:27
msgid "Types of tests"
msgstr ""

#: ../mastering_plone/testing.rst:41
msgid ""
"Plone is using some common terminology for types of tests you might have "
"heard elsewhere. But in Plone, these terms are usually used to differentiate"
" the technical difference between the types of test."
msgstr ""

#: ../mastering_plone/testing.rst:44
msgid "Unit tests"
msgstr ""

#: ../mastering_plone/testing.rst:46
msgid ""
"These match the normal meaning the most. Unit tests test a unit in "
"isolation. That means there is no database, no component architecture and no"
" browser. This means the code is very fast and it can mean that you can't "
"test all that much if your code mostly interacts with other components."
msgstr ""

#: ../mastering_plone/testing.rst:48
msgid ""
"A unit test for a browser view would create an instance of the view "
"directly. That means it is your responsibility to provide a proper context "
"and a proper request. You can't really test user-dependent behavior because "
"you just mock a Request object imitating a user or not. This code might be "
"broken with the next version of Plone without the test failing."
msgstr ""

#: ../mastering_plone/testing.rst:50
msgid ""
"On the other hand, testing a complex rule with many different outcomes is "
"still best tested in a unit test, because they are very fast."
msgstr ""

#: ../mastering_plone/testing.rst:53
msgid "Integration tests"
msgstr ""

#: ../mastering_plone/testing.rst:55
msgid ""
"Integration tests in Plone mean you have a real database and your component "
"architecture. You can identify an integration test by the layer it is using "
"which is based on a layer with integration in its name. We will explain "
"shortly what a layer is."
msgstr ""

#: ../mastering_plone/testing.rst:57
msgid ""
"Integration tests also means your test is still quite fast, because the "
"transaction mechanisms are used for test isolation. What does that mean? "
"After each test, the transaction gets canceled and you have the database in "
"the same state as before. It still takes a while to set up the test layer, "
"but running each test is quite fast. But this also means you cannot commit a"
" transaction. Most code does not commit transactions and this is not an "
"issue."
msgstr ""

#: ../mastering_plone/testing.rst:60
msgid "Functional tests"
msgstr ""

#: ../mastering_plone/testing.rst:62
msgid ""
"Functional tests in Plone have a real database and a component architecture,"
" like Integration tests. In addition, you can simulate a browser in python "
"code. When this browser tries to access a page, the complete transaction "
"machinery is in use. For this to work, the test layer wraps the database "
"into a demostorage. A Demostorage is for demonstration. A demostorage wraps "
"a regular storage. When something gets written into the database, the "
"demostorage stores it into memory or temporary fields. On reading it either "
"returns what has been saved in memory or what is in the underlaying storage."
" After each test, the demostorage is wiped. This should make it nearly as "
"fast as integration tests, but there is an additional overhead, when "
"requests get through the transaction machinery. Also, the browser is pure "
"python code. It knows nothing about javascript. You cannot test your "
"javascript code with functional tests"
msgstr ""

#: ../mastering_plone/testing.rst:67
msgid "Acceptance tests"
msgstr ""

#: ../mastering_plone/testing.rst:69
msgid ""
"Acceptance tests are usually tests that can assert that an application would"
" pass the requirements the customer gave. This implies that acceptance tests"
" test the complete functionality and that they either allow the customer to "
"understand what is being tested or at least clearly map to business "
"requirements. In Plone, acceptance tests are tests written with the so "
"called robot framework. Here you write tests in something resembling a "
"natural language and which is driven by a real web browser. This implies you"
" can also test Javascript. This is the slowest form of testing but also the "
"most complete. Also, acceptance tests aren't limited to the original form of"
" acceptance tests, but also for normal integration tests."
msgstr ""

#: ../mastering_plone/testing.rst:75
msgid "Javascript tests"
msgstr ""

#: ../mastering_plone/testing.rst:76
msgid ""
"So far, it looks like we only have acceptance tests for testing javascript. "
"Acceptance tests are also very new. This means we had no test story for "
"testing javascript. In Plone 5, we have the mockup framework to write "
"javascript components and the mockup framework provides also scaffolding for"
" testing Javascript with xxx. While these tests use a real browser of some "
"sort, they fall into the category of unit tests, because you have no "
"database Server available to generate proper html."
msgstr ""

#: ../mastering_plone/testing.rst:80
msgid "Doctests"
msgstr ""

#: ../mastering_plone/testing.rst:81
msgid ""
"Doctests are a popular way to write tests in documentation. Doctests parse "
"documentation for code that has special formatting and runs the code and "
"compares it with the output suggested in the documentation. Doctests are "
"hard to debug, because there is no easy way to use a debugger in doctests. "
"Doctests have a bad reputation, because when it came around, people thought "
"they could write documentation and tests in one go. This resulted in "
"packages like zope.component, where the documentation on pypi slowly "
"transforms into half sentences split up by 5-10 lines of code testing an "
"obscure feature that the half sentence does not properly explain. In Plone, "
"this form of testing is not very common. We would like to transform our "
"documentation to be testable with doctests."
msgstr ""

#: ../mastering_plone/testing.rst:89
msgid "Writing tests"
msgstr ""

#: ../mastering_plone/testing.rst:101
msgid ""
"Writing tests is an art. If your testsuite needs half an hour to run, it "
"loses a lot of value. If you limit yourself to unit tests and fake "
"everything, you miss many bugs, either because Plone works differently than "
"what you thought, or the next Plone versions run differently from today's. "
"On the other hand, integration tests are not only slower, but often create "
"test failures far away from the actual error in the code. Not only do the "
"tests run more slowly, it also takes longer to debug why they fail. Here are"
" some good rules to take into account."
msgstr ""

#: ../mastering_plone/testing.rst:105
msgid ""
"If you need to write many test cases for a browser view, you might want to "
"factor this out into a component of its own, in such a way that this "
"component can easily be tested with unit tests. If, for example, you have a "
"list view that shall do a specific way of sorting, depending on gender, "
"language and browser of a user, write a component that takes a list of names"
" to sort, gender, language and browser as strings. This code can easily be "
"tested for all combinations in unit tests, while extracting gender, language"
" and browser from a request object takes only a few functional tests."
msgstr ""

#: ../mastering_plone/testing.rst:109
msgid ""
"Try not to mock code. The mocked code you generate mocks Plone in the "
"version you are using today. The next version might work differently."
msgstr ""

#: ../mastering_plone/testing.rst:111
msgid ""
"Do not be afraid to rewrite your code for better testability. It pays off."
msgstr ""

#: ../mastering_plone/testing.rst:113
msgid ""
"If you have highly complex code, think about structuring code and data "
"structures in such a way that they have no side effects. For one customer I "
"wrote a complex ruleset of about 400 lines of code. A lot of small methods "
"that have no side effects. It took a bit to write that code and "
"corresponding tests, but as of today this code did not have a single "
"failure."
msgstr ""

#: ../mastering_plone/testing.rst:115
msgid ""
"Steal from others. Unfortunately, it sometimes takes an intrinsic knowledge "
"to know how to test some functionality. Some component functionality that is"
" automatically handled by the browser must be done by hand. And the "
"component documentation has been referenced in this chapter as a terrible "
"example already. So, copy your code from somewhere else."
msgstr ""

#: ../mastering_plone/testing.rst:117
msgid ""
"Normally, you write a test that tests one thing only. Don't be afraid to "
"break that rule when necessary. If, for example, you built some complex "
"logic that involves multiple steps, don't shy away from writing a longer "
"test showing the normal, good case. Add lots of comments explaining in each "
"step what is happening, why and how. This helps other developers and the "
"future you."
msgstr ""

#: ../mastering_plone/testing.rst:120
msgid "Plone tests"
msgstr ""

#: ../mastering_plone/testing.rst:129
msgid ""
"Plone is a complex system to run tests in. Because of this, we use a "
"functionality from zope.testrunner: layers. We use the well known unittest "
"framework which exhibits the same ideas as nearly every unittest framework "
"out there. In addition for test setups we have the notion of layers. A layer"
" is a test setup that can be shared. This way, you can run tests from 20 "
"different testsuites but not each testsuite sets up their own complete Plone"
" site. Instead, you use a Layer, and the testrunner takes care that every "
"testsuite sharing a layer are run together."
msgstr ""

#: ../mastering_plone/testing.rst:131
msgid ""
"Usually, you create three layers on your own, an integration layer, a "
"functional layer and an acceptance test layer. If you were to test code that"
" uses the Solr search engine, you'd use another layer that starts and stops "
"solr between tests. But most of the time you just use the default layers you"
" copied from somewhere or that mr.bob gave you."
msgstr ""

#: ../mastering_plone/testing.rst:133
msgid ""
"By convention, layers are defined in a module :py:mod:`testing` in your "
"module root, ie :py:mod:`my.code.testing`. Your test classes should be in a "
"folder named :file:`tests`"
msgstr ""

#: ../mastering_plone/testing.rst:136
msgid "Getting started"
msgstr ""

#: ../mastering_plone/testing.rst:138
msgid ""
"Mr.bob already created the testing layers. We will go through them now."
msgstr ""

#: ../mastering_plone/testing.rst:141
msgid ""
"Next, it adds a method for testing that your add-on gets properly installed."
" This might seem stupid, but it isn't if you take into account that in plone"
" land, things change with new releases. Having a GenericSetup profile "
"installing Javascript files contains the assumption that the package wants a"
" javascript file available in Plone. This assumption is explained in the "
"syntax of the current Plone. By testing that the result is met, the "
"Javascript file really is available, we spell out that assumption more "
"clearly. The person that wants to make your package work 5 years from now, "
"knows now that the result in his browser might be related to a missing file."
" Even if he does not understand the semantics from the old Plone on how to "
"register js files, he has a good starting point on what to do to make this "
"package compatible."
msgstr ""

#: ../mastering_plone/testing.rst:145
msgid "This is why it makes sense to write these tedious tests."
msgstr ""

#: ../mastering_plone/testing.rst:147
msgid ""
"If nothing else matches, :file:`test_setup.py` is the right location for "
"anything GenericSetup related. In :ref:`eggs1-label` we created a content "
"type. It is time to test this."
msgstr ""

#: ../mastering_plone/testing.rst:150
msgid "We are going to create a test module named :py:mod:`test_talk`:"
msgstr ""

#: ../mastering_plone/testing.rst:155
msgid ""
"In :ref:`views1-label` we created a new view. We have to test this! This "
"time, though, we are going to test it with a browser, too."
msgstr ""

#: ../mastering_plone/testing.rst:158
msgid ""
"First, we add a simple test for the custom template in our Functional Test "
"layer"
msgstr ""

#: ../mastering_plone/testing.rst:167
msgid ""
"We already wrote a talklistview and it is untested! We like to write unit "
"tests first. But if you look at the Talklistview, you notice that you'd have"
" to mock the portal_catalog, the context, and complex results from the "
"catalog. I wrote earlier that it is ok to rewrite code to make it better "
"testable. But in this example look at what you would test if you mocked "
"everything mentioned above. You would test that your code iterates over a "
"mocked list of mocked items, restructuring mocked attributes. There is not "
"much sense in that. If you did some calculation, like ratings, things might "
"look different, but not in this case."
msgstr ""

#: ../mastering_plone/testing.rst:171
msgid ""
"We can write an integration test. We should test the good case, and edge "
"cases. The simplest test we can write is a test where no talks exist."
msgstr ""

#: ../mastering_plone/testing.rst:174
msgid ""
"Then we can create content. Looking through the code, we do not want the "
"talks list to render results for documents. So add a a document. Also, the "
"code does not want to render results for a document out of the current "
"context. So create a folder and use this as a context. Then add a talk "
"outside of this folder. The method iterates over audiences, make sure that "
"you have at least one talk that has multiple audiences and check for that. "
"Some advanced thing. Should you ever use an improved search system like "
"collective.solr, results might get batched automatically. Check that if you "
"have 101 talks, that you also get back 101 talks. Think about what you want "
"to check in your results. Do you want to make a one to one comparison? How "
"would you handle UUIDs?"
msgstr ""

#: ../mastering_plone/testing.rst:178
msgid ""
"A test creating 101 talks can be slow. It tests an edge case. There is a "
"trick: create a new :py:class:`TestCase` Class, and set an attribute "
":py:attr:`level` with the value of 2. This test will then only be run when "
"you run the tests with the argument :option:`-a 2` or :option:`--all`"
msgstr ""

#: ../mastering_plone/testing.rst:191
msgid "Robot tests"
msgstr ""

#: ../mastering_plone/testing.rst:193
msgid "Finally, we write a robot test:"
msgstr ""

#: ../mastering_plone/testing.rst:198
msgid ""
"When you run your tests, you might notice that the robot tests didn't run. "
"This is a feature activated by the robot layer, because robot tests can be "
"quite slow. If you run your tests with :command:`./bin/test --all` your "
"robot tests will run. Now you will realize that you cannot work any more "
"because a browser window pops up all the time."
msgstr ""

#: ../mastering_plone/testing.rst:201
msgid "There are 3 possible workarounds:"
msgstr ""

#: ../mastering_plone/testing.rst:203
msgid ""
"install the headless browser, Phantomjs. Then run the tests with an "
"environment variable :command:`ROBOT_BROWSER=phantomjs bin/test --all` This "
"did not work for me btw."
msgstr ""

#: ../mastering_plone/testing.rst:205
msgid ""
"Install :program:`xvfb`, a framebuffer. You wont see the browser then. After"
" installing, start xvfb like this: :command:`Xvfb :99.0 -screen 0 "
"1024x768x24`. Then run your tests, declaring to connect to the non-default X"
" Server: :command:`DISPLAY=:99.0 bin/test --all`"
msgstr ""

#: ../mastering_plone/testing.rst:206
msgid ""
"Install Xephyr, it is also a framebuffer, but visible in a window. Start it "
"the same way as you start Xvfb."
msgstr ""

#: ../mastering_plone/testing.rst:208
msgid ""
"The first method, with Phantomjs, will throw failures with our tests, "
"unfortunately."
msgstr ""

#: ../mastering_plone/testing.rst:210
msgid ""
"For debugging, you can run the test like this "
":command:`ROBOT_SELENIUM_RUN_ON_FAILURE=Debug bin/test --all`. This will "
"stop the test at the first failure and you end up in an interactive shell "
"where you can try various Robot Framework commands."
msgstr ""

#: ../mastering_plone/testing.rst:214
msgid "More information"
msgstr ""

#: ../mastering_plone/testing.rst:216
msgid "For more in-depth information and reference see"
msgstr ""

#: ../mastering_plone/testing.rst:218
msgid ""
"`plone.app.testing documentation "
"<http://docs.plone.org/external/plone.app.testing/docs/source/index.html>`_."
msgstr ""

#: ../mastering_plone/testing.rst:220
msgid "`plone.testing package <https://pypi.python.org/pypi/plone.testing>`_"
msgstr ""

#: ../mastering_plone/theming.rst:6
msgid ""
"We don't do any real theming during the training. We'll just explain the "
"options you have."
msgstr ""
"Nosotros no hacemos ningún tipo de temas y plantillas real durante el "
"entrenamiento. Sólo vamos a explicar las opciones que dispone para esto."

#: ../mastering_plone/theming.rst:8
msgid ""
"If you really want to learn about theming see http://docs.plone.org/adapt-"
"and-extend/theming/index.html and the Training :doc:`../theming/index`"
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:4
msgid "Using Third-Party Behaviors"
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:8
msgid ""
"Skip this since collective.behavior.banner is not yet compatible with Plone "
"5."
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:14
msgid "Add teaser with collective.behavior.banner"
msgstr "Agregar banner con el complemento collective.behavior.banner"

#: ../mastering_plone/thirdparty_behaviors.rst:16
msgid ""
"There are a lot of add-ons in Plone for sliders/banners/teasers. We thought "
"there should be a better one and created "
":py:mod:`collective.behavior.banner`."
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:21
msgid ""
"Like many add-ons it has not yet been released on pypi but only exists as "
"code on github."
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:23
msgid ""
"The training buildout has a section ``[sources]`` that tells buildout to "
"download a specific add-on not from pypi but from some code repository "
"(usually github):"
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:30
msgid ""
"Pinning the revision saves us from being surprised by changes in the code we"
" might not want."
msgstr ""
"Definiendo la revisión nos salva de ser sorprendidos por los cambios en el "
"código fuente puede ser que no quiera."

#: ../mastering_plone/thirdparty_behaviors.rst:32
msgid "After adding the source, we need to add the egg to buildout:"
msgstr ""
"Después de añadir el código fuente, tenemos que añadir el paquete Egg al "
"archivo buildout:"

#: ../mastering_plone/thirdparty_behaviors.rst:42
msgid "And rerun :file:`./bin/buildout`"
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:44
msgid "Install the add-on"
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:45
msgid ""
"Create a new dexterity content type ``Banner`` with **only** the behavior "
"``Banner`` enabled."
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:46
msgid "Create a folder called ``banners``"
msgstr "Crear una carpeta llamada ``banners``"

#: ../mastering_plone/thirdparty_behaviors.rst:47
msgid ""
"Add two banners into that folder using images taken from lorempixel.com"
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:48
msgid ""
"Add the Behavior ``Slider`` to the default content type ``Page (Document)``"
msgstr ""

#: ../mastering_plone/thirdparty_behaviors.rst:49
msgid "Edit the front-page and link to the new banners."
msgstr ""

#: ../mastering_plone/timing.rst:2
msgid "Timetable"
msgstr ""

#: ../mastering_plone/timing.rst:4
msgid ""
"This is just meant as info for trainers about how long it might take to "
"teach certain chapters. Please update when you have different experiences."
msgstr ""

#: ../mastering_plone/timing.rst:8
msgid "Version 1.2"
msgstr "Version 1.2"

#: ../mastering_plone/timing.rst:11 ../mastering_plone/timing.rst:19
#: ../mastering_plone/timing.rst:47 ../mastering_plone/timing.rst:55
#: ../mastering_plone/timing.rst:62 ../mastering_plone/timing.rst:85
#: ../mastering_plone/timing.rst:87 ../mastering_plone/timing.rst:89
msgid "**++**"
msgstr ""

#: ../mastering_plone/timing.rst:11 ../mastering_plone/timing.rst:12
#: ../mastering_plone/timing.rst:14 ../mastering_plone/timing.rst:38
#: ../mastering_plone/timing.rst:55
msgid "10 min"
msgstr "10 minutos"

#: ../mastering_plone/timing.rst:11 ../mastering_plone/timing.rst:55
msgid "#1 Introduction"
msgstr ""

#: ../mastering_plone/timing.rst:12 ../mastering_plone/timing.rst:13
#: ../mastering_plone/timing.rst:14 ../mastering_plone/timing.rst:16
#: ../mastering_plone/timing.rst:17 ../mastering_plone/timing.rst:20
#: ../mastering_plone/timing.rst:23 ../mastering_plone/timing.rst:24
#: ../mastering_plone/timing.rst:25 ../mastering_plone/timing.rst:26
#: ../mastering_plone/timing.rst:28 ../mastering_plone/timing.rst:31
#: ../mastering_plone/timing.rst:32 ../mastering_plone/timing.rst:33
#: ../mastering_plone/timing.rst:34 ../mastering_plone/timing.rst:35
#: ../mastering_plone/timing.rst:36 ../mastering_plone/timing.rst:38
#: ../mastering_plone/timing.rst:39 ../mastering_plone/timing.rst:45
#: ../mastering_plone/timing.rst:46 ../mastering_plone/timing.rst:56
#: ../mastering_plone/timing.rst:57 ../mastering_plone/timing.rst:59
#: ../mastering_plone/timing.rst:60 ../mastering_plone/timing.rst:65
#: ../mastering_plone/timing.rst:66 ../mastering_plone/timing.rst:68
#: ../mastering_plone/timing.rst:71 ../mastering_plone/timing.rst:75
#: ../mastering_plone/timing.rst:76 ../mastering_plone/timing.rst:77
#: ../mastering_plone/timing.rst:78 ../mastering_plone/timing.rst:80
#: ../mastering_plone/timing.rst:81 ../mastering_plone/timing.rst:88
msgid "**pb**"
msgstr ""

#: ../mastering_plone/timing.rst:12 ../mastering_plone/timing.rst:56
msgid "#2 Installation & Setup"
msgstr ""

#: ../mastering_plone/timing.rst:13 ../mastering_plone/timing.rst:24
#: ../mastering_plone/timing.rst:32 ../mastering_plone/timing.rst:45
#: ../mastering_plone/timing.rst:56 ../mastering_plone/timing.rst:58
#: ../mastering_plone/timing.rst:74 ../mastering_plone/timing.rst:76
#: ../mastering_plone/timing.rst:81
msgid "15 min"
msgstr "15 minutos"

#: ../mastering_plone/timing.rst:13 ../mastering_plone/timing.rst:57
msgid "#3 Installing Plone for the Training"
msgstr ""

#: ../mastering_plone/timing.rst:14
msgid "#4 The Case-Study"
msgstr ""

#: ../mastering_plone/timing.rst:15 ../mastering_plone/timing.rst:18
#: ../mastering_plone/timing.rst:21 ../mastering_plone/timing.rst:22
#: ../mastering_plone/timing.rst:27 ../mastering_plone/timing.rst:29
#: ../mastering_plone/timing.rst:30 ../mastering_plone/timing.rst:37
#: ../mastering_plone/timing.rst:40 ../mastering_plone/timing.rst:41
#: ../mastering_plone/timing.rst:42 ../mastering_plone/timing.rst:43
#: ../mastering_plone/timing.rst:44 ../mastering_plone/timing.rst:58
#: ../mastering_plone/timing.rst:61 ../mastering_plone/timing.rst:63
#: ../mastering_plone/timing.rst:64 ../mastering_plone/timing.rst:67
#: ../mastering_plone/timing.rst:69 ../mastering_plone/timing.rst:70
#: ../mastering_plone/timing.rst:72 ../mastering_plone/timing.rst:73
#: ../mastering_plone/timing.rst:74 ../mastering_plone/timing.rst:79
#: ../mastering_plone/timing.rst:82 ../mastering_plone/timing.rst:83
#: ../mastering_plone/timing.rst:84 ../mastering_plone/timing.rst:86
msgid "**pg**"
msgstr ""

#: ../mastering_plone/timing.rst:15 ../mastering_plone/timing.rst:40
#: ../mastering_plone/timing.rst:41 ../mastering_plone/timing.rst:42
#: ../mastering_plone/timing.rst:43 ../mastering_plone/timing.rst:44
#: ../mastering_plone/timing.rst:47
msgid "?? min"
msgstr "?? minutos"

#: ../mastering_plone/timing.rst:15
msgid "#5 The Anatomy of Plone"
msgstr ""

#: ../mastering_plone/timing.rst:16 ../mastering_plone/timing.rst:25
#: ../mastering_plone/timing.rst:28 ../mastering_plone/timing.rst:33
#: ../mastering_plone/timing.rst:39 ../mastering_plone/timing.rst:59
msgid "90 min"
msgstr "90 minutos"

#: ../mastering_plone/timing.rst:16
msgid "#6 The Features of Plone"
msgstr ""

#: ../mastering_plone/timing.rst:17 ../mastering_plone/timing.rst:19
#: ../mastering_plone/timing.rst:26 ../mastering_plone/timing.rst:27
#: ../mastering_plone/timing.rst:62 ../mastering_plone/timing.rst:77
#: ../mastering_plone/timing.rst:78 ../mastering_plone/timing.rst:80
msgid "60 min"
msgstr "60 minutos"

#: ../mastering_plone/timing.rst:17
msgid "#7 Configuring and Customizing Plone through the web"
msgstr ""

#: ../mastering_plone/timing.rst:18 ../mastering_plone/timing.rst:20
#: ../mastering_plone/timing.rst:21 ../mastering_plone/timing.rst:22
#: ../mastering_plone/timing.rst:29 ../mastering_plone/timing.rst:30
#: ../mastering_plone/timing.rst:31 ../mastering_plone/timing.rst:34
#: ../mastering_plone/timing.rst:37 ../mastering_plone/timing.rst:46
#: ../mastering_plone/timing.rst:61 ../mastering_plone/timing.rst:71
#: ../mastering_plone/timing.rst:72 ../mastering_plone/timing.rst:82
#: ../mastering_plone/timing.rst:83 ../mastering_plone/timing.rst:84
#: ../mastering_plone/timing.rst:86
msgid "20 min"
msgstr "20 minutos"

#: ../mastering_plone/timing.rst:18
msgid "#8 Extending Plone"
msgstr ""

#: ../mastering_plone/timing.rst:19
msgid "#9 Extend Plone with Add-ons"
msgstr ""

#: ../mastering_plone/timing.rst:20
msgid "#10 Theming"
msgstr ""

#: ../mastering_plone/timing.rst:21
msgid "#11 Buildout I"
msgstr ""

#: ../mastering_plone/timing.rst:22 ../mastering_plone/timing.rst:74
msgid "#12 Creating your own eggs to customize Plone"
msgstr ""

#: ../mastering_plone/timing.rst:23 ../mastering_plone/timing.rst:57
#: ../mastering_plone/timing.rst:75 ../mastering_plone/timing.rst:79
#: ../mastering_plone/timing.rst:85 ../mastering_plone/timing.rst:87
#: ../mastering_plone/timing.rst:88
msgid "30 min"
msgstr "30 minutos"

#: ../mastering_plone/timing.rst:23
msgid "#13 Dexterity I: Through the web"
msgstr ""

#: ../mastering_plone/timing.rst:24 ../mastering_plone/timing.rst:76
msgid "#14 Views I"
msgstr ""

#: ../mastering_plone/timing.rst:25 ../mastering_plone/timing.rst:77
msgid "#15 Zope Page Templates"
msgstr ""

#: ../mastering_plone/timing.rst:26 ../mastering_plone/timing.rst:78
msgid "#16 Customizing existing templates"
msgstr ""

#: ../mastering_plone/timing.rst:27 ../mastering_plone/timing.rst:79
msgid "#17 Views II: A default view for “talk”"
msgstr ""

#: ../mastering_plone/timing.rst:28 ../mastering_plone/timing.rst:80
msgid "#18 Views III: A Talk list"
msgstr ""

#: ../mastering_plone/timing.rst:29
msgid "#19 Behaviors"
msgstr ""

#: ../mastering_plone/timing.rst:30
msgid "#20 Writing Viewlets"
msgstr ""

#: ../mastering_plone/timing.rst:31
msgid "#21 Programming Plone"
msgstr ""

#: ../mastering_plone/timing.rst:32
msgid "#22 IDE’s and Editors"
msgstr ""

#: ../mastering_plone/timing.rst:33
msgid "#23 Dexterity Types II: Growing up"
msgstr ""

#: ../mastering_plone/timing.rst:34
msgid "#24 Custom search"
msgstr ""

#: ../mastering_plone/timing.rst:35 ../mastering_plone/timing.rst:36
msgid "45 min"
msgstr "45 minutos"

#: ../mastering_plone/timing.rst:35
msgid "#25 Turn talks into events"
msgstr ""

#: ../mastering_plone/timing.rst:36
msgid "#26 User generated content"
msgstr ""

#: ../mastering_plone/timing.rst:37
msgid "#27 Resources"
msgstr ""

#: ../mastering_plone/timing.rst:38
msgid "#28 Using third-party behaviors"
msgstr ""

#: ../mastering_plone/timing.rst:39
msgid "#29 Dexterity Types III: Python"
msgstr ""

#: ../mastering_plone/timing.rst:40
msgid "#30 Creating reusable packages with eggs"
msgstr ""

#: ../mastering_plone/timing.rst:41
msgid "#31 More complex behaviors"
msgstr ""

#: ../mastering_plone/timing.rst:42
msgid "#32 A viewlet for the voteable behavior"
msgstr ""

#: ../mastering_plone/timing.rst:43
msgid "#33 Making our package reusable"
msgstr ""

#: ../mastering_plone/timing.rst:44
msgid "#34 Using starzel.votable_behavior in ploneconf.site"
msgstr ""

#: ../mastering_plone/timing.rst:45
msgid "#35 Buildout II: Deploying your site"
msgstr ""

#: ../mastering_plone/timing.rst:46
msgid "#36 The Future of Plone"
msgstr ""

#: ../mastering_plone/timing.rst:47
msgid "#37 Optional"
msgstr ""

#: ../mastering_plone/timing.rst:52
msgid "Version 1.1"
msgstr "Version 1.1"

#: ../mastering_plone/timing.rst:58
msgid "#4 The Anatomy of Plone"
msgstr ""

#: ../mastering_plone/timing.rst:59
msgid "#5 The Features of Plone"
msgstr ""

#: ../mastering_plone/timing.rst:60
msgid "50 min"
msgstr "50 minutos"

#: ../mastering_plone/timing.rst:60
msgid "#6 Configuring and Customizing Plone through the web"
msgstr ""

#: ../mastering_plone/timing.rst:61
msgid "#7 Extending Plone"
msgstr ""

#: ../mastering_plone/timing.rst:62
msgid "#8 Extend Plone with Add-ons"
msgstr ""

#: ../mastering_plone/timing.rst:63
msgid "#8 - How to find add-ons"
msgstr ""

#: ../mastering_plone/timing.rst:64
msgid "#8 - Installing Add-ons"
msgstr ""

#: ../mastering_plone/timing.rst:65
msgid "#8 - PloneFormGen"
msgstr ""

#: ../mastering_plone/timing.rst:66
msgid "#8 - Internationalization"
msgstr ""

#: ../mastering_plone/timing.rst:67
msgid "#8 - collective.plonetruegallery"
msgstr ""

#: ../mastering_plone/timing.rst:68
msgid "#8 - plone.app.themeeditor"
msgstr ""

#: ../mastering_plone/timing.rst:69
msgid "#8 - export customizations"
msgstr ""

#: ../mastering_plone/timing.rst:70
msgid "#8 - inspect the package"
msgstr ""

#: ../mastering_plone/timing.rst:71
msgid "#9  Theming"
msgstr ""

#: ../mastering_plone/timing.rst:72
msgid "#10 Buildout I"
msgstr ""

#: ../mastering_plone/timing.rst:73
msgid "05 min"
msgstr "05 minutos"

#: ../mastering_plone/timing.rst:73
msgid "#11 IDE’s and Editors"
msgstr ""

#: ../mastering_plone/timing.rst:75
msgid "#13 Creating content-types with Dexterity"
msgstr ""

#: ../mastering_plone/timing.rst:81
msgid "#19 Custom search"
msgstr ""

#: ../mastering_plone/timing.rst:82
msgid "#20 Extending Dexterity-Types with Behaviors"
msgstr ""

#: ../mastering_plone/timing.rst:83
msgid "#21 Resources"
msgstr ""

#: ../mastering_plone/timing.rst:84
msgid "#22 Social behavior"
msgstr ""

#: ../mastering_plone/timing.rst:85
msgid "#23 Writing Viewlets"
msgstr ""

#: ../mastering_plone/timing.rst:86
msgid "#24 Deploying your code"
msgstr ""

#: ../mastering_plone/timing.rst:87
msgid "#25 Buildout II: Deploying your site"
msgstr ""

#: ../mastering_plone/timing.rst:88
msgid "#26 The Future of Plone"
msgstr ""

#: ../mastering_plone/timing.rst:89
msgid "#27 Optional"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:4
msgid "User Generated Content"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:15
msgid ""
"How do prospective speakers submit talks? We let them register on the site "
"and grant right to create talks. For this we go back to changing the site "
"through-the-web."
msgstr ""
"¿Cómo hacer que los ponentes potenciales envíen sus charlas? Dejamos que se "
"registren en el sitio y otorgan derecho a crear tipos de contenidos Talk. "
"Para ello volvemos a cambiar el sitio a través de la Web."

#: ../mastering_plone/user_generated_content.rst:19
msgid "allow self-registration"
msgstr "Permitir auto registro de usuario."

#: ../mastering_plone/user_generated_content.rst:20
msgid "constrain types on the talk folder"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:21
msgid "grant local roles"
msgstr "Otorgar roles locales."

#: ../mastering_plone/user_generated_content.rst:22
msgid "create a custom workflow for talks"
msgstr "Crear un flujo de trabajo para las charlas."

#: ../mastering_plone/user_generated_content.rst:28
msgid "Self-registration"
msgstr "Auto-registro"

#: ../mastering_plone/user_generated_content.rst:30
msgid ""
"Go to the Security control panel at http://localhost:8080/Plone/@@security-"
"controlpanel and Enable self-registration"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:31
msgid "Leave \"Enable User Folders\" off unless you want a community site."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:37
msgid "Constrain types"
msgstr "Restringir tipos de contenidos"

#: ../mastering_plone/user_generated_content.rst:39
msgid ""
"On the talk folder select `Restrictions… <http://localhost:8080/Plone/the-"
"event/talks/folder_constraintypes_form>`_ from the *Add new* menu. Only "
"allow to add talks."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:45
#: ../mastering_plone/user_generated_content.rst:118
msgid "Grant local roles"
msgstr "Otorgar roles locales"

#: ../mastering_plone/user_generated_content.rst:47
msgid ""
"Go to *Sharing* and grant the role *Can add* to the group logged-in users. "
"Now every user can add content in this folder (and only this folder)."
msgstr ""
"Valla a la pestaña *Compartir* y otorgar el rol *Puede agregar* al grupo "
"Usuarios conectados. Ahora cualquier usuario puede agregar contenido en esta"
" carpeta (y solamente en esta carpeta)."

#: ../mastering_plone/user_generated_content.rst:49
msgid ""
"Now all logged-in users can create and submit talks in this folder with the "
"permission of the default workflow."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:55
msgid "A custom workflow for talks"
msgstr "Un flujo de trabajo personalizado para las charlas"

#: ../mastering_plone/user_generated_content.rst:57
msgid ""
"We still need to fix a problem: Authenticated users can see all talks, even "
"the ones of other users in the private state. Since we don't want this we "
"will create a modified workflow for talks. The new workflow will only let "
"them see and edit talks they created themselves and not the ones of other "
"users."
msgstr ""
"Todavía tenemos que solucionar un problema: los usuarios autenticados pueden"
" ver todas las conversaciones, incluso los de otros usuarios en el estado "
"privado. Ya que no queremos que esto vamos a crear un flujo de trabajo "
"modificado para las charlas. El nuevo flujo de trabajo sólo les permitirá "
"ver y editar las conversaciones que han creado ellos mismos y no los de "
"otros usuarios."

#: ../mastering_plone/user_generated_content.rst:59
msgid "Go to the :menuselection:`ZMI --> portal_workflow`"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:60
msgid ""
"See how talks have the same workflow as most content, namely "
":guilabel:`(Default)`"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:61
msgid ""
"Go to the tab :guilabel:`Contents`, check the box next to "
":guilabel:`simple_publication_workflow`, click :guilabel:`copy` and "
":guilabel:`paste`."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:62
msgid ""
"Rename the new workflow from *copy_of_simple_publication_workflow* to "
"*talks_workflow*."
msgstr ""
"Renombrar el nuevo flujo de trabajo desde "
"*copy_of_simple_publication_workflow* a *talks_workflow*."

#: ../mastering_plone/user_generated_content.rst:63
msgid ""
"Edit the workflow by clicking on it: Change the Title to *Talks Workflow*."
msgstr ""
"Edite el flujo de trabajo haciendo clic en: Change the Title to *Flujo de "
"trabajo de Charla*."

#: ../mastering_plone/user_generated_content.rst:64
msgid ""
"Click on the tab :guilabel:`States` and click on :guilabel:`private` to edit"
" this state. In the next view select the tab :guilabel:`Permissions`."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:65
msgid ""
"Find the table column for the role :guilabel:`Contributor` and remove the "
"permissions for :guilabel:`Access contents information` and "
":guilabel:`View`. Note that the :guilabel:`Owner` (i.e. the Creator) still "
"has some permissions."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:66
msgid "Do the same for the state :guilabel:`pending`"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:67
msgid ""
"Go back to :file:`portal_workflow` and set the new workflow "
":file:`talks_workflow` for talks. Click :file:`Change` and then "
":file:`Update security settings`."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:71
msgid ""
"The add-on `plone.app.workflowmanager "
"<https://pypi.python.org/pypi/plone.app.workflowmanager>`_ provides a much "
"nicer user-interface for this. The problem is you need a big screen for it "
"and it can be pretty confusing as well."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:73
msgid "Done."
msgstr "Hecho."

#: ../mastering_plone/user_generated_content.rst:79
msgid "Move the changes to the file system"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:81
msgid ""
"We don't want to do these steps for every new conference by hand so we move "
"the changes into our package."
msgstr ""
"No queremos hacer estos pasos para cada nueva conferencia manualmente para "
"que nos movemos los cambios en nuestro paquete."

#: ../mastering_plone/user_generated_content.rst:84
msgid "Import/Export the Workflow"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:86
msgid ""
"export the GenericSetup step *Workflow Tool* in "
"http://localhost:8080/Plone/portal_setup/manage_exportSteps."
msgstr ""
"Exporte el paso GenericSetup *Workflow Tool* en "
"http://localhost:8080/Plone/portal_setup/manage_exportSteps."

#: ../mastering_plone/user_generated_content.rst:87
msgid ""
"drop the file :file:`workflows.xml` into :file:`profiles/default` an clean "
"out everything that is not related to talks."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:101
msgid ""
"drop :file:`workflows/talks_workflow/definition.xml` in "
":file:`profiles/default/workflows/talks_workflow/definition.xml`. The other "
"files are just definitions of the default-workflows and we only want things "
"in our package that changes Plone."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:105
msgid "Enable self-registration"
msgstr "Habilitar autoregistro"

#: ../mastering_plone/user_generated_content.rst:107
msgid ""
"To enable self-registration you need to change the global setting that "
"controls this option. Most global setting are stored in the registry. You "
"can modify it by adding following to :file:`profiles/default/registry.xml`:"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:120
msgid ""
"Since the granting of local roles applies only to a certain folder in the "
"site we would not always write code for it but do it by hand. But for "
"testability and repeatability (there is a conference every year!) we should "
"create the initial content structure automatically."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:122
msgid ""
"So let's make sure some initial content is created and configured on "
"installing the package."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:124
msgid ""
"To run arbitrary code during the installation of a package we use a "
"`post_handler "
"<http://docs.plone.org/develop/addons/components/genericsetup.html#custom-"
"installer-code-setuphandlers-py>`_"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:126
msgid ""
"Our package already has such an method registered in :file:`configure.zcml`."
" It will be automatically run when (re-)installing the add-on."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:141
msgid ""
"This makes sure the method :py:meth:`post_install` in "
":file:`setuphandlers.py` is executed after the installation. The method "
"already exists doing nothing. You need to extend it to do what we want."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:218
msgid ""
"Once we reinstall our package a folder :file:`talks` is created with the "
"appropriate local roles and constraints."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:220
msgid ""
"We wrote similar code to create the folder *The Event* in :ref:`dexterity2"
"-upgrades-label`. We need it to make sure a sane structure gets created when"
" we create a new site by hand or in tests."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:223
msgid ""
"You would usually create a list of dictionaries containing the type, parent "
"and title plus optionally layout, workflow state etc. to create an initial "
"structure. In some projects it could also make sense to have a separate "
"profile besides ``default`` which might be called ``demo`` or ``content`` "
"that creates an initial structure and maybe another ``testing`` that creates"
" dummy content (talks, speakers etc) for tests."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:229
msgid ""
"Create a profile ``content`` that runs its own post_handler in "
":file:`setuphandlers.py`."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:234
msgid "Register the profile and the upgrade step in :file:`configure.zcml`"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:247
msgid ""
"Also add a :file:`profiles/content/metadata.xml` so the default profile gets"
" automatically installed when installing the content profile."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:259
msgid ""
"Add the structure you wish to create as a list of dictionaries in "
":file:`setuphandlers.py`:"
msgstr ""

#: ../mastering_plone/user_generated_content.rst:336
msgid ""
"Add the method :py:meth:`content` to :file:`setuphandlers.py`. We pointed to"
" that when registering the import step. And add some fancy logic to create "
"the content from ``STRUCTURE``."
msgstr ""

#: ../mastering_plone/user_generated_content.rst:395
msgid ""
"A huge benefit of this implementation is that you can add any object-"
"attribute as a new item to :py:data:`item_dict`. "
":py:meth:`plone.api.content.create` will then set these on the new objects. "
"This way you can also populate fields like :py:attr:`text` (using "
":py:class:`plone.app.textfield.RichTextValue`) or :py:attr:`image` (using "
":py:class:`plone.namedfile.file.NamedBlobImage`)."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:4
msgid "Writing Viewlets"
msgstr "Escribiendo Viewlets"

#: ../mastering_plone/viewlets_1.rst:17
msgid "Display data from a behavior in a viewlet"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:26
msgid "A viewlet for the social behavior"
msgstr "Un viewlet para el comportamiento social"

#: ../mastering_plone/viewlets_1.rst:30
msgid ""
"A viewlet is not a view but a snippet of HTML and logic that can be put in "
"various places in the site. These places are called ``viewletmanager``."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:32
msgid ""
"Inspect existing viewlets and their managers by going to "
"http://localhost:8080/Plone/@@manage-viewlets."
msgstr ""
"Inspeccione y administre los viewlets existentes yendo a la dirección URL "
"http://localhost:8080/Plone/@@manage-viewlets."

#: ../mastering_plone/viewlets_1.rst:33
msgid ""
"We already customized a viewlet (:file:`colophon.pt`). Now we add a new one."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:34
msgid "Viewlets don't save data (portlets do)"
msgstr "Los viewlets no guardan los datos (los portlets si lo hacen)"

#: ../mastering_plone/viewlets_1.rst:35
msgid "Viewlets have no user interface (portlets do)"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:40
msgid "Social viewlet"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:44
msgid ""
"Let's add a link to the site that uses the information that we collected "
"using the social behavior."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:46 ../mastering_plone/viewlets_2.rst:34
msgid "We register the viewlet in :file:`browser/configure.zcml`."
msgstr "Registramos el viewlet en el archivo :file:`browser/configure.zcml`."

#: ../mastering_plone/viewlets_1.rst:61
msgid ""
"``for``, ``manager``, ``layer`` and ``permission`` are constraints that "
"limit the contexts in which the viewlet is loaded and rendered, by filtering"
" out all the contexts that do not match those constraints."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:65
msgid ""
"This registers a viewlet called ``social``. It is visible on all content "
"that implements the interface :py:class:`ISocial` from our behavior. It is "
"also good practice to bind it to a specific ``layer``, so it only shows up "
"if our add-on is actually installed.  We will return to this in a later "
"chapter."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:69
msgid ""
"The viewlet class :py:class:`SocialViewlet` is expected in a file "
":file:`browser/viewlets.py`."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:84
msgid ""
"This class does nothing except rendering the associated template (That we "
"have yet to write)"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:86
msgid "Let's add the missing template :file:`templates/social_viewlet.pt`."
msgstr ""
"Vamos a agregar el archivo de la plantilla restante "
":file:`templates/social_viewlet.pt`."

#: ../mastering_plone/viewlets_1.rst:104
msgid ""
"As you can see this is not a valid HTML document. That is not needed, "
"because we don't want a complete view here, just a html snippet."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:106
msgid ""
"There is a :samp:`tal:define` statement, querying for "
":samp:`view/lanyrd_link`. Same as for views, viewlets have access to their "
"class in page templates, as well."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:108
msgid "We have to extend the Social Viewlet now to add the missing attribute:"
msgstr ""
"Tenemos que ampliar el Viewlet Social ahora para añadir el atributo que le "
"falta:"

#: ../mastering_plone/viewlets_1.rst:0
msgid "Why not to access context directly"
msgstr "¿Por qué no acceder directamente contexto?"

#: ../mastering_plone/viewlets_1.rst:115
msgid ""
"In this example, :samp:`ISocial(self.context)` does return the context "
"directly. It is still good to use this idiom for two reasons:"
msgstr ""
"En este ejemplo, :samp:`ISocial(self.context)` devuelve el contexto "
"directamente. Todavía es bueno utilizar este idioma por dos razones:"

#: ../mastering_plone/viewlets_1.rst:117
msgid ""
"It makes it clear that we only want to use the ISocial aspect of the object"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:118
msgid ""
"If we decide to use a factory, for example to store our attributes in an "
"annotation, we would `not` get back our context, but the adapter."
msgstr ""
"Si decidimos utilizar una fábrica, por ejemplo, para almacenar nuestros "
"atributos en una anotación, nosotros deberíamos `no` conseguir nuestro "
"contexto, pero si el adaptador."

#: ../mastering_plone/viewlets_1.rst:120
msgid ""
"Therefore in this example you could simply write :samp:`return "
"self.context.lanyrd`."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:135
msgid "So far, we"
msgstr "Hasta ahora, hemos hecho:"

#: ../mastering_plone/viewlets_1.rst:137
msgid "register the viewlet to content that has the ISocial Interface."
msgstr "Registrar el viewlet al contenido que tiene la interfaz iSocial."

#: ../mastering_plone/viewlets_1.rst:138
msgid ""
"adapt the object to its behavior to be able to access the fields of the "
"behavior"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:139
msgid "return the link"
msgstr "Devolver el enlace."

#: ../mastering_plone/viewlets_1.rst:147
msgid ""
"Register a viewlet 'number_of_talks' in the footer that is only visible to "
"admins (the permission you are looking for is :py:class:`cmf.ManagePortal`)."
" Use only a template (no class) to display the number of talks already "
"submitted. Hint: Use Acquisition to get the catalog (You know, you should "
"not do this but there is plenty of code out there that does it...)"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:166
msgid ""
"For the ``for`` and ``layer``-parameters ``*`` is shorthand for "
":py:class:`zope.interface.Interface` and the same effect as omitting them: "
"The viewlet will be shown for all types of pages and for all Plone sites "
"within your Zope instance."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:168
msgid "Add the template :file:`browser/templates/number_of_talks.pt`:"
msgstr ""
"Agregar el archivo de la plantilla "
":file:`browser/templates/number_of_talks.pt`:"

#: ../mastering_plone/viewlets_1.rst:178
msgid ""
":samp:`python:context.portal_catalog` will return the catalog through "
"Acquisition. Be careful if you want to use path expressions: "
":samp:`content/portal_catalog` calls the catalog (and returns all brains). "
"You need to prevent this by using :samp:`nocall:content/portal_catalog`."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:180
msgid ""
"Relying on Acquisition is a bad idea. It would be much better to use the "
"helper view ``plone_tools`` from :file:`plone/app/layout/globals/tools.py` "
"to get the catalog."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:190
msgid ""
":samp:`context/@@plone_tools/catalog` traverses to the view ``plone_tools`` "
"and calls its method :py:meth:`catalog`. In python it would look like this:"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:200
msgid ""
"It is not a good practice to query the catalog within a template since even "
"simple logic like this should live in Python. But it is very powerful if you"
" are debugging or need a quick and dirty solution."
msgstr ""
"No es una buena práctica consultar el catálogo dentro de una plantilla, ya "
"que incluso la simple lógica como este debería vivir en Python. Pero es muy "
"poderoso si está depurando o necesita una solución rápida y sucia."

#: ../mastering_plone/viewlets_1.rst:203
msgid "In Plone 5 you could even write it like this:"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:223
msgid ""
"Register a viewlet 'days_to_conference' in the header. Use a class and a "
"template to display the number of days until the conference. You get bonus "
"points if you display it in a nice format (think \"In 2 days\" and \"Last "
"Month\") by using either javascript or a python library."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:228
msgid "In :file:`configure.zcml`:"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:242
msgid "In :file:`viewlets.py`:"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:261
msgid ""
"Setting the date in python is not very user-friendly. In the chapter :ref"
":`registry-label` you learn how store global configuration and easily create"
" controlpanels."
msgstr ""

#: ../mastering_plone/viewlets_1.rst:263
msgid "And in :file:`templates/days_to_conference.pt`:"
msgstr ""

#: ../mastering_plone/viewlets_1.rst:271
msgid "Or using the moment pattern in Plone 5:"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:4
msgid "A Viewlet for the Votable Behavior"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:10
msgid "Voting Viewlet"
msgstr "Viewlet Voting"

#: ../mastering_plone/viewlets_2.rst:14
msgid "write the viewlet template"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:15
msgid "add jquery include statements"
msgstr "Agregar jQuery incluyen declaraciones."

#: ../mastering_plone/viewlets_2.rst:16
msgid "saving the vote on the object using annotations"
msgstr "Guardando el voto en el objeto usando anotaciones."

#: ../mastering_plone/viewlets_2.rst:21
msgid "Javascript inclusion"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:27
msgid ""
"Earlier we added the logic that saves votes on the objects. We now create "
"the user interface for it."
msgstr ""
"Anteriormente hemos agregado la logica que salva los votos en los objetos. "
"Nosotros ahora podemos crear la interfaz de usuario para esto."

#: ../mastering_plone/viewlets_2.rst:29
msgid ""
"Since we want to use the UI on more than one page (not only the talk view "
"but also the talk listing) we need to put it somewhere."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:31
msgid "To handle the user input we don't use a form but links and ajax."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:32
msgid "The voting itself is a fact handled by another view"
msgstr "La votación en si, es en su efecto manejada por otra vista"

#: ../mastering_plone/viewlets_2.rst:59
msgid "We extend the file :file:`browser/viewlets.py`"
msgstr "Nosotros extendemos en el archivo :file:`browser/viewlets.py`"

#: ../mastering_plone/viewlets_2.rst:72
msgid ""
"This will add a viewlet to a slot below the title and expect a template "
":file:`voting_viewlet.pt` in a folder :file:`browser/templates`."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:74
msgid ""
"Let's create the file :file:`browser/templates/voting_viewlet.pt` without "
"any logic"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:89
msgid "restart Plone"
msgstr "reiniciar Plone"

#: ../mastering_plone/viewlets_2.rst:90
msgid "show the viewlet"
msgstr "mostrar el viewlet"

#: ../mastering_plone/viewlets_2.rst:95
msgid "Writing the Viewlet code"
msgstr "Escribiendo el código fuente del Viewlet"

#: ../mastering_plone/viewlets_2.rst:101
msgid ""
"Update the viewlet to contain the necessary logic in "
":file:`browser/viewlets`"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:143
msgid "And extend the template in :file:`browser/templates/voting_viewlet.pt`"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:185
msgid ""
"We have many small parts, most of which will be hidden by javascript unless "
"needed. By providing all this status information in HTML, we can use "
"standard translation tools to translate. Translating strings in javascript "
"requires extra work."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:188
msgid ""
"We need some css that we store in :file:`static/starzel_votablebehavior.css`"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:237
msgid "The javascript code"
msgstr "El código javascript"

#: ../mastering_plone/viewlets_2.rst:239
msgid ""
"To make it work in the browser, some javascript "
":file:`static/starzel_votablebehavior.js`"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:286
msgid ""
"This js code adheres to crockfort jshint rules, so all variables are "
"declared at the beginning of the method. We show and hide quite a few small "
"html elements here."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:292
msgid "Writing 2 simple view helpers"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:296
msgid ""
"Our javascript code communicates with our site by calling views that don't "
"exist yet. These Views do not need to render html, but should return a valid"
" status. Exceptions set the right status and aren't being shown by "
"javascript, so this will suit us fine."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:300
msgid ""
"As you might remember, the :samp:`vote` method might return an exception, if"
" somebody votes twice. We do not catch this exception. The user will never "
"see this exception."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:305
msgid "Catching exceptions contain a gotcha for new developers."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:315
msgid ""
"Zope claims some exceptions for itself. It needs them to work correctly."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:317
msgid ""
"For example, if two requests try to modify something at the same time, one "
"request will throw an exception, a :samp:`ConflictError`."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:319
msgid ""
"Zope catches the exception, waits for a random amount of time, and tries to "
"process the request again, up to three times. If you catch that exception, "
"you are in trouble, so don't do that. Ever."
msgstr ""

#: ../mastering_plone/viewlets_2.rst:322
msgid "As so often, we must extend :file:`browser/configure.zcml`:"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:347
msgid "Then we add our simple views into the file :file:`browser/vote.py`"
msgstr ""

#: ../mastering_plone/viewlets_2.rst:372
msgid "A lot of moving parts have been created. Here is a small overview:"
msgstr ""

#: ../mastering_plone/views_1.rst:4
msgid "Views I"
msgstr "Views - Parte I"

#: ../mastering_plone/views_1.rst:17
msgid "Register a view"
msgstr ""

#: ../mastering_plone/views_1.rst:18
msgid "Create and use a template for the view"
msgstr ""

#: ../mastering_plone/views_1.rst:23
msgid "zcml"
msgstr ""

#: ../mastering_plone/views_1.rst:28
msgid "A simple browser view"
msgstr "Una simple browser view"

#: ../mastering_plone/views_1.rst:30
msgid ""
"Before writing the talk view itself we step back and talk *a little* about "
"views and templates."
msgstr ""

#: ../mastering_plone/views_1.rst:32
msgid ""
"A view in Plone is usually a ``BrowserView``. It can hold a lot of cool "
"python code but we will first focus on the template."
msgstr ""

#: ../mastering_plone/views_1.rst:34
msgid ""
"Edit the file ``browser/configure.zcml`` and register a new view called "
"*training*:"
msgstr ""

#: ../mastering_plone/views_1.rst:68
msgid "Add a file ``browser/templates/training.pt``"
msgstr ""

#: ../mastering_plone/views_1.rst:74
msgid "Restart Plone and open http://localhost:8080/Plone/@@training."
msgstr ""

#: ../mastering_plone/views_1.rst:75
msgid "You should now see \"Hello World\"."
msgstr ""

#: ../mastering_plone/views_1.rst:77
msgid "We now have everything in place to learn about page templates."
msgstr ""

#: ../mastering_plone/views_1.rst:81
msgid ""
"The view ``training`` has no python class registered for it but only a "
"template. It acts as if it had an empty python class inheriting from "
"``Products.Five.browser.BrowserView`` but the way that happens is actually "
"quite a bit of magic..."
msgstr ""

#: ../mastering_plone/views_2.rst:4
msgid "Views II: A Default View for \"Talk\""
msgstr ""

#: ../mastering_plone/views_2.rst:16
msgid "Register a view with a python class"
msgstr ""

#: ../mastering_plone/views_2.rst:17
msgid "Write a template used in the default view for talks"
msgstr ""

#: ../mastering_plone/views_2.rst:22
msgid "View classes"
msgstr ""

#: ../mastering_plone/views_2.rst:23
msgid "BrowserView and DefaultView"
msgstr ""

#: ../mastering_plone/views_2.rst:24
msgid "displaying data from fields"
msgstr ""

#: ../mastering_plone/views_2.rst:30
msgid "View Classes"
msgstr ""

#: ../mastering_plone/views_2.rst:32
msgid ""
"Earlier we wrote a demo view which we also used to experiment with page "
"templates. Now we are going to enhance that view so that it will have some "
"python code, in addition to a template. Let us have a look at the zcml and "
"the code."
msgstr ""

#: ../mastering_plone/views_2.rst:36 ../mastering_plone/views_3.rst:45
msgid "``browser/configure.zcml``"
msgstr "El archivo ``browser/configure.zcml``"

#: ../mastering_plone/views_2.rst:56
msgid ""
"We are adding a file called :file:`views.py` in the :file:`browser` folder."
msgstr ""

#: ../mastering_plone/views_2.rst:58 ../mastering_plone/views_2.rst:184
msgid ":file:`browser/views.py`"
msgstr ""

#: ../mastering_plone/views_2.rst:72
msgid ""
"In the template :file:`training.pt` we can now use this view as `view` and "
"access all its methods and properties:"
msgstr ""

#: ../mastering_plone/views_2.rst:78
msgid "The logic contained in that file can now be moved to the class:"
msgstr ""

#: ../mastering_plone/views_2.rst:124
msgid "And the template will now be much simpler."
msgstr ""

#: ../mastering_plone/views_2.rst:166
msgid "The default view"
msgstr ""

#: ../mastering_plone/views_2.rst:168
msgid ""
"Using a view you can now create a nice view for talks in :file:`views.py`. "
"First we will not write any methods for `view` but instead access the fields"
" from the talk-schema as `context.<fieldname>`."
msgstr ""

#: ../mastering_plone/views_2.rst:171
msgid "Register a view `talkview` in :file:`browser/configure.zcml`:"
msgstr ""

#: ../mastering_plone/views_2.rst:191
msgid "Add the template :file:`templates/talkview.pt`:"
msgstr ""

#: ../mastering_plone/views_2.rst:215
msgid ""
"After a restart, we can test our view by going to a talk and adding "
"*/talkview* to the url."
msgstr ""

#: ../mastering_plone/views_2.rst:219
msgid "Using helper-methods from :py:class:`DefaultView`"
msgstr ""

#: ../mastering_plone/views_2.rst:221
msgid ""
"Dexterity comes with a nice helper-class suited for views of content-types: "
"The :py:class:`DefaultView` base class in :py:mod:`plone.dexterity`. It only"
" works for Dexterity Objects and has some very useful properties available "
"to the template:"
msgstr ""

#: ../mastering_plone/views_2.rst:224
msgid ""
":py:attr:`view.w` is a dictionary of all the display widgets, keyed by field"
" names. This includes widgets from alternative fieldsets."
msgstr ""

#: ../mastering_plone/views_2.rst:225
msgid ""
":py:attr:`view.widgets` contains a list of widgets in schema order for the "
"default fieldset."
msgstr ""

#: ../mastering_plone/views_2.rst:226
msgid ":py:attr:`view.groups` contains a list of fieldsets in fieldset order."
msgstr ""

#: ../mastering_plone/views_2.rst:227
msgid ""
":py:attr:`view.fieldsets` contains a dict mapping fieldset name to fieldset"
msgstr ""

#: ../mastering_plone/views_2.rst:228
msgid ""
"On a fieldset (group), you can access a widget list to get widgets in that "
"fieldset"
msgstr ""

#: ../mastering_plone/views_2.rst:230
msgid "You can now change the :py:class:`TalkView` to use that"
msgstr ""

#: ../mastering_plone/views_2.rst:242
msgid ""
"The template :file:`templates/talkview.pt` still works but now you can "
"modify it to use the pattern :samp:`view/w/<fieldname>/render` to render the"
" widgets:"
msgstr ""

#: ../mastering_plone/views_2.rst:265
msgid ""
"After a restart, we can test the modified view by going to a talk and adding"
" */talkview* to the url."
msgstr ""

#: ../mastering_plone/views_2.rst:267
msgid ""
"We should tell Plone that the talkview should be used as the default view "
"for talks instead of the built-in view."
msgstr ""

#: ../mastering_plone/views_2.rst:269
msgid ""
"This is a configuration that you can change during runtime and is stored in "
"the database, as such it is also managed by GenericSetup profiles."
msgstr ""
"Esta es una configuración que puede cambiar en tiempo de ejecución y se "
"almacena en la base de datos, como tal, también es gestionado por perfiles "
"GenericSetup."

#: ../mastering_plone/views_2.rst:271
msgid "open :file:`profiles/default/types/talk.xml`:"
msgstr ""

#: ../mastering_plone/views_2.rst:285
msgid ""
"We will have to either reinstall our add-on or run the GenericSetup import "
"step ``typeinfo`` so Plone learns about the change."
msgstr ""

#: ../mastering_plone/views_2.rst:289
msgid ""
"To change it ttw got to the ZMI (http://localhost:8080/Plone/manage), go to "
"``portal_types`` and select the type for which the new view should be "
"selectable (*talk*). Now add ``talkview`` to the list *Available view "
"methods*. Now the new view is available in the menu *Display*. To make it "
"the default view enter it in ``Default view method``."
msgstr ""

#: ../mastering_plone/views_2.rst:291
msgid "Let's improve the talkview to show all the info we want."
msgstr ""
"Mejoremos la vista talkview para mostrar toda la información que queremos."

#: ../mastering_plone/views_2.rst:293
msgid ":file:`templates/talkview.pt`:"
msgstr ""

#: ../mastering_plone/views_2.rst:343
msgid ""
"Add the new choice field \"room\" to the Talk type (TTW) and display it "
"below Audience in the browser view, it should contain the following data:"
msgstr ""

#: ../mastering_plone/views_2.rst:345
msgid "Title: Room"
msgstr "Título: Room"

#: ../mastering_plone/views_2.rst:346
msgid "Possible values: Room 101, Room 102, Auditorium"
msgstr "Posible valores: Room 101, Room 102, Auditorium"

#: ../mastering_plone/views_2.rst:351
msgid ""
"Go to http://localhost:8080/Plone/dexterity-types/talk/@@fields and add the "
"new field"
msgstr ""

#: ../mastering_plone/views_2.rst:352
msgid "Add the new HTML below the audience part:"
msgstr "Agregar el nuevo HTML siguiente en la parte de audience:"

#: ../mastering_plone/views_2.rst:364
msgid "Behind the scenes"
msgstr ""

#: ../mastering_plone/views_2.rst:392
msgid ""
"Do you remember the term :py:class:`MultiAdapter`? The browser page is just "
"a MultiAdapter. The ZCML statement :samp:`browser:page` registers a "
":py:class:`MultiAdapter` and adds additional things needed for a browser "
"view."
msgstr ""

#: ../mastering_plone/views_2.rst:394
msgid ""
"An adapter adapts things, a :py:class:`MultiAdapter` adapts multiple things."
msgstr ""

#: ../mastering_plone/views_2.rst:396
msgid ""
"When you enter a url, Zope tries to find an object for it. At the end, when "
"Zope does not find any more objects but there is still a path item left, or "
"there are no more path items, Zope looks for an adapter that will reply to "
"the request."
msgstr ""

#: ../mastering_plone/views_2.rst:398
msgid ""
"The adapter adapts the request and the object that Zope found with the URL. "
"The adapter class gets instantiated with the objects to be adapted, then it "
"gets called."
msgstr ""
"El adaptador se adapta la solicitud y el objeto que Zope ha encontrado con "
"la dirección URL. La clase de adaptador se crea instanciada con los objetos "
"que han de adaptarse, entonces se llama."

#: ../mastering_plone/views_2.rst:400
msgid ""
"The code above does the same thing that the standard implementation would "
"do. It makes :py:attr:`context` and :py:attr:`request` available as "
"variables on the object."
msgstr ""

#: ../mastering_plone/views_2.rst:402
msgid ""
"I have written down these methods because it is important to understand some"
" important concepts."
msgstr ""

#: ../mastering_plone/views_2.rst:404
msgid ""
"The :py:meth:`__init__` method gets called while Zope is still *trying* to "
"find a view. At that phase, the security has not been resolved. Your code is"
" not security checked. For historical reasons, many errors that happen in "
"the :py:meth:`__init__` method can result in a page not found error instead "
"of an exception."
msgstr ""

#: ../mastering_plone/views_2.rst:406
msgid ""
"Use the :py:meth:`__init__` method to do as little as possible, if at all. "
"Instead, you have the guarantee that the :py:meth:`__call__` method is "
"called before anything else (but after the :py:meth:`__init__` method). It "
"has the security checks in place and so on."
msgstr ""

#: ../mastering_plone/views_2.rst:408
msgid ""
"From a practical standpoint, consider the :py:meth:`__call__` method your "
":py:meth:`__init__` method, the biggest difference is that this method is "
"supposed to return the HTML already. Let your base class handle the HTML "
"generation."
msgstr ""

#: ../mastering_plone/views_2.rst:413
msgid "http://docs.plone.org/develop/plone/views/browserviews.html"
msgstr "http://docs.plone.org/develop/plone/views/browserviews.html"

#: ../mastering_plone/views_3.rst:4
msgid "Views III: A Talk List"
msgstr ""

#: ../mastering_plone/views_3.rst:16
msgid "Write a python class to get all talks from the catalog"
msgstr ""

#: ../mastering_plone/views_3.rst:17
msgid "Write a template to display the talks"
msgstr ""

#: ../mastering_plone/views_3.rst:18
msgid "Improve the table"
msgstr ""

#: ../mastering_plone/views_3.rst:22
msgid "BrowserView"
msgstr ""

#: ../mastering_plone/views_3.rst:25 ../mastering_plone/views_3.rst:116
msgid "brains and objects"
msgstr "Cerebros y objetos"

#: ../mastering_plone/views_3.rst:26
msgid "tables"
msgstr ""

#: ../mastering_plone/views_3.rst:29
msgid ""
"Now we don't want to provide information about one specific item but on "
"several items. What now? We can't look at several items at the same time as "
"context."
msgstr ""
"Ahora no queremos proporcionar información sobre un elemento específico, "
"sino en varios elementos. ¿Y ahora qué? No podemos mirar a varios elementos "
"al mismo tiempo que el contexto."

#: ../mastering_plone/views_3.rst:35
msgid "Using portal_catalog"
msgstr "Usando portal_catalog"

#: ../mastering_plone/views_3.rst:37
msgid ""
"Let's say we want to show a list of all the talks that were submitted for "
"our conference. We can just go to the folder and select a display method "
"that suits us. But none does because we want to show the target audience in "
"our listing."
msgstr ""

#: ../mastering_plone/views_3.rst:39
msgid ""
"So we need to get all the talks. For this we use the python class of the "
"view to query the catalog for the talks."
msgstr ""

#: ../mastering_plone/views_3.rst:41
msgid ""
"The catalog is like a search engine for the content on our site. It holds "
"information about all the objects as well as some of their attributes like "
"title, description, workflow_state, keywords that they were tagged with, "
"author, content_type, its path in the site etc. But it does not hold the "
"content of \"heavy\" fields like images or files, richtext fields and fields"
" that we just defined ourselves."
msgstr ""

#: ../mastering_plone/views_3.rst:43
msgid ""
"It is the fast way to get content that exists in the site and do something "
"with it. From the results of the catalog we can get the objects themselves "
"but often we don't need them, but only the properties that the results "
"already have."
msgstr ""
"Es la forma más rápida de obtener el contenido que existe en el sitio y "
"hacer algo con él. A partir de los resultados del catálogo podemos conseguir"
" los mismos objetos, pero a menudo no lo necesita, pero sólo las propiedades"
" que los resultados ya tienen."

#: ../mastering_plone/views_3.rst:59
msgid "``browser/views.py``"
msgstr "El archivo ``browser/views.py``"

#: ../mastering_plone/views_3.rst:92
msgid ""
"We query the catalog with two parameters. The catalog returns only items for"
" which **both** apply:"
msgstr ""

#: ../mastering_plone/views_3.rst:94
msgid "``context=self.context``"
msgstr ""

#: ../mastering_plone/views_3.rst:95
msgid "``portal_type='talk'``"
msgstr ""

#: ../mastering_plone/views_3.rst:97
msgid ""
"We pass a object as `context` to query only for content in the current path."
" Otherwise we'd get all talks in the whole site. If we moved some talks to a"
" different part of the site (e.g. a sub-conference for universities with a "
"special talk list) we might not want so see them in our listing. We also "
"query for the `portal_type` so we only find talks."
msgstr ""

#: ../mastering_plone/views_3.rst:101
msgid ""
"We use the method :py:meth:`find` in :py:mod:`plone.api` to query the "
"catalog. It is one of many convenience-methods provided as a wrapper around "
"otherwise more complex api's. If you query the catalog direcly you'd have to"
" first get the catalog, and pass it the path for which you want to find "
"items:"
msgstr ""

#: ../mastering_plone/views_3.rst:109
msgid "We iterate over the list of results that the catalog returns us."
msgstr ""
"Nosotros iteramos sobre la lista de resultados que el catálogo nos devuelve."

#: ../mastering_plone/views_3.rst:111
msgid ""
"We create a dictionary that holds all the information we want to show in the"
" template. This way we don't have to put any complex logic into the "
"template."
msgstr ""
"Creamos un diccionario que contiene toda la información que queremos mostrar"
" en la plantilla. De esta manera no tiene que poner ninguna lógica compleja "
"en la plantilla."

#: ../mastering_plone/views_3.rst:118
msgid ""
"Objects are normally not loaded into memory but lie dormant in the ZODB "
"Database. Waking objects up can be slow, especially if you're waking up a "
"lot of objects. Fortunately our talks are not especially heavy since they "
"are:"
msgstr ""

#: ../mastering_plone/views_3.rst:120
msgid "dexterity-objects which are lighter than their archetypes brothers"
msgstr ""

#: ../mastering_plone/views_3.rst:121
msgid ""
"relatively few since we don't have thousands of talks at our conference"
msgstr ""
"relativamente pocos, ya que no tenemos miles de charlas en nuestra "
"conferencia"

#: ../mastering_plone/views_3.rst:123
msgid ""
"We want to show the target audience but that attribute of the talk content "
"type is not in the catalog. This is why we need to get to the objects "
"themselves."
msgstr ""

#: ../mastering_plone/views_3.rst:125
msgid ""
"We could also add a new index to the catalog that will add 'audience' to the"
" properties of brains, but we should weigh the pros and cons:"
msgstr ""

#: ../mastering_plone/views_3.rst:127
msgid "talks are important and thus most likely always in memory"
msgstr ""
"charlas son importantes y por lo tanto más probable es que siempre este en "
"memoria"

#: ../mastering_plone/views_3.rst:128
msgid "prevent bloating of catalog with indexes"
msgstr "prevenir la inflamación del catálogo con índices"

#: ../mastering_plone/views_3.rst:132
msgid "The code to add such an index would look like this::"
msgstr "El código para agregar este índice se vería como el siguiente:"

#: ../mastering_plone/views_3.rst:141
msgid ""
"We'd have to register this factory function as a named adapter in the "
":file:`configure.zcml`. Assuming you've put the code above into a file named"
" :file:`indexers.py`"
msgstr ""

#: ../mastering_plone/views_3.rst:147
msgid "We will add some indexers later on."
msgstr "Vamos a agregar algunos índices más adelante."

#: ../mastering_plone/views_3.rst:149
msgid ""
"Why use the catalog at all? It checks for permissions, and only returns the "
"talks that the current user may see. They might be private or hidden to you "
"since they are part of a top secret conference for core developers (there is"
" no such thing!)."
msgstr ""

#: ../mastering_plone/views_3.rst:151
msgid ""
"Most objects in Plone act like dictionaries, so you can do "
":py:meth:`context.values()` to get all its contents."
msgstr ""

#: ../mastering_plone/views_3.rst:153
msgid ""
"For historical reasons some attributes of brains and objects are written "
"differently."
msgstr ""

#: ../mastering_plone/views_3.rst:168
msgid ""
"Who can guess what :py:attr:`brain.title` will return since the brain has no"
" such attribute?"
msgstr ""

#: ../mastering_plone/views_3.rst:174
msgid ""
"Answer: Acquisition will get the attribute from the nearest parent. "
"``brain.__parent__`` is ``<CatalogTool at /Plone/portal_catalog>``. The "
"attribute ``title`` of the ``portal_catalog`` is 'Indexes all content in the"
" site'."
msgstr ""
"Respuesta: La Adquisición obtendrá el atributo de servidor principal más "
"cercano. ``brain.__parent__``  es ``<CatalogTool at "
"/Plone/portal_catalog>``. El atributo ``title`` del ``portal_catalog`` es "
"'Indexado en todo el contenido en el sitio'."

#: ../mastering_plone/views_3.rst:176
msgid ""
"Acquisition can be harmful. Brains have no attribute 'getLayout' "
":py:meth:`brain.getLayout()`:"
msgstr ""

#: ../mastering_plone/views_3.rst:189
msgid "The same is true for methods:"
msgstr ""

#: ../mastering_plone/views_3.rst:203
msgid "Querying the catalog"
msgstr "Consultando el catálogo"

#: ../mastering_plone/views_3.rst:205
msgid ""
"The are many `catalog indexes "
"<http://docs.plone.org/develop/plone/searching_and_indexing/indexing.html>`_"
" to query. Here are some examples:"
msgstr ""

#: ../mastering_plone/views_3.rst:215
msgid "Calling the catalog without parameters returns the whole site:"
msgstr ""

#: ../mastering_plone/views_3.rst:224
msgid "http://docs.plone.org/develop/plone/searching_and_indexing/query.html"
msgstr "http://docs.plone.org/develop/plone/searching_and_indexing/query.html"

#: ../mastering_plone/views_3.rst:232
msgid ""
"Since you now know how to query the catalog it is time for some exercise."
msgstr ""
"Ya que ahora saben cómo consultar el catálogo es el momento para un poco de "
"ejercicio."

#: ../mastering_plone/views_3.rst:237
msgid ""
"Add a method :py:meth:`get_news` to :py:class:`TalkListView` that returns a "
"list of brains of all News Items that are published and sort them in the "
"order of their publishing-date."
msgstr ""

#: ../mastering_plone/views_3.rst:259
msgid "Add a method that returns all published keynotes as objects."
msgstr ""
"Agregar un método que regresa todas las keynotes publicadas como objetos."

#: ../mastering_plone/views_3.rst:286
msgid "The template for the listing"
msgstr "La plantilla para la lista"

#: ../mastering_plone/views_3.rst:288
msgid ""
"Next you create a template in which you use the results of the method "
"'talks'."
msgstr ""
"A continuación, crear una plantilla en la usa los resultados del método de "
"las 'charlas'."

#: ../mastering_plone/views_3.rst:290
msgid "Try to keep logic mostly in python. This is for two reasons:"
msgstr ""
"Trate de mantener la lógica mayormente en Python. Esto es por dos razones:"

#: ../mastering_plone/views_3.rst:293
msgid "Readability:"
msgstr "Legibilidad:"

#: ../mastering_plone/views_3.rst:293
msgid "It's much easier to read python than complex tal-structures"
msgstr "Es mucho más fácil de leer Python que complejas estructuras de TAL."

#: ../mastering_plone/views_3.rst:296
msgid "Speed:"
msgstr "Velocidad:"

#: ../mastering_plone/views_3.rst:296
msgid ""
"Python-code is faster than code executed in templates. It's also easy to add"
" caching to methods."
msgstr ""
"El código Python es más rápido que el código ejecutado en las plantillas. "
"También es fácil de añadir almacenamiento en caché a los métodos."

#: ../mastering_plone/views_3.rst:300
msgid "DRY:"
msgstr "Don't Repeat Yourself (DRY):"

#: ../mastering_plone/views_3.rst:299
msgid ""
"In Python you can reuse methods and easily refactor code. Refactoring TAL "
"usually means having to do big changes in the html-structure which results "
"in incomprehensible diffs."
msgstr ""

#: ../mastering_plone/views_3.rst:302
msgid ""
"The MVC-Schema does not directly apply to Plone but look at it like this:"
msgstr ""
"El esquema MVC no se aplica directamente a Plone pero míralo de esta manera:"

#: ../mastering_plone/views_3.rst:305
msgid "Model:"
msgstr "Modelo:"

#: ../mastering_plone/views_3.rst:305
msgid "the object"
msgstr "el objeto"

#: ../mastering_plone/views_3.rst:308
msgid "View:"
msgstr "Vista:"

#: ../mastering_plone/views_3.rst:308
msgid "the template"
msgstr "la plantilla"

#: ../mastering_plone/views_3.rst:311
msgid "Controller:"
msgstr "Controlador:"

#: ../mastering_plone/views_3.rst:311
msgid "the view"
msgstr "la vista"

#: ../mastering_plone/views_3.rst:313
msgid ""
"The view and the controller are very much mixed in Plone. Especially when "
"you look at some of the older code of Plone you'll see that the policy of "
"keeping logic in python and representation in templates was not always "
"enforced."
msgstr ""
"La vista y el controlador están muy mezclados en Plone. Especialmente cuando"
" nos fijamos en algunos de los códigos más antiguos de Plone verás que la "
"política de mantener la lógica en Python y representación en las plantillas "
"no siempre se cumple."

#: ../mastering_plone/views_3.rst:315
msgid ""
"But you should nevertheless do it! You'll end up with more than enough logic"
" in the templates anyway."
msgstr ""
"¡Pero usted debe, no obstante, que lo haga! Usted va a terminar con más que "
"suficiente lógica en las plantillas de todos modos."

#: ../mastering_plone/views_3.rst:317
msgid "Add this simple table to :file:`templates/talklistview.pt`:"
msgstr ""

#: ../mastering_plone/views_3.rst:366
msgid "Again we use ``class=\"listing\"`` to give the table a nice style."
msgstr ""

#: ../mastering_plone/views_3.rst:368
msgid "There are some some things that need explanation:"
msgstr "Hay algunas cosas que necesitan explicación:"

#: ../mastering_plone/views_3.rst:371
msgid ":samp:`tal:define=\"talks python:view.talks()\"`"
msgstr ""

#: ../mastering_plone/views_3.rst:371
msgid ""
"This defines the variable `talks`. We do thins since we reuse it later and "
"don't want to call the same method twice. Since TAL's path expressions for "
"the lookup of values in dictionaries is the same as for the attributes of "
"objects and methods of classes we can write :samp:`view/talks` as we could "
":samp:`view/someattribute`. Handy but sometimes irritating since from "
"looking at the page template alone we often have no way of knowing if "
"something is an attribute, a method or the value of a dict."
msgstr ""

#: ../mastering_plone/views_3.rst:374
msgid ":samp:`tal:repeat=\"talk talks\"`"
msgstr ""

#: ../mastering_plone/views_3.rst:374
msgid ""
"This iterates over the list of dictionaries returned by the view. Each "
":py:obj:`talk` is one of the dictionaries that are returned by this method."
msgstr ""

#: ../mastering_plone/views_3.rst:377
msgid ":samp:`tal:content=\"python:talk['speaker']\"`"
msgstr ""

#: ../mastering_plone/views_3.rst:377
msgid ""
"'speaker' is a key in the dict 'talk'. We could also write "
":samp:`tal:content=\"talk/speaker\"`"
msgstr ""

#: ../mastering_plone/views_3.rst:380
msgid ":samp:`tal:condition=\"not:talks\"`"
msgstr ""

#: ../mastering_plone/views_3.rst:380
msgid ""
"This is a fallback if no talks are returned. It then returns an empty list "
"(remember :samp:`results = []`?)"
msgstr ""

#: ../mastering_plone/views_3.rst:384
msgid ""
"We could also write :samp:`python:not talks` like we could also write "
":samp:`tal:repeat=\"talk python:talks\"` for the iteration. For simple cases"
" as these path-statements are sometimes fine. On the other hand: If "
"``talks`` would be a callable we woul need to use ``nocall:talks``, so maybe"
" it would be better to always use ``python:``."
msgstr ""

#: ../mastering_plone/views_3.rst:390
msgid ""
"Modify the view to only use path-expressions. This is **not** best-practice "
"but there is plenty of code in Plone and in Addons so you have to know how "
"to use them."
msgstr ""

#: ../mastering_plone/views_3.rst:445
msgid "Setting a custom view as default view on an object"
msgstr ""

#: ../mastering_plone/views_3.rst:447
msgid ""
"We don't want to always have to append :samp:`/@@talklistview` to our folder"
" to get the view. There is a very easy way to set the view to the folder "
"using the ZMI."
msgstr ""

#: ../mastering_plone/views_3.rst:449
msgid ""
"If we append :samp:`/manage_propertiesForm` we can set the property "
"\"layout\" to :samp:`talklistview`."
msgstr ""

#: ../mastering_plone/views_3.rst:451
msgid ""
"To make views configurable so that editors can choose them we have to "
"register the view for the content type at hand in its FTI. To enable it for "
"all folders we add a new file :file:`profiles/default/types/Folder.xml`"
msgstr ""

#: ../mastering_plone/views_3.rst:463
msgid ""
"After re-applying the typeinfo profile of our add-on (or simply reinstalling"
" it) the content type \"Folder\" is extended with our additional view method"
" and appears in the display dropdown."
msgstr ""

#: ../mastering_plone/views_3.rst:465
msgid ""
"The :samp:`purge=\"False\"` appends the view to the already existing ones "
"instead of replacing them."
msgstr ""

#: ../mastering_plone/views_3.rst:473
msgid ""
"We created a nice listing, that can be called at any place in the website."
msgstr ""
"Hemos creado un bonito listado, que se puede llamar en cualquier lugar en el"
" sitio web."

#: ../mastering_plone/zpt.rst:4
msgid "Page Templates"
msgstr ""

#: ../mastering_plone/zpt.rst:17
msgid "Learn to write page templates"
msgstr ""

#: ../mastering_plone/zpt.rst:22 ../mastering_plone/zpt.rst:83
msgid "TAL and TALES"
msgstr "TAL y TALES"

#: ../mastering_plone/zpt.rst:24
msgid "Chameleon"
msgstr "Chameleon"

#: ../mastering_plone/zpt.rst:27
msgid ""
"Page Templates are HTML files with some additional information, written in "
"TAL, METAL and TALES."
msgstr ""

#: ../mastering_plone/zpt.rst:29
msgid "Page templates must be valid xml."
msgstr "Las page templates debe ser XML válido."

#: ../mastering_plone/zpt.rst:31
msgid "The three languages are:"
msgstr "Las tres lenguas son:"

#: ../mastering_plone/zpt.rst:33
msgid "TAL: \"Template Attribute Language\""
msgstr "TAL: \"Template Attribute Language\""

#: ../mastering_plone/zpt.rst:35
msgid "Templating XML/HTML using special attributes"
msgstr ""

#: ../mastering_plone/zpt.rst:37
msgid "Using TAL we include expressions within html"
msgstr ""

#: ../mastering_plone/zpt.rst:39
msgid "TALES: \"TAL Expression Syntax\""
msgstr "TALES: \"TAL Expression Syntax\""

#: ../mastering_plone/zpt.rst:41
msgid "defines the syntax and semantics of these expressions"
msgstr "Define la sintaxis y la semántica de estas expresiones"

#: ../mastering_plone/zpt.rst:43
msgid "METAL: \"Macro Expansion for TAL\""
msgstr "METAL: \"Macro Expansion for TAL\""

#: ../mastering_plone/zpt.rst:45
msgid "this enables us to combine, re-use and nest templates together"
msgstr ""
"Esto nos permite combinar, la reutilización y las plantillas anidadas juntos"

#: ../mastering_plone/zpt.rst:47
msgid ""
"TAL and METAL are written like html attributes (href, src, title). TALES are"
" written like the values of html attributes. A typical TAL attribute looks "
"like this:"
msgstr ""

#: ../mastering_plone/zpt.rst:55
msgid "It's used to modify the output:"
msgstr "Se utiliza para modificar la salida:"

#: ../mastering_plone/zpt.rst:61 ../mastering_plone/zpt.rst:110
msgid "results in:"
msgstr "resultado en:"

#: ../mastering_plone/zpt.rst:67
msgid "Let's try it. Open the file :file:`training.pt` and add:"
msgstr ""

#: ../mastering_plone/zpt.rst:85
msgid "Let's add some magic and modify the <p>-tag:"
msgstr "Vamos a añadir un poco de magia y modificar la etiqueta <p>:"

#: ../mastering_plone/zpt.rst:91
msgid "This will result in:"
msgstr "Esto resultará en el siguiente código HTML:"

#: ../mastering_plone/zpt.rst:97
msgid "Without restarting Plone open http://localhost:8080/Plone/@@training."
msgstr ""

#: ../mastering_plone/zpt.rst:99
msgid "The same happens with attributes. Replace the <p>-line with:"
msgstr ""
"Lo mismo ocurre con los atributos. Remplace en la línea <p> con el siguiente"
" código:"

#: ../mastering_plone/zpt.rst:118
msgid ""
"We used three TAL-Attributes here. This is the complete list of TAL-"
"attributes:"
msgstr ""
"Nosotros hemos utilizado los tres atributos TAL aquí. A continuación una la "
"lista completa de los atributos TAL:"

#: ../mastering_plone/zpt.rst:121
msgid "``tal:define``"
msgstr "``tal:define``"

#: ../mastering_plone/zpt.rst:121
msgid ""
"define variables. We defined the variable ``a_fine_url`` to the string "
"\"http://www.ploneconf.org\""
msgstr ""

#: ../mastering_plone/zpt.rst:124
msgid "``tal:content``"
msgstr "``tal:content``"

#: ../mastering_plone/zpt.rst:124
msgid ""
"replace the content of an element. We replaced the default content above "
"with \"An even better conference\""
msgstr ""

#: ../mastering_plone/zpt.rst:127
msgid "``tal:attributes``"
msgstr "``tal:attributes``"

#: ../mastering_plone/zpt.rst:127
msgid ""
"dynamically change element attributes. We set the HTML attribute ``href`` to"
" the value of the variable ``a_fine_url``"
msgstr ""

#: ../mastering_plone/zpt.rst:130 ../mastering_plone/zpt.rst:179
msgid "``tal:condition``"
msgstr "``tal:condition``"

#: ../mastering_plone/zpt.rst:130
msgid ""
"tests whether the expression is true or false, and outputs or omits the "
"element accordingly."
msgstr ""

#: ../mastering_plone/zpt.rst:133 ../mastering_plone/zpt.rst:215
msgid "``tal:repeat``"
msgstr "``tal:repeat``"

#: ../mastering_plone/zpt.rst:133 ../mastering_plone/zpt.rst:215
msgid "repeats an iterable element, in our case the list of talks."
msgstr "repite un elemento iterable, en nuestro caso, la lista de charlas."

#: ../mastering_plone/zpt.rst:136
msgid "``tal:replace``"
msgstr "``tal:replace``"

#: ../mastering_plone/zpt.rst:136
msgid ""
"replace the content of an element, like ``tal:content`` does, but removes "
"the element only leaving the content."
msgstr ""

#: ../mastering_plone/zpt.rst:139 ../mastering_plone/zpt.rst:412
msgid "``tal:omit-tag``"
msgstr "``tal:omit-tag``"

#: ../mastering_plone/zpt.rst:139
msgid "remove an element, leaving the content of the element."
msgstr "eliminar un elemento, dejando el contenido del elemento."

#: ../mastering_plone/zpt.rst:143 ../mastering_plone/zpt.rst:415
msgid "``tal:on-error``"
msgstr "``tal:on-error``"

#: ../mastering_plone/zpt.rst:142 ../mastering_plone/zpt.rst:415
msgid "handle errors."
msgstr "controlar los errores."

#: ../mastering_plone/zpt.rst:146
msgid "python expressions"
msgstr ""

#: ../mastering_plone/zpt.rst:148
msgid ""
"So far we only used one TALES expression (the ``string:`` bit). Let's use a "
"different TALES expression now. With ``python:`` we can use python code. A "
"simple example:"
msgstr ""

#: ../mastering_plone/zpt.rst:157
msgid "And another:"
msgstr "Y otro ejemplo:"

#: ../mastering_plone/zpt.rst:169
msgid "With python expressions"
msgstr ""

#: ../mastering_plone/zpt.rst:171
msgid "you can only write single statements"
msgstr "sólo se puede escribir declaraciones individuales"

#: ../mastering_plone/zpt.rst:172
msgid ""
"you could import things but you should not (example: "
"``tal:define=\"something modules/Products.PythonScripts/something;``)."
msgstr ""
"usted podría importar cosas pero no debe (ejemplo: ``tal:define=\"something "
"modules/Products.PythonScripts/something;``)."

#: ../mastering_plone/zpt.rst:176
msgid "tal:condition"
msgstr "tal:condition"

#: ../mastering_plone/zpt.rst:179
msgid "tests whether the expression is true or false."
msgstr ""

#: ../mastering_plone/zpt.rst:181
msgid "If it's true, then the tag is rendered."
msgstr "Si es true, entonces la etiqueta se representa."

#: ../mastering_plone/zpt.rst:182
msgid ""
"If it's false then the tag **and all its children** are removed and no "
"longer evaluated."
msgstr ""
"Si es false, entonces la etiqueta **y todos sus hijos** se retiran y ya no "
"se evalúa."

#: ../mastering_plone/zpt.rst:183
msgid "We can reverse the logic by prepending a ``not:`` to the expression."
msgstr "Podemos invertir la lógica anteponiendo un ``not:`` a la expresión."

#: ../mastering_plone/zpt.rst:185
msgid "Let's add another TAL Attribute to our above example::"
msgstr ""

#: ../mastering_plone/zpt.rst:189
msgid "We could also test for the number of talks::"
msgstr "También pudimos probar que el número de charlas:"

#: ../mastering_plone/zpt.rst:193
msgid "or if a certain talk is in the list of talks::"
msgstr "o si una cierta charla está en la lista de charlas:"

#: ../mastering_plone/zpt.rst:199
msgid "tal:repeat"
msgstr "tal:repeat"

#: ../mastering_plone/zpt.rst:201
msgid "Let's try another attribute:"
msgstr ""

#: ../mastering_plone/zpt.rst:217
msgid ""
"We change the markup a little to construct a list in which there is an "
"``<li>`` for every talk:"
msgstr ""
"Cambiamos el formato un poco para construir una lista en la que hay una "
"lista de elementos HTML ``<li>`` para cada charla:"

#: ../mastering_plone/zpt.rst:237
msgid "path expressions"
msgstr ""

#: ../mastering_plone/zpt.rst:239
msgid ""
"Regarding TALES so far we used ``string:`` or ``python:`` or only variables."
" The next and most common expression are path expressions. Optionally you "
"can start a path expression with ``path:``"
msgstr ""

#: ../mastering_plone/zpt.rst:241
msgid ""
"Every path expression starts with a variable name. It can either be an "
"object like :py:obj:`context`, :py:obj:`view` or :py:obj:`template` or a "
"variable defined earlier like :py:data:`talk`."
msgstr ""

#: ../mastering_plone/zpt.rst:243
msgid ""
"After the variable we add a slash ``/`` and the name of a sub-object, "
"attribute or callable. The ``/`` is used to end the name of an object and "
"the start of the property name. Properties themselves may be objects that in"
" turn have properties."
msgstr ""

#: ../mastering_plone/zpt.rst:250
msgid "We can chain several of those to get to the information we want."
msgstr ""
"Podemos encadenar varios de los elementos para obtener la información que "
"queremos."

#: ../mastering_plone/zpt.rst:256
msgid ""
"This would return the value of the form dictionary of the HTTPRequest "
"object. Useful for form handling."
msgstr ""

#: ../mastering_plone/zpt.rst:258
msgid ""
"The ``|`` (\"or\") character is used to find an alternative value to a path "
"if the first path evaluates to ``nothing`` or does not exist."
msgstr ""
"El ``|`` (operador lógico \"o\") se utiliza para encontrar un valor "
"alternativo a una ruta si la primera ruta se evalúe como ``nothing`` o no "
"existe."

#: ../mastering_plone/zpt.rst:264
msgid "This returns the id of the context if it has no title."
msgstr "Esto devuelve el id del contexto si no tiene título."

#: ../mastering_plone/zpt.rst:270
msgid ""
"This returns nothing if there is no 'average_rating' for a talk. What will "
"not work is ``tal:content=\"python:talk['average_rating'] or ''\"``. Who "
"knows what this would yield?"
msgstr ""
"Esto devuelve nothing si no hay 'average_rating' para una charla. Lo que no "
"funciona es ``tal:content=\"python:talk['average_rating'] or ''\"``. ¿Quién "
"sabe lo que esto produciría?"

#: ../mastering_plone/zpt.rst:274
msgid ""
"We'll get ``KeyError: 'average_rating'``. It is very bad practice to use "
"``|`` too often since it will swallow errors like a typo in "
"``tal:content=\"talk/averange_ratting | nothing\"`` and you might wonder why"
" there are no ratings later on..."
msgstr ""
"Conseguiremos ``KeyError: 'average_rating'``. Es muy mala práctica, usar el "
"operador ``|`` con demasiada frecuencia, ya que se tragará errores como un "
"error tipográfico en ``tal:content=\"talk/averange_ratting | nothing\"`` y "
"es posible que se preguntan por qué no existen calificaciones más tarde..."

#: ../mastering_plone/zpt.rst:276
msgid ""
"You can't and should not use it to prevent errors like a try/except block."
msgstr ""

#: ../mastering_plone/zpt.rst:278
msgid "There are several **built-in variables**  that can be used in paths:"
msgstr ""

#: ../mastering_plone/zpt.rst:280
msgid ""
"The most frequently used one is ``nothing`` which is the equivalent to None"
msgstr "El más utilizado es ``nothing`` que es el equivalente a ``None``"

#: ../mastering_plone/zpt.rst:288
msgid "A dict of all the available variables is ``econtext``"
msgstr ""

#: ../mastering_plone/zpt.rst:302
msgid "In Plone 4 that used to be ``CONTEXTS``"
msgstr ""

#: ../mastering_plone/zpt.rst:314
msgid "Useful for debugging :-)"
msgstr "Muy útil para depuración :-)"

#: ../mastering_plone/zpt.rst:318
msgid "Pure TAL blocks"
msgstr ""

#: ../mastering_plone/zpt.rst:320
msgid ""
"We can use TAL attributes without HTML Tags. This is useful when we don't "
"need to add any tags to the markup"
msgstr ""

#: ../mastering_plone/zpt.rst:322
msgid "Syntax:"
msgstr "Sintaxis:"

#: ../mastering_plone/zpt.rst:344
msgid "handling complex data in templates"
msgstr "Manejo de datos complejos en plantillas"

#: ../mastering_plone/zpt.rst:346
msgid ""
"Let's move on to a little more complex data. And to another TAL attribute:"
msgstr ""

#: ../mastering_plone/zpt.rst:349
msgid "tal:replace"
msgstr "tal:replace"

#: ../mastering_plone/zpt.rst:349
msgid ""
"replace the content of an element and removes the element only leaving the "
"content."
msgstr ""
"reemplazar el contenido de un elemento y elimina el elemento dejando sólo el"
" contenido."

#: ../mastering_plone/zpt.rst:360
msgid "this results in:"
msgstr "esto resulta en:"

#: ../mastering_plone/zpt.rst:368
msgid ""
"``tal:replace`` drops its own base tag in favor of the result of the TALES "
"expression. Thus the original ``<img... >`` is replaced. But the result is "
"escaped by default."
msgstr ""

#: ../mastering_plone/zpt.rst:370
msgid "To prevent escaping we use ``structure``"
msgstr "Para prevenir que se escapen utilizamos ``structure``"

#: ../mastering_plone/zpt.rst:379
msgid "Now let's emulate a typical Plone structure by creating a dictionary."
msgstr ""
"Ahora vamos a emular una estructura típica Plone mediante la creación de un "
"diccionario."

#: ../mastering_plone/zpt.rst:407
msgid ""
"We emulate a list of talks and display information about them in a table. "
"We'll get back to the list of talks later when we use the real talk objects "
"that we created with dexterity."
msgstr ""

#: ../mastering_plone/zpt.rst:409
msgid "To complete the list here are the TAL attributes we have not yet used:"
msgstr ""

#: ../mastering_plone/zpt.rst:412
msgid "Omit the element tag, leaving only the inner content."
msgstr ""

#: ../mastering_plone/zpt.rst:417
msgid ""
"When an element has multiple TAL attributes, they are executed in this "
"order:"
msgstr ""

#: ../mastering_plone/zpt.rst:419
msgid "define"
msgstr "define"

#: ../mastering_plone/zpt.rst:421
msgid "repeat"
msgstr "repeat"

#: ../mastering_plone/zpt.rst:422
msgid "content or replace"
msgstr "content o replace"

#: ../mastering_plone/zpt.rst:423
msgid "attributes"
msgstr "attributes"

#: ../mastering_plone/zpt.rst:424
msgid "omit-tag"
msgstr "omit-tag"

#: ../mastering_plone/zpt.rst:428
msgid "Plone 5"
msgstr "Plone 5"

#: ../mastering_plone/zpt.rst:430
msgid ""
"Plone 5 uses a new rendering engine called `Chameleon "
"<https://chameleon.readthedocs.io/en/latest/>`_. Using the integration "
"layer `five.pt <https://pypi.python.org/pypi/five.pt>`_ it is fully "
"compatible with the normal TAL syntax but offers some additional features:"
msgstr ""

#: ../mastering_plone/zpt.rst:432
msgid ""
"You can use ``${...}`` as short-hand for text insertion in pure html "
"effectively making ``tal:content`` and ``tal:attributes`` obsolete. Here are"
" some examples:"
msgstr ""

#: ../mastering_plone/zpt.rst:434
msgid "Plone 4 and Plone 5:"
msgstr ""

#: ../mastering_plone/zpt.rst:445
msgid "Plone 5 (and Plone 4 with five.pt) :"
msgstr ""

#: ../mastering_plone/zpt.rst:455
msgid "You can also add pure python into the templates:"
msgstr ""

#: ../mastering_plone/zpt.rst:476
msgid ""
"Modify the following template and one by one solve the following problems: :"
msgstr ""

#: ../mastering_plone/zpt.rst:509
msgid "Display the subjects as comma-separated."
msgstr ""

#: ../mastering_plone/zpt.rst:545
msgid "Turn the title in a link to the URL of the talk if there is one."
msgstr ""

#: ../mastering_plone/zpt.rst:585
msgid ""
"If there is no URL, turn it into a link to a google search for that talk's "
"title:"
msgstr ""

#: ../mastering_plone/zpt.rst:626
msgid ""
"Add alternating the CSS classes 'odd' and 'even' to the <tr>. "
"(:samp:`repeat.{<name of item in loop>}.odd` is True if the ordinal index of"
" the current iteration is an odd number)"
msgstr ""

#: ../mastering_plone/zpt.rst:628
msgid "Use some CSS to test your solution:"
msgstr ""

#: ../mastering_plone/zpt.rst:678
msgid "Only use python expressions."
msgstr ""

#: ../mastering_plone/zpt.rst:716
msgid "Use the new syntax of Plone 5"
msgstr ""

#: ../mastering_plone/zpt.rst:756
msgid "Sort the talks alphabetically by title"
msgstr ""

#: ../mastering_plone/zpt.rst:800
msgid "METAL and macros"
msgstr "METAL y macros"

#: ../mastering_plone/zpt.rst:802
msgid ""
"Why is our output so ugly? How do we get our html to render in Plone the UI?"
msgstr ""
"¿Por qué nuestra vista es tan feo?, ¿Cómo conseguimos nuestro HTML para "
"representar en la interfaz de usuario de Plone?"

#: ../mastering_plone/zpt.rst:804
msgid ""
"We use METAL (Macro Extension to TAL) to define slots that we can fill and "
"macros that we can reuse."
msgstr ""
"Utilizamos METAL (Macro Extension to TAL) para definir ranuras que podemos "
"llenar y macros que podemos reutilizar."

#: ../mastering_plone/zpt.rst:806
msgid "We add to the ``<html>`` tag::"
msgstr ""

#: ../mastering_plone/zpt.rst:810
msgid "And then wrap the code we want to put in the content area of Plone in:"
msgstr ""

#: ../mastering_plone/zpt.rst:818
msgid ""
"This will put our code in a section defined in the main_template called "
"\"content-core\"."
msgstr ""
"Esto pondrá a nuestro código de una sección definida en el main_template "
"llamado \"content-core\"."

#: ../mastering_plone/zpt.rst:820
msgid ""
"The template should now look like below when we exlude the last exercise."
msgstr ""

#: ../mastering_plone/zpt.rst:822
msgid ""
"Here also added the css-class `listing` to the table. It is one of many css-"
"classes used by Plone that you can reuse in your projects:"
msgstr ""

#: ../mastering_plone/zpt.rst:874
msgid "macros in browser views"
msgstr ""

#: ../mastering_plone/zpt.rst:876
msgid "Define a macro in a new file :file:`macros.pt`"
msgstr ""

#: ../mastering_plone/zpt.rst:884
msgid "Register it as a simple BrowserView in zcml:"
msgstr ""

#: ../mastering_plone/zpt.rst:895
msgid "Reuse the macro in the template :file:`training.pt`:"
msgstr ""

#: ../mastering_plone/zpt.rst:903
msgid "Which is the same as:"
msgstr ""

#: ../mastering_plone/zpt.rst:911
msgid ""
"Restart your Plone instance from the command line, and then open "
"http://localhost:8080/Plone/@@training to see this macro being used in our "
"@@training browser view template."
msgstr ""

#: ../mastering_plone/zpt.rst:916
msgid "Accessing Plone from the template"
msgstr "Accediendo a Plone desde la plantilla"

#: ../mastering_plone/zpt.rst:918
msgid ""
"In our template we have access to the context object on which the view is "
"called on, the browser view itself (i.e. all python methods we'll put in the"
" view later on), the request and response objects and with these we can get "
"almost anything."
msgstr ""

#: ../mastering_plone/zpt.rst:920
msgid ""
"In templates we can also access other browser views. Some of those exist to "
"provide easy access to methods we often need::"
msgstr ""

#: ../mastering_plone/zpt.rst:928
msgid "``@@plone_context_state``"
msgstr "``@@plone_context_state``"

#: ../mastering_plone/zpt.rst:928
msgid ""
"The BrowserView :py:class:`plone.app.layout.globals.context.ContextState` "
"holds useful methods having to do with the current context object such as "
":py:meth:`is_default_page`"
msgstr ""

#: ../mastering_plone/zpt.rst:931
msgid "``@@plone_portal_state``"
msgstr "``@@plone_portal_state``"

#: ../mastering_plone/zpt.rst:931
msgid ""
"The BrowserView :py:class:`plone.app.layout.globals.portal.PortalState` "
"holds methods for the portal like :py:meth:`portal_url`"
msgstr ""

#: ../mastering_plone/zpt.rst:934
msgid "``@@plone_tools``"
msgstr "``@@plone_tools``"

#: ../mastering_plone/zpt.rst:934
msgid ""
"The BrowserView :py:class:`plone.app.layout.globals.tools.Tools` gives "
"access to the most important tools like ``plone_tools/catalog``"
msgstr ""

#: ../mastering_plone/zpt.rst:936
msgid "These are very widely used and there are many more."
msgstr "Estos son muy utilizados y hay muchos más."

#: ../mastering_plone/zpt.rst:942
msgid "What we missed"
msgstr "Lo que echamos de menos"

#: ../mastering_plone/zpt.rst:944
msgid "There are some things we did not cover so far:"
msgstr "Hay algunas cosas que no nos cubrimos hasta el momento:"

#: ../mastering_plone/zpt.rst:947
msgid "``tal:condition=\"exists:expression\"``"
msgstr "``tal:condition=\"exists:expression\"``"

#: ../mastering_plone/zpt.rst:947
msgid "checks if an object or an attribute exists (seldom used)"
msgstr "comprueba si existe un objeto o un atributo (rara vez utilizada)"

#: ../mastering_plone/zpt.rst:950
msgid "``tal:condition=\"nocall:context\"``"
msgstr "``tal:condition=\"nocall:context\"``"

#: ../mastering_plone/zpt.rst:950
msgid "to explicitly not call a callable."
msgstr "que explícitamente no llamar a un método llamable."

#: ../mastering_plone/zpt.rst:952
msgid ""
"If we refer to content objects, without using the nocall: modifier these "
"objects are unnecessarily rendered in memory as the expression is evaluated."
msgstr ""
"Si nos referimos a objetos de contenido sin usar el modificador nocall: "
"estos objetos son innecesariamente representados en la memoria como la "
"expresión se evaluada."

#: ../mastering_plone/zpt.rst:955
msgid "``i18n:translate`` and ``i18n:domain``"
msgstr "``i18n:translate`` y ``i18n:domain``"

#: ../mastering_plone/zpt.rst:955
msgid "the strings we put in templates can be translated automatically."
msgstr ""
"las cadenas que ponemos en las plantillas se pueden traducir de forma "
"automática."

#: ../mastering_plone/zpt.rst:957
msgid ""
"There is a lot more about TAL, TALES and METAL that we have not covered. "
"You'll only learn it if you keep reading, writing and customizing templates."
msgstr ""
"Hay mucho más acerca de TAL, TALES y METAL que no hemos cubierto. Usted "
"solamente aprenderá si sigues leyendo, escribiendo y personalización de "
"plantillas."

#: ../mastering_plone/zpt.rst:961
msgid ""
"http://docs.plone.org/adapt-and-"
"extend/theming/templates_css/template_basics.html"
msgstr ""
"http://docs.plone.org/adapt-and-"
"extend/theming/templates_css/template_basics.html"

#: ../mastering_plone/zpt.rst:962
msgid ""
"Using Zope Page Templates: http://docs.zope.org/zope2/zope2book/ZPT.html"
msgstr ""
"Usando Zope Page Templates: http://docs.zope.org/zope2/zope2book/ZPT.html"

#: ../mastering_plone/zpt.rst:963
msgid ""
"Zope Page Templates Reference: "
"http://docs.zope.org/zope2/zope2book/AppendixC.html"
msgstr ""
"Referencia de Zope Page Templates: "
"http://docs.zope.org/zope2/zope2book/AppendixC.html"

#: ../mastering_plone/zpt.rst:964
msgid "https://chameleon.readthedocs.io/en/latest/"
msgstr ""

#: ../mastering_plone/zpt_2.rst:4
msgid "Customizing Existing Templates"
msgstr ""

#: ../mastering_plone/zpt_2.rst:16
msgid "Customize existing templates"
msgstr ""

#: ../mastering_plone/zpt_2.rst:20
msgid "omelette/packages"
msgstr ""

#: ../mastering_plone/zpt_2.rst:21
msgid "z3c.jbot"
msgstr ""

#: ../mastering_plone/zpt_2.rst:22
msgid "date-formatting and the moment pattern"
msgstr ""

#: ../mastering_plone/zpt_2.rst:23
msgid "listings"
msgstr ""

#: ../mastering_plone/zpt_2.rst:24
msgid "skins"
msgstr ""

#: ../mastering_plone/zpt_2.rst:26
msgid ""
"To dive deeper into real Plone data we now look at some existing templates "
"and customize them."
msgstr ""

#: ../mastering_plone/zpt_2.rst:32
msgid "The view for News Items"
msgstr ""

#: ../mastering_plone/zpt_2.rst:34
msgid ""
"We want to show the date a News Item is published. This way people can see "
"at a glance if they are looking at current or old news."
msgstr ""

#: ../mastering_plone/zpt_2.rst:36
msgid ""
"To do this we will customize the template that is used to render News Items."
msgstr ""

#: ../mastering_plone/zpt_2.rst:38
msgid ""
"We use :py:mod:`z3c.jbot` for overriding templates. The package already has "
"the necessary configuration in :file:`browser/configure.zcml`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:40
msgid ""
"Find the file :file:`newsitem.pt` in "
":file:`packages/plone/app/contenttypes/browser/templates/` (in vagrant this "
"directory is in :file:`/home/vagrant/packages`, otherwise it is in your "
"buildout directory)."
msgstr ""

#: ../mastering_plone/zpt_2.rst:42 ../mastering_plone/zpt_2.rst:157
msgid "The file looks like this:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:68 ../mastering_plone/zpt_2.rst:226
msgid "Note the following:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:70
msgid ""
"Like almost all Plone-templates it uses `metal:use-"
"macro=\"context/main_template/macros/master\"` to use the main_template"
msgstr ""

#: ../mastering_plone/zpt_2.rst:71
msgid ""
"This template fills teh same slot `content-core` as the template you created"
" in the last chapter. This means the heading and description are displayed "
"by the `main_template`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:72
msgid ""
"The image and image-caption that is provided by the behavior is not part of "
"the template."
msgstr ""

#: ../mastering_plone/zpt_2.rst:74
msgid ""
"Copy that file into the folder :file:`browser/overrides/` of our package. If"
" you use vagrant you'd have to use::"
msgstr ""

#: ../mastering_plone/zpt_2.rst:78
msgid ""
"Rename the new file from :file:`newsitem.pt` to "
":file:`plone.app.contenttypes.browser.templates.newsitem.pt`. "
":py:mod:`z3c.jbot` allows you to override templates by putting a file inside"
" a special directory with a *canonical name* (i.e. the path of the file "
"separated by `.` plus the original filename)."
msgstr ""

#: ../mastering_plone/zpt_2.rst:79
msgid "Restart Plone"
msgstr "Reinicie Plone"

#: ../mastering_plone/zpt_2.rst:81
msgid "Now Plone will use the new file to override the original one."
msgstr ""

#: ../mastering_plone/zpt_2.rst:83
msgid ""
"Edit the new file "
":file:`plone.app.contenttypes.browser.templates.newsitem.pt` and insert the "
"following before the ``<div id=\"parent-fieldname-text\"``...:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:91
msgid "Since we use Plone 5 and Chameleon we could also write:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:99
msgid "Open an existing news item in the browser"
msgstr ""

#: ../mastering_plone/zpt_2.rst:101
msgid ""
"This will show something like: ``2015-02-21T12:01:31+01:00``. Not very user-"
"friendly. Let's extend the code and use one of many helpers Plone offers."
msgstr ""

#: ../mastering_plone/zpt_2.rst:109
msgid "This will render ``Feb 21, 2015``."
msgstr ""

#: ../mastering_plone/zpt_2.rst:111
msgid ""
"``plone_view`` is the BrowserView "
":py:class:`Products.CMFPlone.browser.ploneview.Plone` and it is defined in "
"the ``main_template`` "
"(:file:`Products/CMFPlone/browser/templates/main_template.pt`) of Plone 5 "
"like this ``plone_view context/@@plone;`` and thus always available."
msgstr ""

#: ../mastering_plone/zpt_2.rst:112
msgid ""
"The method :py:meth:`toLocalizedTime` runs a date object through Plone's "
"``translation_service`` and returns the Date in the current locales format, "
"thus transforming ``2015-02-21T12:01:31+01:00`` to ``Feb 21, 2015``."
msgstr ""

#: ../mastering_plone/zpt_2.rst:114
msgid "The same in a slightly different style:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:124
msgid ""
"Here we first get the Plone view and then the method "
":py:meth:`toLocalizedTime` and we use ``nocall:`` to prevent the method "
":py:meth:`toLocalizedTime` from being called, since we only want to make it "
"available for later use."
msgstr ""

#: ../mastering_plone/zpt_2.rst:128
msgid ""
"On older Plone versions (using Archetypes) we used "
"``python:context.toLocalizedTime(context.Date(), longFormat=False)``. That "
"called the python script ``toLocalizedTime.py`` in the Folder "
"``Products/CMFPlone/skins/plone_scripts/``."
msgstr ""

#: ../mastering_plone/zpt_2.rst:130
msgid ""
"That folder ``plone_scripts`` holds a multitude of useful scripts that are "
"still widely used. But they are all deprecated and most of theme are gone in"
" Plone 5 and replaced by proper python methods in BrowserViews."
msgstr ""

#: ../mastering_plone/zpt_2.rst:133
msgid ""
"We could also leave the formatting to the frontend. Plone 5 comes with the "
"`moment pattern <http://plone.github.io/mockup/dev/#pattern/moment>`_ that "
"uses the library `moment.js "
"<http://plone.github.io/mockup/dev/#pattern/moment>`_ to format dates. Try "
"the relative calendar format:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:142
msgid ""
"Now we should see the date in a user-friendly format like ``Today at 12:01 "
"PM``. Experiment with other formats such as ``calendar`` and ``LT``."
msgstr ""

#: ../mastering_plone/zpt_2.rst:149
msgid "The Summary View"
msgstr ""

#: ../mastering_plone/zpt_2.rst:151
msgid ""
"We use the view \"Summary View\" to list news releases. They should also "
"have the date. The template associated with that view is "
":file:`listing_summary.pt`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:153
msgid "Let's look for the template folder_summary_view.pt::"
msgstr "Echemos un vistazo a la plantilla folder_summary_view.pt::"

#: ../mastering_plone/zpt_2.rst:228
msgid ""
"Unlike :file:`newsitem.pt` the file does not display data from a context but"
" obviously pre-defined variables like `item`, `item_link`, `item_type` or "
"`item_description`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:229
msgid "It reuses multiple macros of a view  `context/@@listing_view`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:230
msgid ""
"The variables are most likely defined in the macro `entries` of that view."
msgstr ""

#: ../mastering_plone/zpt_2.rst:232
msgid ""
"Copy it to :file:`browser/overrides/` and rename it to "
":file:`plone.app.contenttypes.browser.templates.listing_summary.pt`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:234
msgid "Add the following after line 28:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:242
msgid ""
"After you restart the instance and look at the new folder again you'll see "
"the dates. :py:mod:`z3c.jbot` needs a restart to pick up the new file. When "
"you only change a existing override you don't have to restart."
msgstr ""

#: ../mastering_plone/zpt_2.rst:245
msgid ""
"The addition renders the date of the respective objects that the template "
"iterates over (hence ``item`` instead of ``context`` since ``context`` would"
" be either a collection aggregating the news items or a folder containing a "
"news item)."
msgstr ""

#: ../mastering_plone/zpt_2.rst:247
msgid ""
"The date is only displayed if the variable ``item_type`` is ``News Item``."
msgstr ""

#: ../mastering_plone/zpt_2.rst:249
msgid ""
"Let's take a closer look at that template. How does it know that "
"``item_type`` is the name of the content type?"
msgstr ""

#: ../mastering_plone/zpt_2.rst:251
msgid ""
"The first step to uncovering that secret is line 14 of "
":file:`listing_summary.pt`:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:257
msgid ""
"``use-macro`` tells Plone to reuse the macro ``entries`` from the view "
"``listing_view``. That view is defined in "
":file:`packages/plone/app/contenttypes/browser/configure.zcml`. It uses the "
"template :file:`plone/app/contenttypes/browser/templates/listing.pt`. That "
"makes overriding that much easier."
msgstr ""

#: ../mastering_plone/zpt_2.rst:260
msgid ""
"That template :file:`listing.pt` defines the slot ``entries`` like this:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:288
msgid ""
"Here the ``item_type`` is defined as ``item_type item/PortalType``. Let's "
"dig a little deeper and find out what ``item`` and  ``PortalType`` are."
msgstr ""

#: ../mastering_plone/zpt_2.rst:290
msgid ""
"``tal:repeat=\"item batch\"`` tells the template to iterate over an iterable"
" ``batch`` which is defined as ``batch view/batch``."
msgstr ""

#: ../mastering_plone/zpt_2.rst:292
msgid ""
"``view`` is always the BrowserView for which the template is registered. In "
"our case this is either "
":py:class:`plone.app.contenttypes.browser.collection.CollectionView` if you "
"called that view on a collection, or "
":py:class:`plone.app.contenttypes.browser.folder.FolderView` for folders. "
"You might remember that both are defined in :file:`configure.zcml`"
msgstr ""

#: ../mastering_plone/zpt_2.rst:294
msgid "Luckily the first is a class that inherits from the second:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:300
msgid ""
":py:meth:`batch` is a method in :py:class:`FolderView` that turns "
":py:obj:`results` into batches. :py:obj:`results` exists in both classes. "
"This means, in case the item we are looking at is a collection, the method "
":py:meth:`results` of :py:class:`CollectionView`, will be used; and in case "
"it's a folder, the one in :py:class:`FolderView`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:302
msgid ""
"So `batch` is a list of items. The way it is created is actually pretty "
"complicated and makes use of a couple of packages to create a filtered "
"(through :py:mod:`plone.app.querystring`) list of optimized representations "
"(through :py:mod:`plone.app.contentlisting`) of items. For now it is enough "
"to know that `item` represents one of the items in the list of News Items."
msgstr ""

#: ../mastering_plone/zpt_2.rst:304
msgid ""
"The template :file:`listing_summary.pt` is extraordinary in its heavy use of"
" nested macros. Most of the templates you will write are much simpler and "
"easier to read."
msgstr ""

#: ../mastering_plone/zpt_2.rst:306
msgid ""
"Trying to understand templates as complicated as these can be hard, but "
"there is help to be found if you know Python: You can use :py:mod:`pdb` to "
"debug templates line by line."
msgstr ""

#: ../mastering_plone/zpt_2.rst:308
msgid "Add the following to line 29 just before our additions::"
msgstr ""

#: ../mastering_plone/zpt_2.rst:312
msgid ""
"When you reload the page and look at the terminal you see you have pdb-"
"console and can inspect the template at its current state by looking at the "
"variable `econtext`. You can now simply look up what `item ` and "
"`PortalType` are:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:332
msgid ""
"As discovered above `item` is a instance of "
":py:class:`plone.app.contentlisting.catalog.CatalogContentListingObject`. It"
" has several methods and properties:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:346
msgid ""
"`PortalType` is a method that returns the name of the items content-type."
msgstr ""

#: ../mastering_plone/zpt_2.rst:355
msgid ""
"In Plone 4 without :py:mod:`plone.app.contenttypes` the template to "
"customize would be :file:`folder_summary_view.pt`, a skin template for "
"Archetypes that can be found in the folder "
":file:`Products/CMFPlone/skins/plone_content/`. The customized template "
"would be "
":file:`Products.CMFPlone.skins.plone_content.folder_summary_view.pt`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:357
msgid ""
"The Archetypes template for News Items is :file:`newsitems_view.pt` from the"
" same folder. The customized template would then have to be named "
":file:`Products.CMFPlone.skins.plone_content.newsitems_view.pt`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:359
msgid ""
"Keep in mind that not only the names and locations have changed but also the"
" content and the logic behind them!"
msgstr ""

#: ../mastering_plone/zpt_2.rst:365
msgid "Finding the right template"
msgstr "Buscando la correcta plantilla"

#: ../mastering_plone/zpt_2.rst:367
msgid ""
"We changed the display of the listing of news items at "
"http://localhost:8080/Plone/news. But how do we know which template to "
"customize?"
msgstr ""

#: ../mastering_plone/zpt_2.rst:369
msgid ""
"If you don't know which template is used by the page you're looking at you "
"can make an educated guess, start a debug session or use "
":py:mod:`plone.app.debugtoolbar`."
msgstr ""

#: ../mastering_plone/zpt_2.rst:371
msgid ""
"We could check the HTML with Firebug and look for a structure in the content"
" area that looks unique. We could also look for the CSS class of the body"
msgstr ""

#: ../mastering_plone/zpt_2.rst:377
msgid ""
"The class ``template-summary_view`` tells us that the name of the view (but "
"not necessarily the name of the template) is ``summary_view``. So we could "
"search all :file:`*.zcml`-Files for ``name=\"summary_view\"`` or search all "
"templates called :file:`summary_view.pt` and probably find the view and also"
" the corresponding template. But only probably because it would not tell us "
"if the template is already being overridden."
msgstr ""

#: ../mastering_plone/zpt_2.rst:379
msgid ""
"A foolproof way to verify your guess is to modify the template and reload "
"the page. If your modification shows up you obviously found the correct "
"file."
msgstr ""

#: ../mastering_plone/zpt_2.rst:381
msgid ""
"The safest method is using :py:mod:`plone.app.debugtoolbar`.  We already "
"have it in our buildout and only need to install it. It adds a "
"\"Debug\"-Dropdown on top of the page. The section \"Published\" shows the "
"complete path to the template that is used to render the page you are "
"seeing."
msgstr ""

#: ../mastering_plone/zpt_2.rst:383
msgid ""
"The debug session to find the template is a little more complicated. Since "
"we have :py:mod:`Products.PDBDebugMode` in our buildout we can call ``/pdb``"
" on our page. We cannot put a `pdb` in the templates since we do not know "
"(yet) which template to put the `pdb` in."
msgstr ""

#: ../mastering_plone/zpt_2.rst:385
msgid ""
"The object that the URL points to is by default :py:obj:`self.context`. But "
"the first problem is that the URL we're seeing is not the URL of the "
"collection we want to modify. This is because the collection is the default "
"page of the folder ``news``."
msgstr ""

#: ../mastering_plone/zpt_2.rst:406
msgid "Now we see that we already customized the template."
msgstr "Ahora puede ver que nosotros personalizamos la plantilla."

#: ../mastering_plone/zpt_2.rst:408
msgid ""
"Here is a method that could be used in a view or viewlet to display that "
"path:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:423
msgid "skin templates"
msgstr ""

#: ../mastering_plone/zpt_2.rst:427
msgid ""
"Why don't we always only use templates? Because we might want to do "
"something more complicated than get an attribute from the context and render"
" its value in some html tag."
msgstr ""

#: ../mastering_plone/zpt_2.rst:429
msgid ""
"There is a deprecated technology called 'skin templates' that allows you to "
"simply add some page template (e.g. 'old_style_template.pt') to a certain "
"folder in the ZMI or your egg and you can access it in the browser by "
"opening a url like http://localhost:8080/Plone/old_style_template and it "
"will be rendered. But we don't use it and you too should not, even though "
"these skin templates are still all over Plone."
msgstr ""

#: ../mastering_plone/zpt_2.rst:431
msgid ""
"Since we use :py:mod:`plone.app.contenttypes` we do not encounter many skin "
"templates when dealing with content any more. But more often than not you'll"
" have to customize an old site that still uses skin templates."
msgstr ""

#: ../mastering_plone/zpt_2.rst:433
msgid ""
"Skin templates and Python scripts in ``portal_skins`` are deprecated "
"because:"
msgstr ""

#: ../mastering_plone/zpt_2.rst:435
msgid "they use restricted Python"
msgstr ""

#: ../mastering_plone/zpt_2.rst:436
msgid "they have no nice way to attach Python code to them"
msgstr ""

#: ../mastering_plone/zpt_2.rst:437
msgid ""
"they are always callable for everything (they can't easily be bound to an "
"interface)"
msgstr ""

#: ../mastering_plone/zpt_2.rst:443
msgid "Overriding templates with :py:mod:`z3c.jbot` is easy."
msgstr ""

#: ../mastering_plone/zpt_2.rst:444
msgid "Understanding templates can be hard."
msgstr ""

#: ../mastering_plone/zpt_2.rst:445
msgid "Use plone.app.debugtoolbar and pdb are there to help you."
msgstr ""

#: ../mastering_plone/zpt_2.rst:446
msgid ""
"Skin templates are deprecated, you will probably only encounter when you "
"work on Plone 4"
msgstr ""
