# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-11 11:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Leonardo J. Caballero G. <leonardocaballero@gmail.com>, 2016\n"
"Language-Team: Spanish (https://www.transifex.com/plone/teams/21152/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../extending.rst:2
msgid "Extending Plone"
msgstr "Extendiendo Plone"

#: ../extending.rst:4
msgid "Zope is extensible and so is Plone."
msgstr "Zope es extensible y también lo es Plone."

#: ../extending.rst:8
msgid ""
"If you want to install an add-on, you are going to install an Egg — a form "
"of Python package. Eggs consist of Python files together with other needed "
"files like page templates and the like and a bit of Metadata, bundled to a "
"single archive file."
msgstr ""
"Si desea instalar un complemento, se va a instalar un paquete Egg - una "
"forma de paquete Python. Los paquetes Eggs consisten en archivos Python "
"junto con otros ficheros necesarios como plantillas de páginas y similares, "
"y un poco de metadatos, que se incluye en un solo archivo."

#: ../extending.rst:10
msgid ""
"There is a huge variety of Plone-compatible packages available. Most are "
"listed in the `Python Package Index <https://pypi.python.org/pypi>`_. A more"
" browse-able listing is available at the `Plone.org add-on listing "
"<https://old.plone.org/products/>`_. The source repository for many public "
"Plone add-ons is `the GitHub Collective <https://github.com/collective>`_. "
"You may also create your own packages or maintain custom repositories."
msgstr ""
"Hay una gran variedad de paquetes compatibles con Plone disponibles. La "
"mayor parte se enumeran en el `Python Package Index "
"<https://pypi.python.org/pypi>`_. Una lista más navegable está disponible en "
"la `antigua lista complemento de Plone.org <https://old.plone.org/products/>`_ "
"y la `nueva lista complemento de Plone.org <https://plone.org/download/add-ons>`_. El "
"repositorio de código fuente para muchos complementos públicos Plone esta en"
" la organización `Collective de GitHub <https://github.com/collective>`_. "
"También puede crear sus propios paquetes o mantener repositorios "
"personalizados."

#: ../extending.rst:12
msgid ""
"Eggs are younger than Zope. Zope needed something like eggs before there "
"were eggs, and the Zope developers wrote their own system. Old, outdated "
"Plone systems contain a lot of code that is not bundled in an egg. Older "
"code did not have metadata to register things, instead you needed a special "
"setup method. We don't need this method but you might see it in other code. "
"It is usually used to register Archetypes code. Archetypes is the old "
"content type system. We use Dexterity."
msgstr ""
"En Zope los paquetes Eggs son menores \"en edad\". Zope necesitaba algo "
"como los paquetes eggs antes no había eggs, y los desarrolladores Zope "
"escribieron su propio sistema. En la antigüedad los sistemas obsoletos Plone"
" contenían una gran cantidad de código fuente no incluidos en un paquete "
"egg. El código fuente antiguo no tenía metadatos para registrar las cosas, "
"en vez que necesitaba un método de configuración especial. No necesitamos "
"este método, pero podríamos verlo en otro código fuente. Normalmente se "
"utiliza para registrar el código Archetypes. Los Archetypes es el viejo "
"sistema de tipo de contenido. Ahora utilizamos el nuevo sistema de tipo de "
"contenido Dexterity."

#: ../extending.rst:16
msgid "Extension technologies"
msgstr "Tecnologías de extensión"

#: ../extending.rst:18
msgid "How do you extend Plone?"
msgstr "¿Cómo extender Plone?"

#: ../extending.rst:20
msgid "This depends on what type of extension you want to create."
msgstr "Esto depende de que tipo de extensión usted quiere crear."

#: ../extending.rst:25
msgid ""
"You can create extensions with new types of objects to add to your Plone "
"site. Usually these are content types."
msgstr ""
"Puede crear extensiones con nuevos tipos de objetos para añadir a su sitio "
"Plone. Por lo general, estos son los tipos de contenido."

#: ../extending.rst:26
msgid ""
"You can create an extension that changes or extends functionality. For "
"example to change the way Plone displays search results, or to make pictures"
" search-able by adding a converter from jpg to text."
msgstr ""
"Puede crear una extensión que cambia o se extiende la funcionalidad. Por "
"ejemplo, para cambiar la forma en que Plone muestra los resultados de "
"búsqueda, o hacer a las imágenes que sean analizadas en búsqueda del algún "
"texto que incluya en la misma mediante la adición de un convertidor de JPG a"
" texto."

#: ../extending.rst:30
msgid "skin_folders"
msgstr "skin_folders"

#: ../extending.rst:40
msgid ""
"Do you remember Acquisition? The Skin Folders extends the concepts of "
"Acquisition. Your Plone site has a folder named ``portal_skins``. This "
"folder has a number of sub folders. The ``portal_skins`` folder has a "
"property that defines in which order Plone searches for attributes or "
"objects in each sub folder."
msgstr ""
"¿Te acuerdas del concepto Adquisición? Las Skin Folders se extiende los "
"conceptos de Adquisición. Su sitio Plone tiene una carpeta denominada "
"``portal_skins``. Esta carpeta tiene una serie de sub-carpetas. La carpeta "
"``portal_skins`` tiene una propiedad que define el orden en que las "
"búsquedas de Plone para atributos u objetos en cada sub-carpeta."

#: ../extending.rst:42
msgid "The Plone logo is in a skin folder."
msgstr "El logo de Plone está en una carpeta skin."

#: ../extending.rst:44
msgid ""
"By default, your site has a ``custom`` folder, and items are first searched "
"for in that folder."
msgstr ""
"Por defecto, su sitio tiene una carpeta ``custom``, y los elementos son "
"primero buscados en esa carpeta."

#: ../extending.rst:46
msgid ""
"To customize the logo, you copy it into the ``custom`` folder, and change it"
" there. This way you can change templates, CSS styles, images and behavior, "
"because a container may contain python scripts."
msgstr ""
"Para personalizar el logotipo, usted copia en la carpeta ``custom``, y lo "
"cambia allí. De esta manera usted puede cambiar las plantillas, los estilos "
"CSS, imágenes y comportamientos, ya que un contenedor puede contener scripts"
" python."

#: ../extending.rst:48
msgid ""
"Skin-folder style customization may be accomplished TTW via the ZMI, or with"
" add-on packages. Many older-style packages create their own skin folder and"
" add it to the skin layer for Plone when installed."
msgstr ""
"La personalización del estilo de la carpeta Skins se puede lograr a través "
"de la Web usando la ZMI, o con paquetes de complementos. Muchos paquetes de "
"estilo antiguo crean su propia carpeta de skin y la agregan a la capa de "
"skin para Plone cuando se instala."

#: ../extending.rst:52
msgid "GenericSetup"
msgstr "GenericSetup"

#: ../extending.rst:62
msgid ""
"The next thing is *GenericSetup*. As the name clearly implies, "
"*GenericSetup* is part of CMF."
msgstr ""
"El siguiente paso es *GenericSetup*. Como su nombre lo indica claramente, "
"*GenericSetup* es parte de CMF."

#: ../extending.rst:64
msgid "GenericSetup is tough to master, I am afraid."
msgstr "Me temo que GenericSetup es difícil de dominar."

#: ../extending.rst:66
msgid ""
"*GenericSetup* lets you define persistent configuration in XML files. "
"*GenericSetup* parses the XML files and updates the persistent configuration"
" according to the configuration. This is a step you have to run on your own!"
msgstr ""
"*GenericSetup* le permite definir la configuración persistente en archivos "
"XML. *GenericSetup* analiza los archivos XML y actualiza la configuración "
"persistente según la configuración. ¡Este es un paso que tiene que correr "
"por su cuenta!"

#: ../extending.rst:68
msgid ""
"You will see many objects in Zope or the ZMI that you can customize through "
"the web. If they are well behaving, they can export their configuration via "
"*GenericSetup* and import it again."
msgstr ""
"Usted verá muchos objetos en Zope o la ZMI que se pueden personalizar a "
"través de la web. Si estás personalizaciones están listas, usted puede "
"exportar su configuración a través *GenericSetup* e importarlo de nuevo."

#: ../extending.rst:70
msgid ""
"Typically you use *GenericSetup* directly to change workflows or add new "
"content type definitions."
msgstr ""
"Normalmente se usa directamente *GenericSetup* para cambiar los flujos de "
"trabajo o añadir nuevas definiciones de tipo de contenido."

#: ../extending.rst:72
msgid ""
"GenericSetup profiles may also be built into Python packages. Every package "
"that is listed on the add-on package list inside a Plone installation has a "
"GS profile that details how it fits into Plone. Packages that are part of "
"Plone itself may have GS profiles, but are excluded from the active/inactive"
" listing."
msgstr ""
"Los perfiles GenericSetup también pueden ser construidos en los paquetes de "
"Python. Cada paquete que aparece en la lista de paquetes de complemento "
"dentro de una instalación Plone tiene un perfil de GS que detalla cómo "
"encaja en Plone. Los paquetes que forman parte de la propia Plone pueden "
"tener perfiles GS, pero están excluidos de la lista activa / inactiva."

#: ../extending.rst:76
msgid "Component Architecture"
msgstr "Arquitectura Componente"

#: ../extending.rst:87
msgid "The last way to extend Plone is via *Components*."
msgstr "La última manera de extender Plone es a través de los *Componentes*."

#: ../extending.rst:89
msgid "A bit of history is in order."
msgstr "Un poco de historia está a la orden."

#: ../extending.rst:91
msgid "When Zope started, object-oriented Design was **the** silver bullet."
msgstr ""
"Cuando comenzó Zope, el Diseño orientado a objetos fue la **bala de plata**,"
" es decir, una solución rápida a un problema difícil."

#: ../extending.rst:93
msgid ""
"Object-oriented design is good at modeling inheritance, but breaks down when"
" an object has multiple aspects that are part of multiple taxonomies."
msgstr ""
"Diseño orientado a objetos es bueno en el modelado herencia, pero se rompe "
"cuando un objeto tiene varios aspectos que forman parte de múltiples "
"taxonomías."

#: ../extending.rst:95
msgid ""
"Some object-oriented programming languages like Python handle this through "
"multiple inheritance. But it's not a good way to do it. Zope objects have "
"more than 10 base classes. Too many namespaces makes code that's hard to "
"maintain. Where did that method/attribute come from?"
msgstr ""
"Algunos lenguajes de programación orientados a objetos como Python manejan "
"esto a través de la herencia múltiple. Pero no es una buena manera de "
"hacerlo. Los objetos Zope tienen más de 10 clases de base. Demasiados "
"espacios de nombres hace al código difícil de mantener. ¿De dónde vino ese "
"método / atributo?"

#: ../extending.rst:97
msgid ""
"After a while, XML and Components became the next silver bullet (Does "
"anybody remember J2EE?)."
msgstr ""
"Después de un tiempo, XML y los componentes se convirtieron en la próxima "
"**bala de plata** (¿Alguien recuerda J2EE?)."

#: ../extending.rst:99
msgid ""
"Based on their experiences with Zope in the past, they thought that a "
"component system configured via XML might be the way to go to keep the code "
"more maintainable."
msgstr ""
"Basado de sus experiencias con Zope en el pasado, ellos pensaron que un "
"sistema de componente es configurado a través de XML podría ser la forma "
"cuidar que el código sea más fácil de mantener."

#: ../extending.rst:101
msgid ""
"As the new concepts were radically different from the old Zope concepts, the"
" Zope developers renamed the new project to Zope 3. But it did not gain "
"traction, the community somehow renamed it to Bluebream and this died off."
msgstr ""
"A medida que los nuevos conceptos eran radicalmente diferentes de los viejos"
" conceptos de Zope, los desarrolladores Zope cambió el nombre del nuevo "
"proyecto de Zope 3. Pero no ganaron fuerza, la comunidad de alguna manera le"
" cambió el nombre a Bluebream y esto lo extinguió."

#: ../extending.rst:103
msgid ""
"But the component architecture itself is quite successful and the Zope "
"developer extracted it into the Zope Toolkit. The Zope toolkit is part of "
"Zope, and Plone developers use it extensively."
msgstr ""
"Pero la arquitectura de componentes en sí es bastante acertada y el "
"desarrollador Zope extrajo el Zope Toolkit. El Zope Toolkit es parte de Zope"
" y los desarrolladores Plone lo utilizan ampliamente."

#: ../extending.rst:105
msgid "This is what you want to use."
msgstr "Esto es lo que usted desea utilizar."

#: ../extending.rst:109
msgid "What are components, what is ZCML"
msgstr "¿Cuáles son los componentes?, ¿Que es el ZCML?"

#: ../extending.rst:113
msgid "What is the absolute simplest way to extend functionality?"
msgstr "¿Cuál es la manera más simple absoluta para ampliar la funcionalidad?"

#: ../extending.rst:115
msgid "Monkey Patching."
msgstr "Monkey Patching."

#: ../extending.rst:117
msgid ""
"It means that you change code in other files while my file gets loaded."
msgstr ""
"Eso significa que usted puedo cambiar el código en otros archivos mientras "
"mi archivo se carga."

#: ../extending.rst:119
msgid ""
"If you want to have an extensible registry of icons for different content "
"types, you could create a global dictionary, and whoever implements a new "
"icon for a different content type, would add an entry to my dictionary "
"during import time."
msgstr ""
"Si usted quiere tener un registro extensible de iconos para los distintos "
"tipos de contenido, usted podría crear un diccionario global, y que "
"implementa en un nuevo icono para un tipo de contenido diferente, podría "
"añadir una entrada en mi diccionario durante el tiempo de importación."

#: ../extending.rst:121
msgid ""
"This approach, like subclassing via multiple inheritance, does not scale. "
"Multiple plugins might overwrite each other, you would explain people that "
"they have to reorder the imports, and then, suddenly, you will to import "
"feature A before B, B before C and C before A, or else you application won't"
" work."
msgstr ""
"Este enfoque, como subclases mediante herencia múltiple, no escala. "
"Múltiples extensiones pueden sobrescribir los demás, usted debería explicar "
"a la gente que tiene que reordenar las importaciones, y luego, de repente, "
"se le importar característica A antes que B, B antes de C y C antes de A, o "
"de lo contrario la aplicación no funcionará."

#: ../extending.rst:123
msgid ""
"The Zope Component Architecture with its ZCML configuration is an answer to "
"this problems."
msgstr ""
"La arquitectura de componentes de Zope con su configuración ZCML es la "
"respuesta para sus problemas."

#: ../extending.rst:125
msgid ""
"With ZCML you declare utilities, adapters and browser views in ZCML, which "
"is a XML dialect. ZCML stands for Zope Component Markup Language."
msgstr ""
"Con ZCML declarar las utilidades, los adaptadores y las browser views en "
"ZCML, el cual es un dialecto de XML que significa Zope Component Markup "
"Language."

#: ../extending.rst:127
msgid ""
"Components are differentiated from one another by the interfaces (formal "
"definitions of functionality) that they require or provide."
msgstr ""
"Los componentes se diferencian entre sí por las interfaces (definiciones "
"formales de funcionalidad) que requieren o proporcionan."

#: ../extending.rst:129
msgid ""
"During startup, Zope reads all these ZCML statements, validates that there "
"are not two declarations trying to register the same components and only "
"then registers everything. All components are registered by interfaces "
"required and provided. Components with the same interfaces may optionally "
"also be named."
msgstr ""
"Durante el inicio, Zope lee todas estas declaraciones ZCML, valida que no "
"hay dos declaraciones que tratan de registrar los mismos componentes y sólo "
"entonces registra todo. Todos los componentes están registrados por "
"interfaces necesarias y proporcionadas. Los componentes con las mismas "
"interfaces también pueden opcionalmente ser nombrados."

#: ../extending.rst:131
msgid ""
"This is a good thing. ZCML is, by the way, only *one* way to declare your "
"configuration."
msgstr ""
"Esta es una buena cosa. ZCML es por cierto sólo *una* manera de declarar su "
"configuración."

#: ../extending.rst:133
msgid ""
"Grok provides another way, where some Python magic allows you to use "
"decorators to register Python classes and functions as components. You can "
"use ZCML and Grok together if you wish."
msgstr ""
"Grok proporciona otra manera, donde un poco de magia Python permite usar "
"decoradores para registrar clases Python y funciones como componentes. Usted"
" puede usar tanto ZCML y Grok juntos si usted lo desea."

#: ../extending.rst:135
msgid ""
"Some like Grok because it allows you to do nearly everything in your Python "
"source files. No additional XML wiring required. If you're XML-allergic, "
"Grok is your ticket to Python nirvana."
msgstr ""
"A algunos les gusta Grok porque le permite hacer casi todo en sus archivos "
"fuentes Python. No requiere cableado adicional XML. Si usted es alérgico a "
"XML , Grok es su boleto al  nirvana Python."

#: ../extending.rst:137
msgid ""
"Not everybody loves Grok. Some parts of the Plone community think that there"
" should only be one configuration language, others are against adding the "
"relative big dependency of Grok to Plone. One real problem is the fact that "
"you cannot customize components declared with grok with jbot (which we'll "
"discuss later). Grok is not allowed in the Plone core for these reasons."
msgstr ""
"Tenga en cuenta que no todo el mundo le encanta Grok. Algunas partes de la "
"comunidad Plone piensan que sólo puede haber un lenguaje de configuración, "
"otros están en contra de añadir la gran dependencia relativa de Grok para "
"Plone. Un problema real es el hecho de que no se puede personalizar "
"componentes declarados con Grok con técnicas jbot (del que hablaremos más "
"adelante). Grok no está permitido en el núcleo de Plone por estas razones."

#: ../extending.rst:139
msgid ""
"The choice to Grok or not to Grok is yours to make. In any case, if you "
"start to write an extension that is reusable, convert your grok declarations"
" to ZCML to get maximum acceptance."
msgstr ""
"La elección de Grok o no Grok es suya. En cualquier caso, si usted comienza "
"a escribir una extensión que es reutilizable, convertir sus declaraciones "
"Grok a ZCML para conseguir la máxima aceptación."

#: ../extending.rst:141
msgid ""
"Personally, I just find it cumbersome but even for me as a developer it "
"offers a nice advantage: thanks to ZCML, I hardly ever have a hard time to "
"find out what and where extensions or customizations. For me, ZCML files are"
" like a phone book."
msgstr ""
"Personalmente, me resulta engorroso pero incluso para mí como un "
"desarrollador que ofrece una buena ventaja: gracias a ZCML, casi nunca tengo"
" dificultades para averiguar qué y dónde extensiones o personalizaciones. "
"Para mí, los archivos ZCML son como una guía telefónica."
