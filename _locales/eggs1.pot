# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-22 16:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../eggs1.rst:2
msgid "Creating addons to customize Plone"
msgstr ""

#: ../eggs1.rst:0
msgid "Get the code!"
msgstr ""

#: ../eggs1.rst:6
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout-directory:"
msgstr ""

#: ../eggs1.rst:12
msgid "In this part you will:"
msgstr ""

#: ../eggs1.rst:14
msgid "Create a custom python distribution ``ploneconf.site`` to hold all the code"
msgstr ""

#: ../eggs1.rst:15
msgid "Modify buildout to install that distribution"
msgstr ""

#: ../eggs1.rst:18
msgid "Topics covered:"
msgstr ""

#: ../eggs1.rst:20
msgid "mr.bob and bobtemplates.plone"
msgstr ""

#: ../eggs1.rst:21
msgid "the structure of eggs"
msgstr ""

#: ../eggs1.rst:25
msgid "Creating the distribution"
msgstr ""

#: ../eggs1.rst:27
msgid "Our own code has to be organized as a python distribution, also called *egg*. An egg is a zip file or a directory that follows certain conventions. We are going to use `bobtemplates.plone <https://pypi.python.org/pypi/bobtemplates.plone>`_ to create a skeleton project. We only need to fill in the blanks."
msgstr ""

#: ../eggs1.rst:29
msgid "We create and enter the ``src`` directory (*src* is short for *sources*) and call a script called ``mrbob`` from our buildout's bin directory:"
msgstr ""

#: ../eggs1.rst:37
msgid "We have to answer some questions about the add-on. We will press :kbd:`Enter` (i.e. choosing the default value) for all questions except 3 (where you enter your github username if you have one) and 5 (Plone version), where we enter :kbd:`4.3.10`."
msgstr ""

#: ../eggs1.rst:57
msgid "If this is your first egg, this is a very special moment. We are going to create the egg with a script that generates a lot of necessary files. They all are necessary, but sometimes in a subtle way. It takes a while to understand their full meaning. Only last year I learned and understood why I should have a ``MANIFEST.in`` file. You can get along without one, but trust me, you get along better with a proper manifest file."
msgstr ""

#: ../eggs1.rst:63
msgid "Inspecting the distribution"
msgstr ""

#: ../eggs1.rst:65
msgid "In ``src`` there is now a new folder ``ploneconf.site`` and in there is the new distribution. Let's have a look at some of the files:"
msgstr ""

#: ../eggs1.rst:68
msgid "bootstrap-buildout.py, buildout.cfg, travis.cfg, .travis.yml, .coveragerc"
msgstr ""

#: ../eggs1.rst:68
msgid "You can ignore these files for now. They are here to create a buildout only for this egg to make testing it easier. Once we start writing tests for this distribution we will have another look at them."
msgstr ""

#: ../eggs1.rst:71
msgid "README.rst, CHANGES.rst, CONTRIBUTORS.rst, docs/"
msgstr ""

#: ../eggs1.rst:71
msgid "The documentation, changelog, the list of contributors and the license of your egg goes in here."
msgstr ""

#: ../eggs1.rst:74
msgid "setup.py"
msgstr ""

#: ../eggs1.rst:74
msgid "This file configures the distribution, its name, dependencies and some metadata like the author's name and email address. The dependencies listed here are automatically downloaded when running buildout."
msgstr ""

#: ../eggs1.rst:79
msgid "src/ploneconf/site/"
msgstr ""

#: ../eggs1.rst:77
msgid "The distribution itself lives inside a special folder structure. That seems confusing but is necessary for good testability. Our distribution contains a `namespace package <https://www.python.org/dev/peps/pep-0420/>`_ called *ploneconf.site* and because of this there is a folder ``ploneconf`` with a ``__init__.py`` and in there another folder ``site`` and in there finally is our code. From the buildout's perspective our code is in ``<your buildout directory>/src/ploneconf.site/src/ploneconf/site/<real code>``"
msgstr ""

#: ../eggs1.rst:83
msgid "Unless discussing the buildout we will from now on silently omit these folders when describing files and assume that ``<your buildout directory>/src/ploneconf.site/src/ploneconf/site/`` is the root of our distribution!"
msgstr ""

#: ../eggs1.rst:87
msgid "configure.zcml (src/ploneconf/site/configure.zcml)"
msgstr ""

#: ../eggs1.rst:87
msgid "The phone book of the distribution. By reading it you can find out which functionality is registered though the component architecture."
msgstr ""

#: ../eggs1.rst:90
msgid "setuphandlers.py (src/ploneconf/site/setuphandlers.py)"
msgstr ""

#: ../eggs1.rst:90
msgid "This holds code that is automatically run when installing and uninstalling our add-on."
msgstr ""

#: ../eggs1.rst:93
msgid "interfaces.py (src/ploneconf/site/interfaces.py)"
msgstr ""

#: ../eggs1.rst:93
msgid "Here a browserlayer is defined in a straightforward python class. We will need it later."
msgstr ""

#: ../eggs1.rst:96
msgid "testing.py"
msgstr ""

#: ../eggs1.rst:96
msgid "This holds the setup for running tests."
msgstr ""

#: ../eggs1.rst:99
msgid "tests/"
msgstr ""

#: ../eggs1.rst:99
msgid "This holds the tests."
msgstr ""

#: ../eggs1.rst:102
msgid "browser/"
msgstr ""

#: ../eggs1.rst:102
msgid "This directory is a python package (because it has a ``__init__.py``) and will by convention hold most things that are visible in the browser."
msgstr ""

#: ../eggs1.rst:105
msgid "browser/configure.zcml"
msgstr ""

#: ../eggs1.rst:105
msgid "The phonebook of the browser package. Here views, resources and overrides are registered."
msgstr ""

#: ../eggs1.rst:108
msgid "browser/overrides/"
msgstr ""

#: ../eggs1.rst:108
msgid "This add-on is already configured to allow overriding existing default Plone templates."
msgstr ""

#: ../eggs1.rst:111
msgid "browser/static/"
msgstr ""

#: ../eggs1.rst:111
msgid "A directory that holds static resources (images/css/js). The files in here will be accessible through URLs like ``++resource++ploneconf.site/myawesome.css``"
msgstr ""

#: ../eggs1.rst:114
msgid "profiles/default/"
msgstr ""

#: ../eggs1.rst:114
msgid "This folder contains the GenericSetup profile. During the training we will put some xml files here that hold configuration for the site."
msgstr ""

#: ../eggs1.rst:117
msgid "profiles/default/metadata.xml"
msgstr ""

#: ../eggs1.rst:117
msgid "Version number and dependencies that are auto-installed when installing our add-on."
msgstr ""

#: ../eggs1.rst:124
msgid "Including the egg in Plone"
msgstr ""

#: ../eggs1.rst:126
msgid "Before we can use our new addon we have to tell Plone about it. Edit ``buildout.cfg`` and uncomment ``ploneconf.site`` in the `eggs` and `sources` sections:"
msgstr ""

#: ../eggs1.rst:144
msgid "This tells Buildout to add the egg ``ploneconf.site``. Since it is also in the `sources`-section Buildout will not try to download it from pypi but will expect it in ``src/ploneconf.site``. *fs* allows you to add packages on the file system without a version control system, or with an unsupported one."
msgstr ""

#: ../eggs1.rst:146
msgid "Now run buildout to reconfigure Plone with the updated configuration:"
msgstr ""

#: ../eggs1.rst:152
msgid "After restarting Plone with ``./bin/instance fg`` the new addon `ploneconf.site` is available for install like PloneFormGen or Plone True Gallery."
msgstr ""

#: ../eggs1.rst:154
msgid "We will not install it now since we did not add any of our own code or configuration yet. Let's do that."
msgstr ""

#: ../eggs1.rst:157
msgid "Return to Dexterity: moving content types into code"
msgstr ""

#: ../eggs1.rst:159
msgid "Remember the *Talks* content type that we created through-the-web with Dexterity? Let's move that new content type into our add-on package so that it may be installed in other sites without TTW manipulation."
msgstr ""

#: ../eggs1.rst:161
msgid "Steps:"
msgstr ""

#: ../eggs1.rst:163
msgid "Return to the Dexterity control panel"
msgstr ""

#: ../eggs1.rst:164
msgid "Export the Type Profile and save the file"
msgstr ""

#: ../eggs1.rst:165
msgid "Delete the Type from the site before installing it from the file system"
msgstr ""

#: ../eggs1.rst:166
msgid "Extract the files from the exported tar-file and add them to our addon-package in ``ploneconf/site/profiles/default/``"
msgstr ""

#: ../eggs1.rst:168
msgid "The file ``ploneconf/site/profiles/default/types.xml`` tells plone that there is a new content type defined in file ``talk.xml``."
msgstr ""

#: ../eggs1.rst:179
msgid "Upon installing, Plone reads the file ``ploneconf/site/profiles/default/types/talk.xml`` and registers a new type in ``portal_types`` (you can find this tool in the ZMI) with the information taken from that file."
msgstr ""

#: ../eggs1.rst:277
msgid "Now our package has some real contents. So, we'll need to reinstall it (if installed before)."
msgstr ""

#: ../eggs1.rst:279
msgid "Restart Plone."
msgstr ""

#: ../eggs1.rst:280
msgid "Re-install ploneconf.site (deactivate and activate)."
msgstr ""

#: ../eggs1.rst:281
msgid "Go to the ZMI and look at the definition of the new type in ``portal_types``."
msgstr ""

#: ../eggs1.rst:282
msgid "Test the type by adding an object or editing one of the old ones."
msgstr ""

#: ../eggs1.rst:283
msgid "Look at how the talks are presented in the browser."
msgstr ""

