# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-22 16:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../views_2.rst:2
msgid "Views II: A default view for \"talk\""
msgstr ""

#: ../views_2.rst:0
msgid "Get the code!"
msgstr ""

#: ../views_2.rst:6
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout-directory:"
msgstr ""

#: ../views_2.rst:14
msgid "View-Classes"
msgstr ""

#: ../views_2.rst:16
msgid "Earlier we wrote a demo view which we also used to experiment with page templates. Let us have a look at the zcml and the Page Template again. I have extended the code just slightly."
msgstr ""

#: ../views_2.rst:20
#: ../views_2.rst:97
msgid "``browser/configure.zcml``"
msgstr ""

#: ../views_2.rst:40
#: ../views_2.rst:110
msgid "``browser/views.py``"
msgstr ""

#: ../views_2.rst:70
msgid "Do you remember the term MultiAdapter? The browser page is just a MultiAdapter. The ZCML statement ``browser:page`` registers a MultiAdapter and adds additional things needed for a browser view."
msgstr ""

#: ../views_2.rst:72
msgid "An adapter adapts things, a MultiAdapter adapts multiple things."
msgstr ""

#: ../views_2.rst:74
msgid "When you enter an url, Zope tries to find an object for it. At the end, when Zope does not find any more objects but there is still a path item left, or there are no more path items, Zope looks for an adapter that will reply to the request."
msgstr ""

#: ../views_2.rst:76
msgid "The adapter adapts the request and the object that Zope found with the URL. The adapter class gets instantiated with the objects to be adapted, then it gets called."
msgstr ""

#: ../views_2.rst:78
msgid "The code above does the same thing that the standard implementation would do. It makes context and request available as variables on the object."
msgstr ""

#: ../views_2.rst:80
msgid "I have written down these methods because it important to understand some important concepts."
msgstr ""

#: ../views_2.rst:82
msgid "The init method gets called while Zope is still *trying* to find a view. At that phase, the security has not been resolved. Your code is not security checked. For historic reasons, many errors that happen in the init method can result in a page not found error instead of an exception."
msgstr ""

#: ../views_2.rst:84
msgid "Don't do much at all in the init method. Instead you have the guarantee that the call method is called before anything else (except the init method). It has the security checks in place and so on."
msgstr ""

#: ../views_2.rst:86
msgid "From a practical standpoint, consider the call method your init method, the biggest difference is that this method is supposed to return the html already. Let your base class handle the html generation."
msgstr ""

#: ../views_2.rst:93
msgid "The default-view"
msgstr ""

#: ../views_2.rst:95
msgid "Now we finally add the default-view for talks in views.py"
msgstr ""

#: ../views_2.rst:122
msgid "The DefaultView base class in plone.dexterity only exists for Dextertity-Objects and has some very useful available to the template:"
msgstr ""

#: ../views_2.rst:124
msgid "view.w is a dictionary of all the display widgets, keyed by field names. This includes widgets from alternative fieldsets."
msgstr ""

#: ../views_2.rst:125
msgid "view.widgets contains a list of widgets in schema order for the default fieldset."
msgstr ""

#: ../views_2.rst:126
msgid "view.groups contains a list of fieldsets in fieldset order."
msgstr ""

#: ../views_2.rst:127
msgid "view.fieldsets contains a dict mapping fieldset name to fieldset"
msgstr ""

#: ../views_2.rst:128
msgid "On a fieldset (group), you can access a widgets list to get widgets in that fieldset"
msgstr ""

#: ../views_2.rst:132
msgid "``plone.dexterity.browser.view.DefaultView`` has the same features as the grok-equivalent ``plone.directives.dexterity.DisplayForm``."
msgstr ""

#: ../views_2.rst:134
msgid "The template ``templates/talkview.pt`` uses the pattern ``view/w/<fieldname>/render`` to render some widgets."
msgstr ""

#: ../views_2.rst:157
msgid "After a restart, we can test our view by going to a talk and add /talkview to the url."
msgstr ""

#: ../views_2.rst:159
msgid "We should tell Plone, that the talkview should be used as the default view for talks instead of the built-in view."
msgstr ""

#: ../views_2.rst:161
msgid "This is a configuration that you can change during runtime and is stored in the database, as such it is also managed by GenericSetup profiles."
msgstr ""

#: ../views_2.rst:165
msgid "To change it ttw got to the ZMI (http://localhost:8080/Plone/manage), go to ``portal_types`` and select the type for which the new should be selectable (*talk*). Now add ``talkview`` to the list *Available view methods*. Now the new view is available in the menu *Display*. To make it the default view enter it in ``Default view method``."
msgstr ""

#: ../views_2.rst:167
msgid "open ``profiles/default/types/talk.xml``:"
msgstr ""

#: ../views_2.rst:181
msgid "We will have to either reinstall our addon or run the generic-setup step ``typeinfo`` so Plone learns about the change."
msgstr ""

#: ../views_2.rst:183
msgid "We could also tell plone about this in the ZMI: http://localhost:8080/Plone/portal_types/talk/manage_propertiesForm"
msgstr ""

#: ../views_2.rst:185
msgid "Let's improve the talkview to show all the info we want."
msgstr ""

#: ../views_2.rst:187
msgid "``templates/talkview.pt``:"
msgstr ""

#: ../views_2.rst:234
msgid "Exercise"
msgstr ""

#: ../views_2.rst:236
msgid "Add the new field \"room\" to the Talk type (TTW) and display it below Audience in the browser view, it should contain the following data:"
msgstr ""

#: ../views_2.rst:238
msgid "Title: Room"
msgstr ""

#: ../views_2.rst:239
msgid "Possible values: Room 101, Room 102, Auditorium"
msgstr ""

#: ../views_2.rst:241
msgid "Solution"
msgstr ""

#: ../views_2.rst:244
msgid "Go to http://localhost:8080/Plone/dexterity-types/talk/@@fields and add the new fields"
msgstr ""

#: ../views_2.rst:245
msgid "Add the new HTML below the audience part:"
msgstr ""

#: ../views_2.rst:258
msgid "http://docs.plone.org/4/en/develop/plone/views/browserviews.html"
msgstr ""

